consumes:
- application/json
definitions:
  AcceptPPDMEULA:
    description: Accept PPDM EULA request.
    properties:
      accepted:
        type: boolean
    type: object
  AcceptTelemetryEULA:
    description: Accept Telemetry EULA request.
    properties:
      accepted:
        type: boolean
    type: object
  AccessToken:
    description: Access token information provided from a successful user login. The
      information includes the access token, access token expiration time, and refresh
      token. The access token is used for subsequent authorized actions.
    properties:
      access_token:
        description: 'The access token issued by the authorization server

          as described in RFC 6749 Section 1.4.'
        pattern: ^[\w\-]+?\.[\w\-]+?\.[\w\-]+?$
        type: string
      expires_in:
        description: 'The lifetime in seconds of the access token

          as described in RFC 6749 Section 4.2.2.'
        exclusiveMinimum: false
        format: int32
        minimum: 0
        type: integer
      jti:
        description: 'Unique ID of the access_token.

          It is also a reserved JWT claim and provides a unique identifier for the
          JWT (JWT ID)

          as described in RFC 7519 Section 4.1.7.

          The value is a case-sensitive string.'
        format: string
        type: string
      refresh_token:
        description: 'The refresh token issued by the authorization server

          to obtain a new access token when the current

          access token becomes invalid or expires

          as described in RFC 6749 Section 1.5.'
        pattern: ^[\w\-]+?\.[\w\-]+?\.[\w\-]+?$
        type: string
      scope:
        description: The scope of the access token as described by RFC 6749 Section
          3.3.
        type: string
      token_type:
        description: 'The type of the token issued as described in RFC 6749 Section
          7.1.

          Value is case insensitive.'
        type: string
    required:
    - access_token
    - token_type
    type: object
  Activities:
    description: Get Activities.
    properties:
      content:
        items:
          $ref: '#/definitions/Activity'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Activity:
    description: An activity represents a long running asynchronous execution in the
      system. It can represent a group of jobs, a single job, or a single task.
    properties:
      actions:
        $ref: '#/definitions/ActivityActions'
      asset:
        $ref: '#/definitions/Resource'
      averageBytesTransferred:
        description: This parameter is for running job group only. Average over the
          bytes transferred by completed jobs inside the job group. For activities
          that support detailed stats, the average for successfully completed activities
          over the number of protected assets.
        format: int64
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      averageDuration:
        description: This parameter is for running job group only. Average over the
          completed jobs inside the job group.  For activities that support detailed
          stats, the average for successfully completed activities over the number
          of protected assets.
        format: int64
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      category:
        description: The category of the activity.
        enum:
        - CLOUD_DR
        - CLOUD_TIER
        - CONFIG
        - DELETE
        - DISASTER_RECOVERY
        - DISCOVER
        - EXPORT_REUSE
        - NOTIFY
        - PROTECT
        - REPLICATE
        - RESTORE
        - VALIDATE
        - SYSTEM
        - MANAGE
        - CLOUD_PROTECT
        - CLOUD_COPY_RECOVER
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      classType:
        description: The type of activity. JOB_GROUP is a group of jobs. JOB is an
          activity that can be monitored and managed. TASK is a step within a job
          that can be monitored.
        enum:
        - JOB_GROUP
        - JOB
        - TASK
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      createTime:
        description: The create time of the activity. Follows ISO8601 date format.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      destinationSystem:
        $ref: '#/definitions/Resource'
      displayId:
        description: The displayId of the activity. This is only assigned to JOB_GROUP
          and JOB activity type that do not have a parentId.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      duration:
        description: The total time taken for a running or completed activity.
        format: int64
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      endTime:
        description: The end time of the activity. Follows ISO8601 date format.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      failedToRetrieveStats:
        items:
          $ref: '#/definitions/StatsNotAvailableInfo'
        type: array
      hasChildren:
        description: This parameter is true if the activity has a child.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      hasLogs:
        description: This parameter is true if the activity or its child has a log
          file.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      host:
        $ref: '#/definitions/Resource'
      id:
        description: The ID of the activity.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: false
      infrastructureSource:
        description: Information about the source of a virtual machine restore operation.
        type: string
      initiatedType:
        description: The activity initiation type.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      inventorySource:
        $ref: '#/definitions/Resource'
      logInfo:
        $ref: '#/definitions/ActivityLogInfo'
      name:
        description: The name of the activity.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      nextScheduledTime:
        description: The next scheduled time of the activity. Follows ISO8601 date
          format.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      owner:
        $ref: '#/definitions/Owner'
      parentId:
        description: The parent ID of activity.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: false
      progress:
        description: Value between 0 and 100 representing % completion for activity.
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      progressIssues:
        description: Issues that arise during the progress of the activity.
        enum:
        - NO_REPORTED_ISSUES
        - TIMEOUT_ISSUES
        - CONNECTION_ISSUES
        - STATS_STALL_ISSUES
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionPolicy:
        $ref: '#/definitions/Resource'
      result:
        $ref: '#/definitions/ActivityResult'
      source:
        $ref: '#/definitions/ActivitySource'
      sourceCopy:
        $ref: '#/definitions/Resource'
      sourceStorageSystem:
        $ref: '#/definitions/Resource'
      sourceSystem:
        $ref: '#/definitions/Resource'
      startTime:
        description: The start time of the activity. Follows ISO8601 date format.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      state:
        description: The state of the activity.
        enum:
        - QUEUED
        - RUNNING
        - PENDING_CANCELLATION
        - COMPLETED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      stateSummaries:
        $ref: '#/definitions/ActivityStateSummaries'
      stats:
        $ref: '#/definitions/ActivityStats'
      statsNotSupportedByApp:
        items:
          $ref: '#/definitions/StatsNotAvailableInfo'
        type: array
      statsRequireAgentUpgrade:
        items:
          $ref: '#/definitions/StatsNotAvailableInfo'
        type: array
      steps:
        items:
          $ref: '#/definitions/ActivityStep'
        type: array
      storageSystem:
        $ref: '#/definitions/Resource'
      subcategory:
        description: The subcategory within a category.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      updateTime:
        description: The update time of the activity. Follows ISO8601 date format.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      username:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - id
    - name
    - category
    - classType
    - createTime
    - updateTime
    - progress
    - state
    type: object
  ActivityActions:
    description: The options for the activity actions.
    properties:
      cancelable:
        description: This parameter is true if the activity can be canceled.
        type: boolean
      retryable:
        description: This parameter is true if the activity can be retried.
        type: boolean
    type: object
  ActivityCancellation:
    description: The response for cancellation on all the eligible running and queued
      activities.
    properties:
      activityIds:
        description: ID of the activities that has been cancelled.
        items:
          type: string
        type: array
    type: object
  ActivityLogInfo:
    description: The error log information about the failure or warning that occurred
      for the activity. This can be a long description with some exceptions trace
      and other debug information.
    properties:
      fileName:
        description: The path to extended error information.
        type: string
      logText:
        description: The extended error information.
        items:
          type: string
        type: array
    type: object
  ActivityMetrics:
    description: An activity metric presents a list of status counts for a collection
      of activities.
    properties:
      aggregation:
        items:
          $ref: '#/definitions/NameValuePairInteger'
        type: array
    type: object
  ActivityResult:
    description: The result of the activity.
    properties:
      bytesTransferred:
        description: The total data transferred to a storage during an activity in
          bytes. If the value is 0, nothing was transferred. Deprecated.  Use stats.bytesTransferred.
        format: int64
        type: integer
      error:
        $ref: '#/definitions/ActivityResultError'
      status:
        description: The status of a completed activity.
        enum:
        - OK
        - CANCELED
        - FAILED
        - OK_WITH_ERRORS
        - UNKNOWN
        type: string
      summaries:
        description: The summary of the activity.
        items:
          type: string
        type: array
    type: object
  ActivityResultError:
    description: The error code, reason, remediation, extendedReason, detailedDescription
      and arguments.
    properties:
      arguments:
        items:
          $ref: '#/definitions/NameValuePairString'
        type: array
      code:
        description: The error code or message id for message catalog.
        type: string
      detailedDescription:
        description: The detailed description from message catalog.
        type: string
      extendedReason:
        description: The extended reason not from the message catalog.
        type: string
      reason:
        description: The error reason or message from message catalog.
        type: string
      remediation:
        description: The remediation or remediation from message catalog.
        type: string
    type: object
  ActivityRetryBulkRequest:
    description: '### ID of job that needs to be retried.'
    properties:
      retryJobIds:
        description: Job ID to be retried.
        items:
          type: string
        type: array
    type: object
  ActivityRetryBulkResponse:
    description: Retry jobs response.
    properties:
      retryJobsInitiatedCount:
        format: int32
        type: integer
      retryJobsReceivedCount:
        format: int32
        type: integer
      retryResults:
        items:
          $ref: '#/definitions/RetryActivityResult'
        type: array
    type: object
  ActivitySource:
    description: The PowerProtect Data Manager where the activity is initiated from.
    properties:
      type:
        description: 'The value can be one of:


          DATA_MANAGER

          APPLIANCE_MANAGER'
        enum:
        - DATA_MANAGER
        - APPLIANCE_MANAGER
        type: string
    required:
    - type
    type: object
  ActivityStateSummaries:
    description: The summary of the children activities. Includes state, completion
      status, and total counts for classType of JOB_GROUP.
    properties:
      canceled:
        description: The count of child activities in canceled state.
        format: int32
        type: integer
      completed:
        description: The count of child activities in completed state.
        format: int32
        type: integer
      criticalEvent:
        description: The count of child activities in the worst (critical/warning/canceled)
          state.
        format: int32
        type: integer
      failed:
        description: The count of child activities in failed state.
        format: int32
        type: integer
      ok:
        description: The count of child activities in OK state.
        format: int32
        type: integer
      okWithErrors:
        description: The count of child activities in OK with errors (okWithErrors)
          state.
        format: int32
        type: integer
      pendingCancellation:
        description: The count of child activities in pending cancellation state.
        format: int32
        type: integer
      queued:
        description: The count of child activities in queued state.
        format: int32
        type: integer
      running:
        description: The count of child activities in running state.
        format: int32
        type: integer
      total:
        description: The total count of the child activities.
        format: int32
        type: integer
      unknown:
        description: The count of child activities in unknown state.
        format: int32
        type: integer
    type: object
  ActivityStats:
    description: The activity statstics.
    properties:
      assetSizeInBytes:
        description: The asset size in bytes.
        format: int64
        type: integer
      bytesTransferred:
        description: The total data transferred to storage.
        format: int64
        type: integer
      bytesTransferredThroughput:
        description: 'The average bytes transferred for successfully completed activities
          over the number of protected assets.

          '
        format: double
        type: number
      bytesTransferredThroughputUnitOfTime:
        description: Time used to calculate the throughput.
        type: string
      dedupeRatio:
        description: Pre-compression bytes divided by post-compression bytes.
        format: double
        type: number
      numberOfAgents:
        description: Number of agents involved at the job group level.
        type: string
      numberOfAssets:
        description: Total number of assets being processed.
        type: integer
      numberOfProtectedAssets:
        description: Total number of assets protected.
        type: integer
      postCompBytes:
        description: Size in bytes after client side compression. Data written to
          storage.
        format: int64
        type: integer
      preCompBytes:
        description: Data sent to Boost SDK to write while backup is running or when
          it is done. Data read from Boost SDK to restore. Size in bytes prior to
          client side compression.
        format: int64
        type: integer
      reductionPercentage:
        description: Calculated as  (1-postCompBytes/preCompBytes)*100.
        format: double
        type: number
    type: object
  ActivityStep:
    description: Data Model to support Job Steps Feature.
    properties:
      description:
        description: Additional Description
        type: string
      durationInMillis:
        description: Time taken to complete the step.
        type: string
      endTime:
        description: End Time of the Step
        type: string
      name:
        description: Name of the step. Unique within the list of steps.
        type: string
      startTime:
        description: Start time of the step.
        format: date-time
        type: string
      status:
        description: Status of the step
        enum:
        - QUEUED
        - RUNNING
        - SUCCESS
        - WARNING
        - FAILED
        - CANCELED
        type: string
    required:
    - name
    - status
    title: ActivityStep
    type: object
  Addresses:
    properties:
      ipv4:
        items:
          type: string
        type: array
      ipv6:
        items:
          type: string
        type: array
      wwpn:
        items:
          type: string
        type: array
    type: object
  AdhocProtectionResult:
    description: Adhoc protection result for each stage of protection policy.
    properties:
      activityId:
        description: The activity job ID for each manual protection job.
        type: string
      stageId:
        description: ID of stage in the protection policy.
        type: string
      status:
        description: HTTP status code for each manual protection job for the associated
          stage.
        type: string
    type: object
  AdhocProtectionStage:
    properties:
      id:
        type: string
      operation:
        description: operation which include backup type info for adhoc protection
        properties:
          backupType:
            description: Detailed backup type for adhoc protection
            enum:
            - FULL
            - DIFFERENTIAL
            - LOG
            - INCREMENTAL
            - CUMULATIVE
            - AUTO_FULL
            - SYNTHETIC_FULL
            - GEN0
            type: string
        type: object
      retention:
        $ref: '#/definitions/ProtectionPolicyStageRetentionTime'
    type: object
  Agent:
    properties:
      address:
        type: string
      certificateSigningRequest:
        type: string
      createdTime:
        description: Timestamp when the agent was created (ISO 8601 format).
        type: string
      id:
        format: string
        type: string
      plugins:
        items:
          $ref: '#/definitions/Plugin'
        type: array
        uniqueItems: true
      port:
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      registeredTime:
        description: Timestamp when the agent was registered (ISO 8601 format).
        type: string
      version:
        type: string
    type: object
  AgentInfo:
    properties:
      Agent:
        type: string
      AgentName:
        type: string
      OsBits:
        format: int32
        type: integer
      OsType:
        type: string
      Version:
        type: string
    type: object
  AgentRegistrationStatus:
    properties:
      agent:
        $ref: '#/definitions/Agent'
      applications:
        items:
          $ref: '#/definitions/AgentRegistrationStatusApplication'
        type: array
        uniqueItems: true
      hostname:
        type: string
      inventorySourceId:
        type: string
      status:
        enum:
        - WAITING
        - PENDING
        - REGISTERED
        - REJECTED
        - EXPIRED
        type: string
      summary:
        items:
          $ref: '#/definitions/AgentRegistrationStatusSummary'
        type: array
      whitelist:
        $ref: '#/definitions/Whitelist'
    type: object
  AgentRegistrationStatusApplication:
    properties:
      name:
        type: string
      packageId:
        type: string
      packageVersion:
        type: string
      version:
        type: string
    type: object
  AgentRegistrationStatusSummary:
    properties:
      pending:
        description: The number of agents in pending state for registration.
        type: integer
      registered:
        description: The number of agents in registered state.
        type: integer
      rejected:
        description: The number of agents in rejected state.
        type: integer
      updatesAvailable:
        type: integer
      waiting:
        description: The number of agents in waiting state for registration.
        type: integer
    type: object
  AgentRegistrationStatuses:
    description: Get Agent Registration Statuses response.
    properties:
      content:
        items:
          $ref: '#/definitions/AgentRegistrationStatus'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Alert:
    description: Represents a alert resource.
    properties:
      acknowledgement:
        $ref: '#/definitions/AlertAcknowledgement'
      category:
        description: The category of the alert message.
        enum:
        - RESTORE
        - PROTECTION
        - REPLICATION
        - CLOUD_TIER
        - DISCOVER
        - PROTECTION_INFRASTRUCTURE
        - PROTECTION_POLICY
        - PROTECTION_SOURCE
        - PROTECTION_COPY
        - COMPLIANCE
        - SECURITY
        - SERVER_DR
        - LICENSE
        - SYSTEM
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      detailSummaries:
        description: The details from individual task.
        items:
          $ref: '#/definitions/AlertDetailSummary'
        type: array
      detailedDescription:
        description: The detailed description of the alert message.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      email:
        description: This parameter is true if the alert message can generate an email.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: false
      esrs:
        description: This parameter is true if the alert message is sent by ESRS to  the
          support team.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: UUID
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: false
      jobId:
        description: The job ID associated to the alert message.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      message:
        description: The message that the variable values are substituted with message
          arguments.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      messageArgs:
        description: The alert message arguments are the values for any substitution
          variables that are defined as part of the message.
        items:
          type: string
        type: array
        x-ppdm-filter: false
        x-ppdm-sort: false
      messageID:
        description: EEMI comformed message ID.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      postedTime:
        description: The created time of the alert message.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      responseAction:
        description: The response action for this alert message.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      severity:
        description: The severity of the alert message.
        enum:
        - CRITICAL
        - WARNING
        - INFORMATIONAL
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      source:
        $ref: '#/definitions/MessageSource'
      supportDetails:
        description: Additional low level details for support.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      taskId:
        description: The task ID that is associated with the alert message.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      userNote:
        $ref: '#/definitions/UserNote'
      visibility:
        description: This is true if the alert message is visible for the users.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - messageID
    - message
    - category
    - severity
    - postedTime
    - acknowledgement
    - id
    type: object
  AlertAcknowledgement:
    description: The acknowledgement details of an alert.
    properties:
      acknowledgeBy:
        description: The name of the user who acknowledged the alert message.
        type: string
      acknowledgeState:
        description: The acknowledgement state.
        enum:
        - ACKNOWLEDGED
        - UNACKNOWLEDGED
        type: string
      acknowledgeTime:
        description: The time the message was acknowledged. Follows ISO 8601.
        format: date-time
        type: string
    required:
    - acknowledgeState
    type: object
  AlertDetailSummary:
    description: The details from individual failed activities within the alert.
    properties:
      summary:
        description: The description of the failed activity.
        type: string
      taskId:
        description: The activity ID that failed.
        type: string
    type: object
  AlertMetrics:
    description: Alert metrics that include summaries of unacknowledged counts per
      severity.
    properties:
      fromPostTime:
        description: The oldest alert posted in this time interval.
        format: date-time
        type: string
        x-ppdm-filter: true
      toPostTime:
        description: The latest alert posted in this time interval.
        format: date-time
        type: string
        x-ppdm-filter: true
      unacknowledgedCriticalCount:
        description: Number of unacknowledged critical alerts.
        format: int32
        type: integer
      unacknowledgedInformationalCount:
        description: Number of unacknowledged informational alerts.
        format: int32
        type: integer
      unacknowledgedWarningCount:
        description: Number of unacknowledged warning alerts.
        format: int32
        type: integer
    type: object
  Alerts:
    description: Get Alerts.
    properties:
      content:
        items:
          $ref: '#/definitions/Alert'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  AllottedModes:
    description: Includes the information about the session that has reserved the
      proxy and number of transport sessions are reserved for the session.
    properties:
      CapacityUnits:
        format: int32
        type: integer
      ReservedBy:
        $ref: '#/definitions/ReservedBy'
      TotalControlSessions:
        format: int32
        type: integer
      TotalTransportSessions:
        format: int32
        type: integer
    type: object
  AppHost:
    properties:
      appServers:
        items:
          $ref: '#/definitions/AppHostAppServer'
        type: array
        uniqueItems: true
      dbConnection:
        $ref: '#/definitions/ConnectionInfo'
      dbCredentialId:
        type: string
      oracleDBProperties:
        $ref: '#/definitions/OracleDBProperties'
      os:
        type: string
      phase:
        enum:
        - NONE
        - NEEDSAPPROVAL
        - SENDCERT
        - UNAPPROVED
        - UNREGISTERED
        - UPDATEPLUGINS
        - PARTIALCREATE
        - NOAGENT
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionEngineFlow:
        enum:
        - VMDIRECT
        - APPDIRECT
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      rmanConnection:
        $ref: '#/definitions/ConnectionInfo'
      subTypes:
        items:
          enum:
          - MSSQL
          - ORACLE
          - FS
          - SAP_HANA_DATABASE_SYSTEM
          - MICROSOFT_EXCHANGE_DATABASE_SYSTEM
          - STORAGEGROUP
          type: string
        readOnly: true
        type: array
    type: object
  AppHostAppServer:
    properties:
      databaseCount:
        format: int32
        type: integer
      name:
        type: string
    type: object
  Asset:
    description: AssetRestModel
    properties:
      _embedded:
        properties:
          protectionPolicy:
            $ref: '#/definitions/EmbeddedProtectionPolicy'
          protectionlifeCycle:
            $ref: '#/definitions/EmbeddedProtectionPolicy'
          storageSystem:
            $ref: '#/definitions/EmbeddedIdName'
        readOnly: true
        type: object
      assetGroupId:
        format: string
        type: string
        x-ppdm-deprecated: true
      backupDetails:
        items:
          properties:
            backupType:
              enum:
              - SYNTHETIC_FULL
              - FULL
              - DIFFERENTIAL
              - LOG
              - INCREMENTAL
              - CUMULATIVE
              type: string
            parallelism:
              type: integer
          type: object
        type: array
      createdAt:
        description: Created time for the asset.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      credentialId:
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      credentials:
        description: Credentials of Asset.
        items:
          properties:
            extraInfo:
              items:
                properties:
                  name:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            id:
              type: string
            type:
              type: string
          type: object
        type: array
      dataTargetIds:
        description: IDs of data targets associated with this asset.
        items:
          type: string
        type: array
        uniqueItems: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      deleted:
        type: boolean
        x-deprecated: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      details:
        $ref: '#/definitions/AssetDetails'
      filterIds:
        description: ID of filters.
        items:
          type: string
        type: array
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastAvailableCopyTime:
        description: The date and time of the last available copy for this asset.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: The name of an asset.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      networkLabel:
        description: Network label assigned to this asset.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      operatingSystem:
        description: The operating system information of assets.
        properties:
          name:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          version:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
        type: object
      protectable:
        description: Used for marking whether the asset can be added in the protection
          policy.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionCapacity:
        properties:
          size:
            description: The used size in bytes for this asset. It is the maximum
              size of all copies.
            format: int64
            type: integer
            x-ppdm-filter: true
            x-ppdm-sort: true
          time:
            description: The time when the copy with maximum size was made.
            format: date-time
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
        type: object
      protectionLifeCycleId:
        description: Deprecated. Use protectionPolicyId instead.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionPolicy:
        $ref: '#/definitions/ParentProtectionPolicy'
      protectionPolicyId:
        description: ID of the protection policy that the asset belongs to.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      resourceGroupIds:
        description: ID of resource groups.
        items:
          type: string
        type: array
        x-ppdm-filter: true
        x-ppdm-sort: true
      ruleId:
        description: Dynamic filter ID that adds the asset in the protection policy.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      ruleName:
        description: Name of assets rule that adds the asset in the protection policy.
        format: string
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      size:
        description: The total size in bytes for this asset.
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      status:
        enum:
        - NOT_DETECTED
        - DELETED
        - AVAILABLE
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: false
      subtype:
        $ref: '#/definitions/AssetSubtypeEnum'
      type:
        description: The type of an asset
        enum:
        - VMAX_STORAGE_GROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        - KUBERNETES
        - MICROSOFT_EXCHANGE_DATABASE
        - SAP_HANA_DATABASE
        - NAS_SHARE
        - CLOUD_NATIVE_ENTITY
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      updatedAt:
        description: Update time for the asset.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      userTags:
        description: Only for VMware assets. The user can create tags for one VM at
          the vCenter side.
        items:
          type: string
        type: array
        uniqueItems: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      vendor:
        $ref: '#/definitions/VendorEnum'
      vmMoref:
        type: string
    required:
    - name
    - type
    - details
    title: ''
    type: object
  AssetBackupRequest:
    description: To trigger an asset backup, provide the asset ID and backup type.
    properties:
      assetId:
        type: string
      backupType:
        enum:
        - AUTO_FULL
        - FULL
        type: string
    type: object
  AssetBackupResponse:
    description: The response of the asset backup.
    properties:
      assetId:
        type: string
      backupType:
        enum:
        - AUTO_FULL
        - FULL
        type: string
      taskId:
        type: string
    type: object
  AssetCopies:
    properties:
      content:
        items:
          $ref: '#/definitions/Copy'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  AssetDatabase:
    properties:
      appServerId:
        type: string
        x-ppdm-deprecated: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      appServerName:
        description: DB server name.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      appVersion:
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      asm:
        type: string
        x-ppdm-deprecated: true
      clusterName:
        description: Name of DB cluster.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      clusterType:
        description: 'DB cluster type. For example: RAC.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      dbId:
        type: string
        x-ppdm-deprecated: true
      lastBackup:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionEngineFlow:
        enum:
        - VMDIRECT
        - APPDIRECT
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionType:
        type: string
        x-ppdm-deprecated: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      sid:
        type: string
        x-ppdm-deprecated: true
    type: object
  AssetDetails:
    properties:
      database:
        $ref: '#/definitions/AssetDatabase'
      fileSystem:
        $ref: '#/definitions/AssetFileSystem'
      k8s:
        $ref: '#/definitions/AssetKubernetes'
      nasShare:
        $ref: '#/definitions/AssetNas'
      vm:
        $ref: '#/definitions/AssetVm'
      vmaxStorageGroup:
        $ref: '#/definitions/AssetVmaxStorageGroup'
    type: object
  AssetFileSystem:
    properties:
      fileSystemType:
        description: 'File system type of the file system. For example: NTFS.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      guid:
        description: Asset GUID of the file system.
        type: string
        x-ppdm-deprecated: true
      hostName:
        description: Host name of the file system .
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      hostOS:
        description: Operation system name of the file system.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastBackup:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionType:
        description: 'Protection type for file system. For example: DDBFS.'
        type: string
        x-ppdm-deprecated: true
    type: object
  AssetKubernetes:
    description: The Kubernetes details for an asset.
    properties:
      externalCreatedAt:
        description: Date and time when resource is created (UTC).
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      inventorySourceId:
        description: PowerProtect Data Manager inventory source ID (inventorySourceId).
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      inventorySourceName:
        description: The Kubernetes cluster name this asset belongs to.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastBackup:
        description: The date and time of last copy for this Kubernetes asset. If
          no backup, this field is null.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      namespace:
        description: Kubernetes resource namespace.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      persistentVolumeClaim:
        $ref: '#/definitions/AssetKubernetesPersistentVolumeClaim'
      size:
        description: 'For namespace: Total capacity of all namespace member PVCs in
          bytes (asset size).

          For persistent volume claims (PVC): PVC capacity.'
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      subType:
        description: The subtype for this Kubernetes resource (K8S_NAMESPACE or K8S_PERSISTENT_VOLUME_CLAIM).
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      uid:
        description: Kubernetes resource UUID.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  AssetKubernetesPersistentVolumeClaim:
    description: Persistent volume claim (PVC) properties of the Kubernetes asset
      (for PVC only).
    properties:
      accessModes:
        description: Access mode of the mounted volume (ReadWriteOnce, ReadOnlyMany,
          or ReadWriteMany).
        items:
          type: string
        type: array
        x-ppdm-filter: true
        x-ppdm-sort: true
      excluded:
        description: Excluded from its parent namespace
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      status:
        description: PVC phase/status (Available, Bound, Released, or Failed).
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      storageClassName:
        description: Volume storage class name.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      volumeMode:
        description: 'Volume mode: block (raw block device) or filesystem.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      volumeName:
        description: Persistent volume name for the PVC.
        format: string
        type: string
    type: object
  AssetMetric:
    description: Metrics for the asset.
    properties:
      inComplianceAssetCount:
        description: The number of assets that are in compliance.
        format: int64
        type: integer
      outOfComplianceAssetCount:
        description: The number of assets that are out of compliance.
        format: int64
        type: integer
      type:
        description: The type of asset.
        enum:
        - VMAX_STORAGE_GROUP
        - POWERSTOREVOLUMEGROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        - KUBERNETES
        - SAP_HANA_DATABASE
        - MICROSOFT_EXCHANGE_DATABASE
        - NAS_SHARE
        type: string
    type: object
  AssetNas:
    properties:
      fileSystemName:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      inventorySourceId:
        description: The id of the inventory source this NAS asset belongs to
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      inventorySourceName:
        description: The name of the inventory source this NAS asset belongs to
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      nasServer:
        properties:
          addresses:
            items:
              properties:
                type:
                  enum:
                  - IPV4
                  - IPV6
                  - FQDN
                  type: string
                  x-ppdm-filter: true
                  x-ppdm-sort: true
                value:
                  type: string
                  x-ppdm-filter: true
                  x-ppdm-sort: true
              type: object
            type: array
          name:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
        type: object
      protocol:
        enum:
        - NFS
        - CIFS
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  AssetNetworksBatchRequest:
    description: Array of asset network assignment / unassignment request.
    properties:
      body:
        description: Single request content.
        properties:
          id:
            description: Asset id.
            type: string
          networkLabel:
            description: Asset network to assign or unassign.
            type: string
        type: object
      id:
        description: Request id.
        type: string
    type: object
  AssetNetworksBatchRequests:
    description: Asset networks batch request body.
    properties:
      requests:
        items:
          $ref: '#/definitions/AssetNetworksBatchRequest'
        type: array
    type: object
  AssetSubtypeEnum:
    description: 'The subtype of an asset.

      Asset type and (subtype) mapping:

      - VMAX_STORAGE_GROUP (VMAXSTORAGEGROUP)

      - POWERSTOREVOLUMEGROUP (POWERSTOREVOLUMEGROUP)

      - POWERSTOREVOLUME (POWERSTOREVOLUME)

      - MICROSOFT_SQL_DATABASE (MSSQL)

      - ORACLE_DATABASE (ORACLE_CDB, ORACLE_NON_CDB, ORACLE_PDB)

      - VMWARE_VIRTUAL_MACHINE (VIRTUALMACHINE)

      - FILE_SYSTEM (NTFS, ReFS, CSVFS, ext3, ext4, xfs)

      - KUBERNETES (K8S_NAMESPACE, K8S_POD, K8S_PERSISTENT_VOLUME, K8S_PERSISTENT_VOLUME_CLAIM)

      - SAP_HANA_DATABASE (SAPHANA_SYSTEM, SAPHANA_TENANT)

      - MICROSOFT_EXCHANGE_DATABASE (EXCHANGE_MAILBOX, EXCHANGE_PUBLIC_FOLDER)

      - NAS_SHARE (UNITY_NFSV3, UNITY_NFSV4, UNITY_CIFSV1, UNITY_CIFSV2, UNITY_CIFSV3,
      POWERSTORE_NFSV3, POWERSTORE_NFSV4, POWERSTORE_CIFSV3, NFS_GENERIC, CIFS_GENERIC)'
    enum:
    - VMAXSTORAGEGROUP
    - VMAXSTORAGEVOLUME
    - POWERSTOREVOLUMEGROUP
    - POWERSTOREVOLUME
    - MSSQL
    - ORACLE_CDB
    - ORACLE_NON_CDB
    - ORACLE_PDB
    - VIRTUALMACHINE
    - DR
    - NTFS
    - ReFS
    - CSVFS
    - ext3
    - ext4
    - xfs
    - K8S_NAMESPACE
    - K8S_POD
    - K8S_PERSISTENT_VOLUME
    - K8S_PERSISTENT_VOLUME_CLAIM
    - SAPHANA_SYSTEM
    - SAPHANA_TENANT
    - EXCHANGE_MAILBOX
    - EXCHANGE_PUBLIC_FOLDER
    - UNITY_NFSV3
    - UNITY_NFSV4
    - UNITY_CIFSV1
    - UNITY_CIFSV2
    - UNITY_CIFSV3
    - POWERSTORE_NFSV3
    - POWERSTORE_NFSV4
    - POWERSTORE_CIFSV3
    - NFS_GENERIC
    - CIFS_GENERIC
    title: AssetSubtypeEnum
    type: string
    x-ppdm-filter: true
    x-ppdm-sort: true
  AssetVm:
    properties:
      clusterName:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      dataMoverType:
        enum:
        - INHERIT_FROM_POLICY
        - SDM
        - VADP
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      datacenter:
        description: Datacenter name that the virtual machine belongs to.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      datastore:
        description: Datastore that the virtual machine belongs to.
        items:
          properties:
            datastoreMoref:
              description: the data store reference that the virtual machine belongs
                to
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            datastoreName:
              description: Name of the datastore that the  virtual machine belong
                to
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
          type: object
        type: array
      disableCbt:
        description: Enable or disable the CBT utilization for VM backup operation.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      disableQuiescing:
        description: Indicate whether to turn off the quiescing snapshot for VM backups.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      disks:
        description: Partitions of the virtual machine.
        items:
          properties:
            datastoreMoref:
              description: The moref of the data store on which the disk's VMDK file
                is stored.
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            eagerlyScrub:
              description: Indicates that all the bytes of the disk were set to zero
                when provisioned.
              type: boolean
            excluded:
              type: boolean
              x-ppdm-filter: true
              x-ppdm-sort: true
            key:
              type: integer
              x-ppdm-filter: true
              x-ppdm-sort: true
            label:
              description: Label name of the virtual disk
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            name:
              description: virtual disk name of the virtual machine
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            sizeInBytes:
              description: The total size in bytes of the virtual disk of the virtual
                machine
              format: int64
              type: integer
              x-ppdm-filter: true
              x-ppdm-sort: true
            thinProvisioned:
              description: Indicates if a disk is thin provisioned
              type: boolean
              x-ppdm-filter: true
              x-ppdm-sort: true
            usedBytes:
              description: Indicates the number of bytes actually in use on the disk
                by the OS of a VM on a thin-provisioned disk. On a thick provisioned
                disk this will be the maximum size of the disk.
              type: number
          type: object
        type: array
      dnsName:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      esxName:
        description: ESXi server name that the virutal machine belongs to.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      externalId:
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      folder:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      guestOS:
        description: Operation system name of the virtual machine.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      hostMoref:
        description: Hostmoref of the virtual machine.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      hostName:
        description: Hostname of the virtual machine.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      inventoryPath:
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      inventorySourceId:
        description: Inventory source ID that the virtual machine belongs to.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      inventorySourceName:
        description: Inventory source name that the virtual machine belongs to.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      powerState:
        enum:
        - POWERED_ON
        - POWERED_OFF
        - SUSPENDED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      primaryIpAddress:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectedApplication:
        enum:
        - MSSQL
        - ORACLE
        - NONE
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      resourcePool:
        description: Resource pool name that the virtual machine belongs to.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      vApp:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      vcenterName:
        description: vCenter name that the virtual machine belongs to.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      vmBiosUuid:
        description: BIOS ID of the virtual machine.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      vmMoref:
        description: VMmoref of the virtual machine.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  AssetVmaxStorageGroup:
    description: The VMAX storage group information of an asset.
    properties:
      configuration:
        $ref: '#/definitions/AssetVmaxStorageGroupConfiguration'
      coordinatingHostId:
        description: The ID of the host to which which the user chooses to push the
          configuration.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      coordinatingHostname:
        description: The name of the host to which which the user chooses to push
          the configuration.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
    type: object
  AssetVmaxStorageGroupConfiguration:
    description: The VMAX storage group configuration information for an asset.
    properties:
      backupDevice:
        $ref: '#/definitions/AssetVmaxStorageGroupConfigurationItem'
      backupStorage:
        $ref: '#/definitions/AssetVmaxStorageGroupConfigurationItem'
      restoreDevice:
        $ref: '#/definitions/AssetVmaxStorageGroupConfigurationItem'
      restoreStorage:
        $ref: '#/definitions/AssetVmaxStorageGroupConfigurationItem'
    type: object
  AssetVmaxStorageGroupConfigurationItem:
    description: The VMAX storage group configuration item for VMAX asset.
    properties:
      guid:
        description: The GUID of VMAX group configuration item.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      name:
        description: The name of VMAX group configuration item.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      uri:
        description: The URI of VMAX group configuration item.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
    type: object
  Assets:
    properties:
      content:
        items:
          $ref: '#/definitions/Asset'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  AssetsBatchDeletionRequest:
    description: asset deletion batch request.
    properties:
      body:
        description: Single request content.
        properties:
          id:
            description: Asset id.
            type: string
        type: object
      id:
        description: Request id.
        type: string
    type: object
  AssetsBatchDeletionRequests:
    description: Asset networks batch request body.
    properties:
      requests:
        items:
          $ref: '#/definitions/AssetsBatchDeletionRequest'
        type: array
    type: object
  AsyncTaskResponse:
    description: Asynchronous task response.
    properties:
      taskId:
        type: string
    type: object
  AuditLog:
    description: Audit log tracks configuration modification activity from users.
    properties:
      after:
        description: New field values represented as a string. Varies based on the
          audit type.
        type: string
      auditType:
        description: The predefined set of audit types.
        enum:
        - PROTECTION_POLICY
        - PROTECTION_SOURCE
        - PROTECTION_COPY
        - PROTECTION_INFRASTRUCTURE
        - PROTECTION
        - COMPLIANCE
        - SECURITY
        - SERVER_DR
        - SYSTEM
        type: string
      before:
        description: Old field values that are represented as a string. Varies based
          on the audit type.
        type: string
      changeDescription:
        description: The description of the change. This parameter is a system generated
          field to get the context of the change.
        type: string
      changedBy:
        $ref: '#/definitions/AuditLogChangedBy'
      changedObject:
        $ref: '#/definitions/AuditLogChangedObject'
      changedTime:
        description: The time when the configurations are modified or deleted.
        format: date-time
        type: string
      createdAt:
        description: The time when the audit log was created. Follows ISO 8601.
        format: date-time
        type: string
      id:
        description: The ID of the audit log entry.
        type: string
      messageArgs:
        description: 'The message arguments are the values for any substitution variables
          that are defined as part of the message. Review the message for more information:
          Message Resources, APIs, and Audit Message.'
        items:
          type: string
        type: array
      messageID:
        description: The message identifier MessageID is an alphanumeric string value
          that is a maximum of 8 characters long.
        type: string
      userNote:
        $ref: '#/definitions/UserNote'
    required:
    - id
    - createdAt
    - auditType
    - messageID
    - changeDescription
    - changedTime
    - changedBy
    type: object
  AuditLogChangedBy:
    description: The user who made the configuration modification.
    properties:
      id:
        description: The user ID.
        type: string
      username:
        description: The user name.
        type: string
    type: object
  AuditLogChangedObject:
    description: The resource changed by the user.
    properties:
      id:
        description: The ID of the changed object.
        type: string
      resourceName:
        description: The name of the changed object (resource value). Possible values
          are protection policy name, compliance name, asset source name, user name,
          and so on (security related resource names).
        type: string
      resourceType:
        description: The resource name of the object (resource path). This path value
          should be a full resource name corresponding to the audit type. It can be
          one of the audit type path URL values.
        type: string
    type: object
  AuditLogs:
    description: Get Audit Logs.
    properties:
      content:
        items:
          $ref: '#/definitions/AuditLog'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  BatchResponse:
    properties:
      body:
        $ref: '#/definitions/ErrorMessage'
      id:
        type: string
      status:
        type: string
    type: object
  BatchResponses:
    properties:
      responses:
        items:
          $ref: '#/definitions/BatchResponse'
        type: array
    type: object
  BatchUpdateAssetRequest:
    properties:
      body:
        properties:
          backupDetails:
            items:
              properties:
                backupType:
                  type: string
                parallelism:
                  type: integer
              type: object
            type: array
          credentials:
            items:
              properties:
                extraInfo:
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                id:
                  type: string
                type:
                  type: string
              type: object
            type: array
          details:
            properties:
              vm:
                properties:
                  disableCbt:
                    description: Enable or disable the CBT utilization for VM backup
                      operation.
                    type: boolean
                  disableQuiescing:
                    description: Indicate whether to turn off the quiescing snapshot
                      for VM backups.
                    type: boolean
                type: object
            type: object
          id:
            type: string
        type: object
      id:
        type: string
    type: object
  BatchUpdateAssetRequests:
    properties:
      requests:
        items:
          $ref: '#/definitions/BatchUpdateAssetRequest'
        type: array
    type: object
  BrowseFileEntry:
    description: Object specifying attributes of a file including name, type, and
      size.
    properties:
      name:
        description: Name of the file or directory.
        type: string
      size:
        description: Size of the file.
        format: int64
        type: integer
      type:
        description: 'The type of file: directory, symlink, etc.'
        type: string
    type: object
  CatalogDeviceConnection:
    description: Catalog Device Connection.
    properties:
      automaticDownloadUpgradePackage:
        type: boolean
      emcSupportPassword:
        type: string
      emcSupportUsername:
        type: string
      gatewayHostAddress:
        type: string
      gatewaySerialNumber:
        type: string
      id:
        type: string
    type: object
  CdrCloudNetwork:
    description: Networks in the cloud.
    properties:
      securityGroups:
        items:
          $ref: '#/definitions/SecurityGroup'
        type: array
      subnets:
        items:
          $ref: '#/definitions/Subnet'
        type: array
      virtualNetworkId:
        type: string
      virtualNetworkName:
        type: string
    type: object
  CdrCloudNetworks:
    properties:
      content:
        items:
          $ref: '#/definitions/CdrCloudNetwork'
        type: array
      pageInfo:
        $ref: '#/definitions/PageInfo'
    type: object
  CdrConfiguration:
    description: Cloud DR configuration key and value.
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  CdrProxyConfigurationCommon:
    description: The properties that are shared among all versions of the Cloud DR
      proxy configuration model.
    properties:
      enable:
        type: boolean
      enableAuthentication:
        type: boolean
      host:
        type: string
      port:
        type: integer
      username:
        type: string
    type: object
  CdrProxyConfigurationInput:
    allOf:
    - $ref: '#/definitions/CdrProxyConfigurationCommon'
    - properties:
        password:
          type: string
      type: object
    description: The properties that are allowed when creating or updating a Cloud
      DR proxy configuration.
  CdrProxyConfigurationOutput:
    allOf:
    - properties: {}
      type: object
    - $ref: '#/definitions/CdrProxyConfigurationCommon'
    description: The properties that are included when fetching a list of Cloud DR
      proxy configurations.
  CdrProxyConfigurationOutputDetailed:
    allOf:
    - $ref: '#/definitions/CdrProxyConfigurationOutput'
    - type: object
    description: The properties that are included when fetching a single Cloud DR
      proxy configuration.
  CdrSession:
    description: Instance (VM) in the cloud.
    properties:
      assetName:
        type: string
      copyTime:
        format: date-time
        type: string
      drType:
        type: string
      id:
        type: string
      instanceId:
        type: string
      region:
        type: string
      status:
        type: string
    type: object
  CdrSessions:
    properties:
      content:
        items:
          $ref: '#/definitions/CdrSession'
        type: array
      pageInfo:
        $ref: '#/definitions/PageInfo'
    type: object
  CdrVcConfiguration:
    description: vCenter configuration in Cloud DR.
    properties:
      dataStores:
        items:
          properties:
            moref:
              properties:
                morefId:
                  type: string
                type:
                  type: string
              type: object
            name:
              type: string
          type: object
        type: array
      id:
        description: UUID of the Vcenter Server.
        format: string
        type: string
      isFailoverTarget:
        type: boolean
      networks:
        items:
          properties:
            gateway:
              type: string
            ipRanges:
              items:
                properties:
                  baseIp:
                    type: string
                  range:
                    type: integer
                type: object
              type: array
            moref:
              properties:
                morefId:
                  type: string
                type:
                  type: string
              type: object
            name:
              type: string
            netMask:
              type: string
          type: object
        type: array
    type: object
  CdrVcInventory:
    description: Cloud DR vCenter inventory.
    properties:
      dataCenters:
        items:
          properties:
            dataStores:
              items:
                properties:
                  availableNetworks:
                    items:
                      properties:
                        morefId:
                          type: string
                        type:
                          type: string
                      type: object
                    type: array
                  moref:
                    properties:
                      morefId:
                        type: string
                      type:
                        type: string
                    type: object
                  name:
                    type: string
                type: object
              type: array
            moref:
              properties:
                morefId:
                  type: string
                type:
                  type: string
              type: object
            name:
              type: string
            networks:
              items:
                properties:
                  moref:
                    properties:
                      morefId:
                        type: string
                      type:
                        type: string
                    type: object
                  name:
                    type: string
                type: object
              type: array
          type: object
        type: array
      id:
        description: UUID.
        type: string
    type: object
  CdrVcRemoteServer:
    description: vCenter configuration in Cloud DR.
    properties:
      cdrVcConfiguration:
        $ref: '#/definitions/CdrVcConfiguration'
      id:
        description: UUID of the Vcenter
        format: string
        type: string
      isPartial:
        type: boolean
      location:
        properties:
          LocationEnum:
            items:
              type: string
            type: array
        type: object
      model:
        type: string
      serialId:
        type: string
      serverParams:
        properties:
          address:
            type: string
          credentials:
            properties:
              certificate:
                type: string
              password:
                type: string
              username:
                type: string
            type: object
          ipv6Configured:
            type: boolean
          mtreeId:
            description: UUID
            format: string
            type: string
          port:
            type: integer
        type: object
      type:
        properties:
          RemoteServerType:
            items:
              type: string
            type: array
        type: object
      version:
        type: string
    type: object
  CdrVcRemoteServers:
    properties:
      content:
        items:
          $ref: '#/definitions/CdrVcRemoteServer'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CdrVersion:
    description: Cloud DR version.
    properties:
      version:
        type: string
    type: object
  CdrsExtendedProperties:
    description: CDRS extended properties.
    properties:
      cdrsConnectivityState:
        properties:
          CdrsConnectivityStateEnum:
            items:
              type: string
            type: array
        type: object
      cidr:
        type: string
      cloudTargetId:
        type: string
      connectionIp:
        type: string
      deploymentCompleted:
        type: boolean
      email:
        type: string
      privateNetwork:
        type: boolean
      publicDns:
        type: string
      region:
        type: string
    type: object
  Certificate:
    description: Certificate.
    properties:
      fingerprint:
        description: Fingerprint of the certificate.
        type: string
      host:
        description: Certificate host or IP address.
        type: string
      id:
        description: Certificate ID.
        format: string
        type: string
      issuerName:
        description: Issuer name of the certificate.
        type: string
      notValidAfter:
        description: Not valid after timestamp (ISO 8601 format).
        type: string
      notValidBefore:
        description: Not valid before timestamp (ISO 8601 format).
        type: string
      port:
        description: Host/IP port.
        type: string
      state:
        description: Certificate state.
        enum:
        - ACCEPTED
        - REJECTED
        - UNKNOWN
        - EXPIRED
        - MISMATCHED
        - MALFORMED
        type: string
      subjectName:
        description: Subject name of the certificate.
        type: string
      type:
        description: Certificate type.
        enum:
        - HOST
        - ROOT
        - INTERMEDIATE
        type: string
    required:
    - host
    - port
    type: object
  CertificateDetailsMap:
    description: This page includes the certificate details.
    properties:
      issuerDN:
        description: Issuer distiguished name.
        type: string
      md5:
        description: Value of md5.
        type: string
      notAfter:
        description: Valid time of certificate.
        type: string
      notBefore:
        description: Start time of certificate.
        type: string
      publicKey:
        description: Public key type.
        type: string
      publicKeyExponent:
        description: Exponent of public key.
        type: string
      publicKeyModulus:
        description: The modulus of public key.
        type: string
      publicKeySize:
        description: Size of public key.
        type: string
      serialNumber:
        description: The serial number of certificate.
        type: string
      sha1:
        description: Value of sha1.
        type: string
      sha256:
        description: Value of sha256.
        type: string
      signatureAlgorithmName:
        description: The algorithm used in signature.
        type: string
      signatureAlgorithmOID:
        description: ID of algorithm used in signature.
        type: string
      subjectDN:
        description: Subject distiguished name.
        type: string
      version:
        description: Version of certificate.
        type: string
    type: object
  CertificateSigningRequest:
    description: Certificate Signing Request.
    properties:
      csr:
        description: CSR content.
        type: string
      fqdn:
        description: Hostname to be used in SAN as DNS.
        type: string
      ips:
        description: IPv4 and IPv6 addresses to be used in SAN as IP address.
        type: string
    required:
    - csr
    - fqdn
    type: object
  CertificateSigningResponse:
    description: Signed Certificate.
    properties:
      cert:
        description: Absolute path to the signed certificate file.
        type: string
      globalCA:
        description: The root CA certificate used to sign the customer certificate.
          This property is only returned if customer certificates have already been
          installed.
        type: string
      id:
        description: ID.
        format: string
        type: string
      rootCA:
        description: Absolute path to the root CA certificate file.
        type: string
      virtualHost:
        description: PPDM hostname for custom virtual host. This property is only
          returned if customer certificates have already been installed.
        type: string
    required:
    - rootCA
    - cert
    type: object
  CertificatesList:
    properties:
      items:
        $ref: '#/definitions/Certificate'
      type: array
    type: object
  CloudAccount:
    properties:
      connectionStatus:
        type: string
      connectionStatusMessage:
        type: string
      id:
        type: string
      providerAccountId:
        type: string
      providerName:
        type: string
      providerParameters:
        items:
          $ref: '#/definitions/ProviderParameter'
        type: array
      secretKey:
        type: string
      userKey:
        type: string
      userName:
        type: string
    type: object
  CloudAccounts:
    properties:
      content:
        items:
          $ref: '#/definitions/CloudAccount'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CloudCopy:
    description: Provide cloud copy REST model (CloudCopy) to update, recall, and
      retier a copy from the cloud.
    properties:
      action:
        enum:
        - RECALL
        - RETIER
        type: string
      retierRetentionTime:
        readOnly: true
        type: string
    type: object
  CloudRecalledCopy:
    properties:
      protectionCopySetId:
        description: ID of the asset on the cloud.
        type: string
      retierRetentionTime:
        description: The amount of time the recalled asset stays on the Data Domain
          before being retiered back to the cloud.
        format: date-time
        type: string
    required:
    - protectionCopySetId
    - retierRetentionTime
    type: object
  CloudResult:
    description: The taskId represents the ID for the given task within activities.
    properties:
      taskId:
        description: The taskId represents the ID for the given task within activities.
        type: string
    required:
    - taskId
    type: object
  CloudTarget:
    description: Cloud DR target.
    properties:
      copiesStorageContainer:
        $ref: '#/definitions/StorageContainer'
      encryptionMethod:
        type: string
      id:
        description: UUID.
        type: string
      name:
        type: string
      state:
        enum:
        - ACTIVE
        - PENDING_REMOVAL
        type: string
    type: object
  CloudTargets:
    properties:
      content:
        items:
          $ref: '#/definitions/CloudTarget'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CloudTieredCopy:
    properties:
      assetId:
        description: The ID of the data source.
        type: string
      cloudTierStageId:
        type: string
      protectionCopySetId:
        type: string
      protectionLifeCycleId:
        description: protectionPolicyId should be used instead.
        type: string
        x-ppdm-deprecated: 'true'
      protectionPolicyId:
        type: string
      workflowTaskId:
        type: string
    required:
    - protectionCopySetId
    type: object
  CloudUnits:
    description: Cloud Unit List Response.
    properties:
      content:
        items:
          $ref: '#/definitions/ResourceCloudUnit'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CommonDnsConfig:
    properties:
      DhcpEnabled:
        type: boolean
      DomainName:
        type: string
      HostName:
        type: string
      SearchDomains:
        items:
          type: string
        type: array
      Servers:
        items:
          type: string
        type: array
    type: object
  CommonIpConfig:
    properties:
      Address:
        type: string
      IpCidr:
        type: string
      NetMask:
        type: string
      PrefixLength:
        format: int32
        type: integer
      SubnetCidr:
        type: string
      Version:
        enum:
        - IPv4
        - IPv6
        type: string
    type: object
  CommonSetting:
    description: The common settings object
    properties:
      id:
        format: String
        type: string
      properties:
        items:
          $ref: '#/definitions/CommonSettingProperty'
        type: array
    required:
    - properties
    type: object
  CommonSettingProperty:
    description: Common Setting Property.
    properties:
      name:
        type: string
      type:
        type: string
      value:
        type: string
    type: object
  CommonSettings:
    description: Get Common Settings Resource.
    properties:
      content:
        items:
          $ref: '#/definitions/CommonSetting'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CommonVimServer:
    description: A common definition of needed parameters when taking a reference
      to a VIM server.
    properties:
      EncryptedUserPassword:
        type: boolean
      HostName:
        type: string
      HypervisorMode:
        enum:
        - vSphere
        - VMC
        type: string
      TcpPort:
        format: int64
        type: integer
      ThumbPrint:
        type: string
      UserName:
        type: string
      UserPassword:
        type: string
    type: object
  ComplianceDetail:
    description: '**Compliance Detail** is the summary for compliance result for one
      asset on one SLA on one stage.

      The compliance detail ID is the compliance result ID.'
    properties:
      assetId:
        type: string
        x-ppdm-filter: true
      assetName:
        type: string
      completionStatus:
        enum:
        - SUCCESS
        - FAILED
        type: string
      completionTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      createdAt:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      failedObjectiveList:
        items:
          $ref: '#/definitions/FailedObjective'
        type: array
      id:
        type: string
        x-ppdm-filter: true
      nextStartTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      objectiveCount:
        format: int64
        maximum: 10
        minimum: 0
        type: integer
      objectiveFailedNameList:
        items:
          enum:
          - Recovery Point
          - Compliance Window
          - Location
          - Maximum Copies
          - Minimum Copies
          - Retention Lock
          - Retention Time
          - Deletion Compliance
          type: string
        maxItems: 10
        minItems: 0
        type: array
        uniqueItems: true
      objectiveSuccessCount:
        format: int64
        maximum: 10
        minimum: 0
        type: integer
      objectiveSuccessNameList:
        items:
          enum:
          - Recovery Point
          - Compliance Window
          - Location
          - Maximum Copies
          - Minimum Copies
          - Retention Time
          - Retention Lock
          - Deletion Compliance
          type: string
        maxItems: 10
        minItems: 0
        type: array
        uniqueItems: true
      plcId:
        type: string
        x-ppdm-deprecated: true
        x-ppdm-filter: true
      policyName:
        type: string
      protectionPolicyId:
        type: string
        x-ppdm-filter: true
      slaId:
        type: string
      stageId:
        type: string
      startTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      status:
        enum:
        - SUCCEEDED
        - FAILED
        - SKIPPED
        type: string
      windowEndTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ComplianceDetails:
    properties:
      content:
        items:
          $ref: '#/definitions/ComplianceDetail'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ComplianceResult:
    properties:
      completionTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      nextStartTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      startTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      state:
        enum:
        - WAITING
        - RUNNING
        - COMPLETED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      status:
        enum:
        - UNKNOWN
        - SUCCESS
        - PARTIALSUCCESS
        - FAILED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      verifiedObjectives:
        items:
          $ref: '#/definitions/VerifiedObjective'
        type: array
      windowEndTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ComplianceResults:
    properties:
      content:
        items:
          $ref: '#/definitions/ComplianceResult'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Condition:
    properties:
      assetAttributeName:
        type: string
      assetAttributeValue:
        type: string
        'x-ppdm-deprecated:': true
      assetAttributeValues:
        items:
          type: string
        type: array
      operator:
        enum:
        - IN
        - NOT_IN
        - EQUALS
        - CONTAINS
        - BEGINS_WITH
        - ENDS_WITH
        - DOES_NOT_EQUAL
        - DOES_NOT_CONTAIN
        - LESS_THAN
        - GREATER_THAN
        - MATCH_REGEX
        - DOES_NOT_MATCH_REGEX
        type: string
    type: object
  ConfigPropertyChangeRef:
    properties:
      Index:
        format: int32
        type: integer
      NewValue:
        type: string
      OldValue:
        type: string
      Operation:
        type: string
      Type:
        enum:
        - Datastore
        - Cluster
        - Network
        - ResourcePool
        - Host
        - Folder
        type: string
    type: object
  ConfigStatus:
    description: enter description here
    properties:
      completedStage:
        items:
          $ref: '#/definitions/ConfigStatusStage'
        type: array
      currentStage:
        $ref: '#/definitions/ConfigStatusStage'
      endTime:
        type: string
      percentageCompleted:
        format: int32
        type: integer
      startTime:
        type: string
      status:
        enum:
        - FAILED
        - SUCCESS
        - PROGRESS
        type: string
    type: object
  ConfigStatusStage:
    description: Config Status Stage.
    properties:
      description:
        type: string
      endTime:
        format: date-time
        type: string
      startTime:
        format: date-time
        type: string
      status:
        enum:
        - SUCCESS
        - PROGRESS
        - FAILED
        type: string
    type: object
  ConfigurableTransportSessions:
    description: All available transport modes that a user can configure.
    properties:
      Mode:
        enum:
        - HotaddPreferred
        - HotaddOnly
        - NbdOnly
        - None
        type: string
      UseSsl:
        type: boolean
      UserDefined:
        type: boolean
    type: object
  ConnectionInfo:
    properties:
      credentialId:
        type: string
      tnsAdmin:
        type: string
      tnsName:
        type: string
      type:
        enum:
        - OS
        - VCENTER
        - DBUSER
        - DB_WALLET
        - RMAN
        - RMAN_WALLET
        - DB
        - SAPHANA_DB_USER
        - SAPHANA_SYSTEMDB_USER
        - NAS
        type: string
    type: object
  Copies:
    description: List of CopyRestModel.
    properties:
      content:
        items:
          $ref: '#/definitions/Copy'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CopiesRetentionTimeBatchRequest:
    description: Array of retention time change request.
    properties:
      body:
        description: Single request content.
        properties:
          id:
            description: Copy id.
            type: string
          retentionTime:
            description: New retention time.
            format: date-time
            type: string
        type: object
      id:
        description: Request id.
        type: string
    type: object
  CopiesRetentionTimeBatchRequests:
    description: Retention time change batch request body.
    properties:
      requests:
        description: Contains a list of changes to be applied to the resource.
        items:
          $ref: '#/definitions/CopiesRetentionTimeBatchRequest'
        type: array
    type: object
  CopiesRetentionTimeBatchResponse:
    description: The response of the retention time change update.
    properties:
      activityId:
        type: string
    type: object
  Copy:
    description: Provide copy REST model to update copy retention time. ID and retention
      time are required.
    properties:
      adhocBackup:
        description: Indicates if this is a manual or scheduled backup copy.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      assetId:
        description: UUID of the asset to which this copy corresponds.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      assetSubtype:
        $ref: '#/definitions/AssetSubtypeEnum'
      backupTransactionId:
        description: The parent backup transaction that this copy belongs to.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      baseCopyId:
        description: Provides the relationship to the full copy that is the base for
          a differential or log copy.
        type: string
      copyConsistency:
        description: The data consistency for this protection copy set.
        enum:
        - CRASH_CONSISTENT
        - APPLICATION_CONSISTENT
        type: string
      copyType:
        description: The backup level of this protection copy set.
        enum:
        - FULL
        - DIFFERENTIAL
        - INCREMENTAL
        - LOG
        - UNKNOWN
        - SPFILE
        - CONTROLFILE
        - ARCHIVELOG
        - INCR_0
        - INCR_1_CUMULATIVE
        - INCR_1_DIFFERENTIAL
        - CUMULATIVE_INCR
        - DIFF_INCR
        - AUXILIARY
        type: string
      createTime:
        description: The creation date and time of this protection copy set.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      dataTargetIds:
        items:
          type: string
        type: array
      details:
        $ref: '#/definitions/CopyDetails'
      endTime:
        format: date-time
        type: string
      exportedCopyCount:
        description: Number of exported copy count on this copy.
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      externalId:
        description: 'The external ID of the copy set.


          Cloud DR description of this field:


          The Copy ID that Cloud DR generates (PowerProtect Data Manager does not
          generate this value).

          This field is the only connection in PowerProtect Data Manager between the
          new PCS that is created and the Cloud DR copy.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: UUID of the copy.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      location:
        description: Location type of the copy.
        enum:
        - LOCAL
        - CLOUD
        - LOCAL_RECALLED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      logCount:
        description: The number of logs that are dependent on the full copy.
        type: string
      metadataIndexingStatus:
        enum:
        - RUNNING
        - FAILED
        - PARTIAL_SUCCESS
        - SUCCESS
        type: string
      partialCopy:
        description: Applies to VMDM and ADM.  ADM indicates broken chain.
        type: boolean
      partialCopyDescription:
        description: Message that indicates why this is a partial copy.
        type: string
      protectionCreated:
        description: Whether the copy represented by this copy set is created by PowerProtect
          Data Manager or not.  Copies that are created by PowerProtect Data Manager
          have this field set to true.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionPolicy:
        $ref: '#/definitions/CopyProtectionPolicy'
      replicatedCopy:
        description: Indicates if this copy is a replicated copy.
        type: boolean
      restoreTargetCompatibilities:
        description: 'Cloud DR supports different cloud vendors: AWS, AWS

          GovCloud, AZURE.

          Each vendor has basic requirements for a restore to work according to the
          state of the VM.

          Each copy of the VM should have a list containing the compatibility for
          each target (vendor).'
        items:
          $ref: '#/definitions/RestoredTargetCompatibilities'
        type: array
        x-ppdm-filter: true
        x-ppdm-sort: true
      retentionLock:
        description: Derived from the retention locks on the child protection copies.
        enum:
        - ALL_COPIES_UNLOCKED
        - ALL_COPIES_LOCKED
        - PARTIAL_COPIES_LOCKED
        type: string
      retentionTime:
        description: The earliest of the retention time on the child protection copies.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      retierTime:
        description: The retier time on the protection copies in the cloud.
        format: date-time
        type: string
      size:
        description: The used capacity in the storage system of this copy in bytes.
        format: int64
        type: integer
      startTime:
        format: date-time
        type: string
      state:
        description: 'State of the copy.

          '
        enum:
        - IDLE
        - READY_FOR_CLOUD_TIERING
        - CLOUD_TIERING
        - CLOUD_RECALLING
        - DELETING
        - DELETED
        - DELETE_FAILED
        - SOFT_DELETED
        - RESTORING
        - EXPORTING
        - CATALOG_DELETE_FAILED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      storageSystemId:
        description: The ID of the storage system (for example, DATADOMAINSYSTEM)
          that the protection copies that are associated with this copy set reside
          on.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      validationResult:
        $ref: '#/definitions/VMBackupValidationResult'
    title: ''
    type: object
  CopyDeletion:
    description: Copy Deletion.
    properties:
      activityId:
        type: string
      copyIds:
        items:
          type: string
        type: array
        uniqueItems: true
    required:
    - copyIds
    type: object
  CopyDeletionBatchRequest:
    properties:
      body:
        $ref: '#/definitions/CopyDeletionRequest'
      id:
        type: string
    type: object
  CopyDeletionBatchRequests:
    description: Batch copy deletion request model
    properties:
      requests:
        items:
          $ref: '#/definitions/CopyDeletionBatchRequest'
        type: array
    type: object
  CopyDeletionBatchResponse:
    properties:
      body:
        $ref: '#/definitions/CopyDeletionResponse'
      id:
        type: string
      status:
        type: string
    type: object
  CopyDeletionBatchResponses:
    description: Batch copy deletion response model
    properties:
      responses:
        items:
          $ref: '#/definitions/CopyDeletionBatchResponse'
        type: array
    type: object
  CopyDeletionRequest:
    properties:
      copyId:
        type: string
    type: object
  CopyDeletionResponse:
    properties:
      activityId:
        type: string
      copyIds:
        items:
          type: string
        type: array
    type: object
  CopyDetails:
    properties:
      arraySerialNo:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      arraySubType:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      backupStartTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      fileSystem:
        $ref: '#/definitions/CopyFileSystem'
      k8sBackup:
        $ref: '#/definitions/CopyK8s'
      mssqlBackup:
        $ref: '#/definitions/CopySql'
      nasBackup:
        $ref: '#/definitions/CopyNas'
      oracleBackup:
        $ref: '#/definitions/CopyOracle'
      storageClass:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      storageGroupID:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      vmBackup:
        $ref: '#/definitions/CopyVm'
    type: object
  CopyFileSystem:
    properties:
      ddbeaMetadata:
        properties:
          ddHostname:
            description: DataDomain hostname this protection copy set is located on.
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          ddUser:
            description: User name of the user who backed up to the data domain storage
              unit.
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          devicePath:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          namespace:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          size:
            description: Size of the backup in bytes.
            format: int64
            type: integer
            x-ppdm-filter: true
            x-ppdm-sort: true
          subSpaceGUID:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          subspace:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          technology:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          transactionId:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
        type: object
    type: object
  CopyK8s:
    description: CopyK8s is used for info in copy details.
    properties:
      backupId:
        type: string
      clusterResourcesIncluded:
        type: string
      persistentVolumeClaims:
        items:
          $ref: '#/definitions/PersistentVolumeClaims'
        type: array
    type: object
  CopyLog:
    properties:
      date:
        description: The date when this copy log was created.
        format: date-time
        type: string
      id:
        description: The ID of this copy log.
        format: string
        type: string
      partialCopy:
        description: Indicates whether this copy is a partial copy or not.
        type: boolean
      partialCopyDescription:
        description: The descriptions for partial copy, if this is a partial copy.
        type: string
      sizeBytes:
        description: The used capacity in storage system of this copy in bytes.
        format: int64
        type: integer
    type: object
  CopyLogs:
    properties:
      content:
        items:
          $ref: '#/definitions/CopyLog'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CopyMap:
    description: Detailed information for all copies of the asset.
    properties:
      assetType:
        description: The type of an asset
        enum:
        - VMAX_STORAGE_GROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        - KUBERNETES
        - MICROSOFT_EXCHANGE_DATABASE
        - SAP_HANA_DATABASE
        - NAS_SHARE
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      details:
        $ref: '#/definitions/AssetDetails'
      id:
        description: UUID of the corresponding asset
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: Asset name.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      nodeId:
        description: UUID of the corresponding asset.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      storageLocations:
        items:
          $ref: '#/definitions/StorageLocation'
        type: array
      storageSystemName:
        description: Name of storage system.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      totalCopyCount:
        description: Total copy count. Including the copies where the state is marked
          with DELETE prefix
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      totalSizeBytes:
        description: Total size bytes. Inclouding the copies where the state is marked
          with DELETE prefix
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  CopyMetric:
    description: Copy metric.
    properties:
      assetId:
        description: Asset ID.
        type: string
      centralizedCopyCount:
        description: Number of PowerProtect Data Manager generated copies.
        format: int32
        type: integer
      maxCopySize:
        description: Maximum copy size.
        format: double
        type: number
      minCopySize:
        description: Minimum copy size.
        format: double
        type: number
      selfServiceCopyCount:
        description: Number of self-generated copies (not generated by PowerProtect
          Data Manager).
        format: int32
        type: integer
      stageCopyMetrics:
        items:
          properties:
            copyCount:
              description: Number of total copies at this stage.
              format: int32
              type: integer
            latestCopyTime:
              description: Most recent copy time for recoverable copies.
              format: date-time
              type: string
            oldestCopyTime:
              description: Oldest copy time for recoverable copies.
              format: date-time
              type: string
            policyId:
              description: Policy ID of the stage.
              type: string
            stageId:
              description: Stage ID.
              type: string
            stageType:
              description: Stage type.
              enum:
              - PROTECTION
              - PROMOTION
              - REPLICATION
              - CLOUD_TIER
              - PRIMARY
              - CDR
              - ALL
              type: string
          type: object
        type: array
      totalNumbers:
        description: Total number of copies.
        format: int32
        type: integer
    type: object
  CopyMetrics:
    description: Metrics for the copies.
    properties:
      content:
        items:
          $ref: '#/definitions/CopyMetric'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CopyNas:
    description: CopyNas is used for info in copy details.
    properties:
      directoryCount:
        type: string
      fileCount:
        type: string
      snapshotMetadata:
        properties:
          id:
            type: string
          name:
            type: string
          path:
            type: string
          pathId:
            type: string
        type: object
    type: object
  CopyOracle:
    description: Oracle copy related infomation in copy details.
    properties:
      backupObject:
        enum:
        - PDB
        - CDB
        - DATABASE
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      backupPieces:
        items:
          type: string
        type: array
      copyNumber:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      ddbeaMetadata:
        properties:
          applicationsOfInterest:
            items:
              $ref: '#/definitions/SingleApplicationOfInterest'
            type: array
          ddHostname:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          storageUnit:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          transactionId:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          user:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
        type: object
      dependentLogNaturalIds:
        items:
          items:
            type: string
          type: array
        type: array
      dependentLogs:
        items:
          type: string
        type: array
      firstScn:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      followControlFile:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      followSpFile:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      hasControlFile:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      hasSpFile:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      incarnationNumber:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      jobId:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastScn:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      rmanCatalog:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      thread:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  CopyProtectionPolicy:
    properties:
      id:
        type: string
      stages:
        items:
          $ref: '#/definitions/CopyProtectionPolicyStage'
        type: array
    type: object
  CopyProtectionPolicyStage:
    properties:
      id:
        type: string
      ownedTime:
        format: date-time
        type: string
      type:
        enum:
        - PROTECTION
        - PROMOTION
        - REPLICATION
        - CLOUD_TIER
        - PRIMARY
        - CDR
        - OTHERS
        - ALL
        type: string
    type: object
  CopySql:
    description: CopySql is used for info in copy details.
    properties:
      backupUuid:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      ddbeaMetadata:
        properties:
          applicationsOfInterest:
            items:
              $ref: '#/definitions/SingleApplicationOfInterest'
            type: array
          copyOnly:
            type: boolean
            x-ppdm-filter: true
            x-ppdm-sort: true
          ddHostname:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          dependentSequenceNumbers:
            items:
              type: string
            type: array
          mfrExtendedAttribute:
            properties:
              dependentSequenceNumbers:
                items:
                  type: string
                type: array
              directoryPath:
                type: string
                x-ppdm-filter: true
                x-ppdm-sort: true
            type: object
          namespace:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          sequenceNumber:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          storageUnit:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          subspace:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          transactionId:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          user:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
        type: object
      parentVmPcsId:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionEngineFlow:
        enum:
        - APPDIRECT
        - VMDIRECT
        - HYPERVISORDIRECT
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      snapshotMetadata:
        properties:
          consistencyGroupId:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          rpHost:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          snapshotName:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          snapshotUser:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          staticImages:
            items:
              type: string
            type: array
        type: object
      softDelete:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  CopyVm:
    properties:
      backupId:
        description: An opaque identifier used to represent the entire VM backup that
          contains a full backup of this database.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      dataMoverType:
        enum:
        - INHERIT_FROM_POLICY
        - SDM
        - VADP
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      diskBackupCount:
        description: The number of disks that have been backed up as part of this
          backup.
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      diskTotalCount:
        description: The total number of disks for the VM.
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      disks:
        items:
          $ref: '#/definitions/copyTargetDisk'
        type: array
      partialCopy:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      partialCopyDescription:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionEngineType:
        enum:
        - VMDIRECT
        - HYPERVISORDIRECT
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      quiesceStatus:
        enum:
        - NONE
        - FULL
        - COPY
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      storagePolicyId:
        description: The UUID of vCenter storage policy assigned to the VM and any
          non-disk files.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      syntheticFull:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      transportModeUsed:
        description: The transport mode used to transfer the data for this copy (NBD.
          HotAdd)
        enum:
        - NBD
        - HOTADD
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  Credential:
    description: The request body to update credential.
    properties:
      consumersCount:
        description: The total number of consumers using this credential.
        minimum: 0
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      id:
        description: The UUID of credential.
        type: string
      internal:
        description: The internal credential is created by PowerProtect Data Manager
          instead of by users.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      method:
        description: The credential method.
        enum:
        - BASIC
        - TOKEN
        - CONFIG
        - USER_KEY
        type: string
      name:
        description: The name of credential.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      password:
        description: The password of credential account.
        type: string
      secretId:
        description: The UUID that points to secret entry in lockbox that stores the
          password.
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      type:
        description: The type of credential account.
        enum:
        - DATADOMAIN
        - POWERPROTECT
        - DBUSER
        - OS
        - RMAN
        - STANDARD
        - VCENTER
        - KUBERNETES
        - SMISSERVER
        - CDR
        - SAPHANA_DB_USER
        - SAPHANA_SYSTEMDB_USER
        - DDBOOST
        - NAS
        - CLOUD_SNAPSHOT_MANAGER
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      username:
        description: The username of credential account.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - name
    - username
    - password
    - type
    type: object
  CredentialConsumer:
    description: The consumer for a credential
    properties:
      id:
        type: string
      name:
        type: string
    title: CredentialConsumer
    type: object
  CredentialConsumerList:
    description: The consumer list for a credential
    properties:
      consumers:
        items:
          $ref: '#/definitions/CredentialConsumer'
        type: array
      label:
        type: string
      type:
        enum:
        - ASSETS
        - PROTECTION_POLICIES
        - INVENTORY_SOURCES
        - HOSTS
        - STORAGE_SYSTEMS
        - DATADOMAIN_MTREES
        type: string
    title: CredentialConsumerList
    type: object
  CredentialUsage:
    description: The usage information for a credential
    properties:
      consumerList:
        items:
          $ref: '#/definitions/CredentialConsumerList'
        type: array
      consumersCount:
        minimum: 0
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
    title: CredentialUsage
    type: object
  Credentials:
    properties:
      content:
        items:
          $ref: '#/definitions/Credential'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  CredentialsBatchDeletionRequest:
    description: ''
    properties:
      requests:
        items:
          properties:
            body:
              properties:
                id:
                  type: string
              required:
              - id
              type: object
            id:
              type: string
          required:
          - id
          - body
          type: object
        type: array
    title: CredentialsBatchDeletionRequest
    type: object
  CredentialsBatchRequest:
    description: Asset credentials password update request.
    properties:
      body:
        description: Single request content.
        properties:
          id:
            description: Credential id.
            type: string
          password:
            description: credential password which used to update.
            type: string
        type: object
      id:
        description: Request id.
        type: string
    type: object
  CredentialsBatchRequests:
    description: Credentials batch request body.
    properties:
      requests:
        description: Array of asset credentials password update request.
        items:
          $ref: '#/definitions/CredentialsBatchRequest'
        type: array
    type: object
  CredentialsBatchResponse:
    description: The response of the Credentials Batch Update.
    properties:
      activityId:
        type: string
    type: object
  DataDomainBoostOptions:
    properties:
      globalAuthenticationMode:
        type: string
      globalEncryptionStrength:
        type: string
    type: object
  DataDomainEncryptionSettings:
    properties:
      ddboostOptions:
        $ref: '#/definitions/DataDomainBoostOptions'
      hostname:
        type: string
      replicationOptions:
        $ref: '#/definitions/DataDomainReplicationOptions'
    type: object
  DataDomainMTree:
    description: Data Domain MTree Response.
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      availableCapacityInBytes:
        format: double
        readOnly: true
        type: number
      createdAt:
        format: date-time
        readOnly: true
        type: string
      credential:
        $ref: '#/definitions/Id'
      discovered:
        readOnly: true
        type: boolean
      hardCapacityQuotaLevel:
        format: int64
        type: integer
      hardStreamQuotaLevel:
        format: int32
        type: integer
      id:
        format: string
        type: string
      lastDiscoveryStatus:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      notDetected:
        readOnly: true
        type: boolean
        x-ppdm-deprecated: true
      protectionCreated:
        type: boolean
      replicationSources:
        items:
          type: string
        readOnly: true
        type: array
      replicationTargets:
        items:
          type: string
        type: array
      retentionLockMode:
        type: string
      retentionLockStatus:
        type: string
      retentionMaximum:
        format: int64
        readOnly: true
        type: integer
      retentionMinimum:
        format: int64
        readOnly: true
        type: integer
      reusable:
        type: boolean
      softCapacityQuotaLevel:
        format: int64
        type: integer
      softStreamQuotaLevel:
        format: int32
        type: integer
      storageSystem:
        $ref: '#/definitions/Id'
      systemManaged:
        type: boolean
      tenant:
        $ref: '#/definitions/Id'
      totalCapacityInBytes:
        format: double
        readOnly: true
        type: number
      type:
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
      userTags:
        items:
          type: string
        type: array
        uniqueItems: true
    required:
    - name
    - storageSystem
    - credential
    type: object
  DataDomainMTrees:
    description: Data Domain MTree List Response.
    properties:
      content:
        items:
          $ref: '#/definitions/DataDomainMTree'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  DataDomainReplicationOptions:
    properties:
      authenticationMode:
        type: string
      encryption:
        type: string
    type: object
  DataDomainStorageUnit:
    properties:
      credentialId:
        type: string
      dataAccessIp:
        type: string
      dataTargetId:
        type: string
      retentionLock:
        $ref: '#/definitions/RetentionLock'
      storageArrayId:
        type: string
      storageUnit:
        $ref: '#/definitions/StorageUnit'
    type: object
  DataTarget:
    description: Detailed information of the data target.
    properties:
      details:
        $ref: '#/definitions/DataTargetDetails'
      externalId:
        type: string
      id:
        type: string
      lastDiscovered:
        format: date-time
        type: string
      lastDiscoveryStatus:
        enum:
        - NEW
        - DETECTED
        - NOT_DETECTED
        - DELETED
        type: string
      name:
        type: string
      storageArrayId:
        type: string
      subtype:
        enum:
        - DDV_DISK_POOL
        - DDV_DISK_DEVICE_GROUP
        - DDV_DISK_SERVICE
        - DD_MTREE
        - STORAGE_ARRAY
        - DD_STORAGE_UNIT
        - CDR_CONTAINER
        type: string
      type:
        enum:
        - TARGET_VOLUME
        - GROUP
        - DR
        - STORAGE_ARRAY
        - CDR_STORAGE
        type: string
      vendor:
        $ref: '#/definitions/VendorEnum'
    type: object
  DataTargetDetails:
    properties:
      replica:
        description: Indicates if current data target is a replica of another data
          target.
        readOnly: true
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  DbConnection:
    properties:
      tnsAdmin:
        type: string
      tnsName:
        type: string
    type: object
  DeleteInventorySourceResponse:
    description: The response for deleting an inventory source when it is running
      as an asynchronous operation.
    properties:
      activityId:
        description: The ID of the activity.
        type: string
    type: object
  DeployCdrsRequest:
    description: Deploy CDRS resource.
    properties:
      adminPassword:
        type: string
      cidrBlockIp:
        type: string
      cloudTargetId:
        type: string
      deleteExisting:
        type: boolean
      email:
        type: string
      monitorPassword:
        type: string
      vpcId:
        type: string
      workflowTaskId:
        type: string
    type: object
  DeployStageStatus:
    properties:
      deployStage:
        enum:
        - PRE_DEPLOYMENT_RESOURCES_VALIDATION
        - UPLOAD_CDRS_FILES
        - DEPLOY_CLOUD_INFRASTRUCTURE
        - LAUNCH_INSTANCE
        - CDRS_DEPLOYMENT_VALIDATION
        type: string
      status:
        enum:
        - IDLE
        - RUNNING
        - COMPLETED_SUCCESS
        - COMPLETED_ERROR
        type: string
    type: object
  DeployStateProperties:
    description: 'Deployment state properties. '
    properties:
      deployStagesStatus:
        description: 'Represents details about stages in deployments and their status.


          Stages include: PRE_DEPLOYMENT_RESOURCES_VALIDATION, UPLOAD_CDRS_FILES,
          DEPLOY_CLOUD_INFRASTRUCTURE, LAUNCH_INSTANCE, CDRS_DEPLOYMENT_VALIDATION


          Status values include: IDLE, RUNNING, COMPLETED_SUCCESS, COMPLETED_ERROR'
        items:
          $ref: '#/definitions/DeployStageStatus'
        type: array
      deployState:
        description: 'Represents the state of the deployment job. Values include:
          IN_PROGRESS, COMPLETE, FAILURE, UNKNOWN.'
        enum:
        - IN_PROGRESS
        - COMPLETE
        - FAILURE
        - UNKNOWN
        type: string
      jobName:
        description: Name of the deployment job. This name is autogenerated for each
          deployment job.
        type: string
      message:
        description: May include details about the job status.
        type: string
    type: object
  DeviceConnection:
    description: Device Connection.
    properties:
      automaticDownloadUpgradePackage:
        type: boolean
      createdDate:
        type: string
      deploymentStatus:
        type: string
      deviceStatus:
        type: string
      emcSupportPassword:
        type: string
      emcSupportUsername:
        type: string
      gatewayHostAddress:
        type: string
      gatewaySerialNumber:
        type: string
      id:
        type: string
    type: object
  DeviceConnections:
    description: Get a page result of Device Connection.
    properties:
      content:
        items:
          $ref: '#/definitions/DeviceConnection'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  DirectoryFileList:
    description: Directory File List.
    properties:
      content:
        items:
          $ref: '#/definitions/BrowseFileEntry'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Discoveries:
    description: Get a list of Discoveries response.
    properties:
      content:
        items:
          $ref: '#/definitions/Discovery'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Discovery:
    description: The model for starting discoveries, updating discovery schedules,
      and getting information about discoveries.
    properties:
      description:
        description: An optional description for the discovery.  If a description
          is not provided, a default description is assigned.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: The UUID of the internal discovery information in elastic search
          (not usually needed).  This UUID is only valid to be provided to API taking
          UUID in path.
        type: string
      level:
        default: DataCopies
        description: 'How deeply to discover the starting resource.  Valid values
          are:

          - ManagementInterface

          - Device or HOST (adm)

          - ProtectableData or APPSERVER (adm)

          - DataCopies


          The default level value is DataCopies.'
        enum:
        - ManagementInterface
        - Device
        - HOST
        - ProtectableData
        - APPSERVER
        - DataCopies
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: An optional name for the discovery. If a name is not provided,
          a default name is assigned.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      schedule:
        $ref: '#/definitions/DiscoverySchedule'
      start:
        description: 'The starting resource from which to discover.  Examples are:

          - /inventorySources/UUID

          - /hosts/UUID

          - /storageSystems/UUID


          There is no default for the start value and it is required.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      taskId:
        description: The UUID of the currently running discovery activity, or not
          reported if the discovery activity has completed.  For example, after starting
          a discovery with POST this field contains the discovery activity started
          and continues to contain the discovery activity during GET actions.  Once
          the discovery activity has completed, it is reported (as its value is set
          to null).
        type: string
    required:
    - start
    type: object
  DiscoveryResult:
    description: Result of the discovery activity.
    properties:
      error:
        description: Error description for the discovery task.
        type: string
      messageID:
        description: UUID of the message for the discovery task.
        type: string
      remediation:
        description: Remediation for the discovery task.
        type: string
      status:
        description: 'Status of the discovery task. Valid values are following:

          - OK

          - CANCELED

          - FAILED

          - OK_WITH_ERRORS.'
        enum:
        - OK
        - CANCELED
        - FAILED
        - OK_WITH_ERRORS
        - UNKNOWN
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      summaries:
        description: Summaries of the discovery task.
        items:
          type: string
        type: array
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  DiscoverySchedule:
    additionalProperties: false
    description: The schedule for daily scheduled discoveries.
    maxProperties: 3
    minProperties: 3
    properties:
      enabled:
        default: false
        description: Whether or not the schedule should be enabled.  The schedule
          is disabled by default (enabled set to false).
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      startHour:
        default: 2
        description: The hour when the scheduled discovery starts.  The default schedule
          start time is 2:00 AM.
        format: int32
        maximum: 23
        minimum: 0
        multipleOf: 1
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      startMinute:
        default: 0
        description: The minute when the scheduled discovery starts.  The default
          schedule start time is 2:00 AM.
        format: int32
        maximum: 59
        minimum: 0
        multipleOf: 1
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  Disk:
    description: Disk information
    properties:
      availableSize:
        description: The total available size of all partitions.The availableSize
          in 64 bits.
        format: int64
        type: integer
      id:
        type: string
      name:
        type: string
      nodeId:
        type: string
      partitions:
        items:
          $ref: '#/definitions/Partition'
        type: array
      totalSize:
        description: The total size of all partitions. The totalSize in 64 bits.
        format: int64
        type: integer
    type: object
  Disks:
    description: Get Disks.
    properties:
      content:
        items:
          $ref: '#/definitions/Disk'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  EmbeddedIdName:
    properties:
      id:
        type: string
      name:
        type: string
    readOnly: true
    type: object
  EmbeddedProtectionPolicy:
    properties:
      id:
        type: string
        xml:
          attribute: true
      name:
        type: string
        xml:
          attribute: true
      protectionEngine:
        type: string
      type:
        type: string
    type: object
  EngineCredential:
    description: Credential ID.
    properties:
      id:
        description: id
        type: string
    required:
    - id
    type: object
  EngineDataDomainMtree:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  EngineDetail:
    properties:
      vpe:
        $ref: '#/definitions/VPEEngineInfo'
    type: object
  EngineEmbedded:
    properties:
      dataDomainMtree:
        $ref: '#/definitions/EngineDataDomainMtree'
      storageSystem:
        $ref: '#/definitions/EngineStorageSystem'
    type: object
  EngineStorageSystem:
    properties:
      id:
        type: string
      location:
        type: string
      name:
        type: string
    type: object
  EntityString:
    description: EntityString
    type: string
  ErrorMessage:
    description: 'The error response that describes the failure reason and remediation.

      '
    properties:
      code:
        description: The error code number.
        format: int32
        type: integer
      extendedInfo:
        description: Additional information about the error.
        type: string
      path:
        description: The path the produced the error.
        type: string
      reason:
        description: The reason that the error occurred.
        type: string
      remediation:
        description: A recommended solution to resolve the error.
        type: string
      timestamp:
        description: When the error occurred.
        format: int64
        type: integer
    type: object
  ErrorResponseObject:
    description: The error message response.
    properties:
      code:
        description: The error code.
        format: int32
        type: integer
      path:
        description: The path the error applies to.
        type: string
      reason:
        description: The reason for the error code.
        type: string
      remediation:
        description: The remediation for the error code.
        type: string
      timestamp:
        description: The time of the error.
        format: int64
        type: integer
    type: object
  EsxCluster:
    properties:
      clusterMoref:
        type: string
      networks:
        items:
          $ref: '#/definitions/NetworkMoref'
        type: array
      vCenterUuid:
        type: string
    type: object
  EsxHost:
    properties:
      configScratchLocation:
        type: string
      hostMoref:
        type: string
      hostUuid:
        type: string
      hostVersion:
        type: string
      networks:
        items:
          $ref: '#/definitions/NetworkMoref'
        type: array
      scsiAdapter:
        type: boolean
      splitterInfo:
        $ref: '#/definitions/SplitterInfo'
      vCenterUuid:
        type: string
    type: object
  ExportedCopies:
    properties:
      content:
        items:
          $ref: '#/definitions/ExportedCopy'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ExportedCopiesDeletionResponse:
    properties:
      taskId:
        type: string
    title: ExportedCopiesDeletionResponse
    type: object
  ExportedCopy:
    description: ExportedCopy
    properties:
      assetId:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      completionTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      copyId:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      description:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      expirationTime:
        format: date-time
        type: string
      exportType:
        enum:
        - SD_EXPORT
        - RESTORED_FILES
        - RESTORED_COPIES
        - LIVE_VM_MOUNT
        - VMDK_MOUNT
        - INSTANT_RESTORED_COPIES
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      exportedCopiesDetails:
        $ref: '#/definitions/ExportedCopyDetails'
      id:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      startTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      state:
        enum:
        - WAITING
        - RUNNING
        - STOPPING
        - COMPLETED
        - INCOMPLETE
        - EXPIRED
        - MOUNTED
        - DELETING
        - VMOTIONING
        - MOUNTING
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      storageSystem:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - description
    - exportType
    - assetId
    - copyId
    type: object
  ExportedCopyDetails:
    description: ExportedCopyDetails
    properties:
      targetExportedStorageInfo:
        $ref: '#/definitions/ExportedTargetStorageInfo'
      targetExportedVmInfo:
        $ref: '#/definitions/ExportedTargetVmInfo'
    type: object
  ExportedTargetStorageInfo:
    description: ExportedTargetStorageInfo
    properties:
      exportDevices:
        items:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type: array
      initiatorGroups:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lunMaps:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      restoredCopyId:
        description: The restored copy ID for current exported copy.
        type: string
      targetArray:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      targetGroupName:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      targetHosts:
        items:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type: array
    type: object
  ExportedTargetVmInfo:
    description: ExportedTargetVmInfo
    properties:
      restoredCopyId:
        description: The restored copy ID for current exported copy.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      targetAssetId:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      targetVmName:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ExternalNotification:
    description: Configure alert notifications with the categories and serverities.
    properties:
      categoryList:
        description: Enum of MessageCategory for filtering.
        items:
          type: string
        type: array
      disabled:
        description: User can enable or disable notifications.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      emails:
        description: List of email addresses to send the alerts to.
        items:
          type: string
        type: array
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: External notification ID.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: false
      lastAlertMatchTime:
        description: Time that the last alert was created meeting this criteria.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastNotificationTime:
        description: This parameter is the date and time of the last transmission.
        format: date-time
        type: string
        x-ppdm-filter: true
      messageIdList:
        description: Specific MessageID for filtering.
        items:
          type: string
        type: array
      name:
        description: Name of notification configuration.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      notificationWindow:
        description: This is the time frame for the PowerProtect Data Manager user
          to wait before sending more notifications.
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      severityList:
        description: Enum of MessageSeverity for filtering.
        items:
          type: string
        type: array
      source:
        $ref: '#/definitions/Source'
      subjectOverride:
        description: Customer-provided subject line for outgoing notifications.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - name
    - emails
    - id
    type: object
  ExternalNotifications:
    description: Get External Notifications.
    properties:
      content:
        items:
          $ref: '#/definitions/ExternalNotification'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  FailedObjective:
    properties:
      code:
        type: string
      copyType:
        enum:
        - ALL
        - FULL
        - DIFFERENTIAL
        - LOG
        - INCREMENTAL
        - CUMULATIVE
      name:
        type: string
      reason:
        type: string
      remediation:
        type: string
    type: object
  Failure:
    properties:
      reason:
        type: string
      remediation:
        type: string
    type: object
  FileInstance:
    description: The result document describes the document fields returned in the
      query API response.
    properties:
      assetId:
        description: Unique ID of the asset that is indexed, provided by the orchestration
          host
        type: string
      assetName:
        description: The name of the asset - VM name for VM backup
        type: string
      backupType:
        description: The type of backup this metadata originated - indicates the filesystem
          NTFS/ext2/ext3/ext4/xfs. For NAS, it is NAS
        type: string
      copyEndDate:
        description: The copy end date and time when this file was backed up.  Copy
          start date and copy end date are used to determine how to restore a file
          or folder from a point in time.
        format: date-time
        type: string
      copyStartDate:
        description: The copy start date and time when this file was backed up.  Copy
          start date and copy end date are used to determine how to restore a file
          or folder from a point in time.
        format: date-time
        type: string
      createdAt:
        description: The creation time of this file or folder.
        format: date-time
        type: string
      diskLabel:
        description: The VM disk label for VMs or the Slice Name for NAS
        type: string
      diskName:
        description: The VM disk name for VMs or the Slice ID for NAS
        type: string
      id:
        description: The unique id for this document for VM backups;  holds the path
          hash value for NAS backups
        type: string
      itemType:
        description: The type of document.
        type: string
      location:
        description: 'The directory where this file or folder is located. '
        type: string
      name:
        description: The name of this file or folder.
        type: string
      protectionPolicyId:
        description: The ID of the protection policy that instantiated this backup.
        type: string
      size:
        description: The size in bytes.
        format: int64
        type: integer
      sourceServer:
        description: The name of the source server. vCenter FQDN for VM, appliance
          name for NAS
        type: string
      type:
        description: The file type.  Folders are of type folder.
        type: string
      updatedAt:
        description: The last update time of this file or folder.
        format: date-time
        type: string
    title: FileInstance
    type: object
  FileInstances:
    properties:
      content:
        items:
          $ref: '#/definitions/FileInstance'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Firewall:
    description: PPDM embedded firewall
    properties:
      outbounds:
        items:
          $ref: '#/definitions/Outbound'
        type: array
    type: object
  ForgotPasswordRequest:
    description: Username.
    properties:
      username:
        description: The username.
        type: string
    required:
    - username
    type: object
  Host:
    properties:
      addresses:
        $ref: '#/definitions/Addresses'
      cluster:
        $ref: '#/definitions/EmbeddedIdName'
      details:
        $ref: '#/definitions/HostDetails'
      hostname:
        description: Fully-qualified hostname
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: The UUID of host.
        format: string
        type: string
      includedInDiscovery:
        description: Indicates whether the host is included in discovery.
        type: boolean
      inventorySourceId:
        description: The inventory source ID of host.
        type: string
      lastDiscovered:
        description: The last discovery date for this host.
        format: string
        type: string
      lastDiscoveryAt:
        description: The last discovery date for this host.
        format: date-time
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastDiscoveryResult:
        $ref: '#/definitions/DiscoveryResult'
      lastDiscoveryStatus:
        description: The last discovery status for this host.
        type: string
      lastDiscoveryTaskId:
        description: The task ID of the last discovery task for this host.
        format: string
        readOnly: true
        type: string
      lastUpdated:
        description: The date that the host was last updated.
        type: string
      name:
        description: The name of host.
        type: string
      type:
        description: The type of host.
        enum:
        - PRIMARY
        - GROUP
        - APP_HOST
        - ESX_HOST
        - ESX_CLUSTER
        - UNKNOWN
        type: string
    type: object
  HostCredentials:
    properties:
      hostName:
        type: string
      userName:
        type: string
      userPassword:
        type: string
    required:
    - hostName
    - userName
    - userPassword
    type: object
  HostDetails:
    properties:
      appHost:
        $ref: '#/definitions/AppHost'
      esxCluster:
        $ref: '#/definitions/EsxCluster'
      esxHost:
        $ref: '#/definitions/EsxHost'
    type: object
  Hosts:
    properties:
      content:
        items:
          $ref: '#/definitions/Host'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Id:
    description: The UUID reference.
    properties:
      id:
        description: The UUID reference.
        format: string
        type: string
    type: object
  IdLink:
    description: ID link wrapper.
    properties:
      id:
        type: string
      link:
        $ref: '#/definitions/Link'
    type: object
  IdentitySource:
    description: Identity source.
    properties:
      base:
        description: Identity source domain.
        type: string
      configPassword:
        description: Password of the identity source configUser.
        type: string
      configUser:
        description: Identity source user distinguished name with privileges to retrieve
          the groups and users.
        type: string
      createdDate:
        description: Date the identity source was created.
        format: date-time
        type: string
      description:
        description: Identity source description.
        type: string
      groupMemberAttribute:
        description: The identity source attribute defining which users belong to
          the group.
        type: string
      groupNameAttribute:
        description: The attribute distinguishing group names.
        type: string
      groupObjectTypeName:
        description: The identity source group object class.
        type: string
      groupSearchPath:
        description: 'The identity source group search path. '
        type: string
      id:
        description: Identity source ID.
        format: string
        type: string
      port:
        description: Identity source port.
        type: string
      serverAddress:
        description: Identity source host name or IP address.
        type: string
      serverType:
        description: Identity source type. LDAP or AD.
        enum:
        - ldap
        - ad
        type: string
      userIdAttribute:
        description: The attribute distinguishing users.
        type: string
      userObjectTypeName:
        description: The identity source user object class.
        type: string
      userSearchPath:
        description: 'The identity source user search path. '
        type: string
    type: object
  IdentitySourceGroup:
    description: Identity source group names resource.
    properties:
      name:
        description: The name of the identity source group.
        type: string
    type: object
  IdentitySourceGroupUser:
    description: Identity source group usernames resource.
    properties:
      name:
        description: The usernames in the identity source group.
        type: string
    type: object
  IdentitySourceGroupUsers:
    description: Response body of the list of Identity Source group usernames.
    properties:
      content:
        items:
          $ref: '#/definitions/IdentitySourceGroupUser'
        type: array
    type: object
  IdentitySourceGroups:
    description: Response body of the list of Identity Source group names.
    properties:
      content:
        items:
          $ref: '#/definitions/IdentitySourceGroup'
        type: array
    type: object
  IdentitySourceGroupsMapping:
    description: Identity source groups.
    properties:
      groups:
        description: Identity source groups.
        items:
          type: string
        type: array
        uniqueItems: true
      identitySourceId:
        description: Identity source ID.
        format: string
        type: string
    required:
    - groups
    type: object
  IdentitySources:
    description: Response body of the list of Identity Sources.
    properties:
      content:
        items:
          $ref: '#/definitions/IdentitySource'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  InventorySource:
    properties:
      _embedded:
        properties:
          location:
            $ref: '#/definitions/EmbeddedIdName'
        readOnly: true
        type: object
      address:
        description: IP address or hostname of the inventory source.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      credentials:
        $ref: '#/definitions/Id'
      details:
        $ref: '#/definitions/InventorySourceDetails'
      externalTenant:
        $ref: '#/definitions/InventorySourceExternalTenant'
      id:
        description: UUID of the inventory source.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastDiscovered:
        description: The last time the discovery was performed for the inventory source.
        format: date-time
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastDiscoveryResult:
        $ref: '#/definitions/DiscoveryResult'
      lastDiscoveryTaskId:
        description: The task ID of the inventory source when last discovered.
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      local:
        description: 'Indicates whether the inventory source is integrated storage.

          Valid values are the following:

          - True (This is integrated storage)

          - False (Default is false)

          '
        type: boolean
      name:
        description: User-customized name for the inventory source.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      port:
        description: The port of the inventory source.
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      type:
        description: Type of the inventory source.
        enum:
        - DATADOMAINMANAGEMENTCENTER
        - SMISPROVIDER
        - DDSYSTEM
        - VMAXSYSTEM
        - XTREMIOMANAGEMENTSERVER
        - RECOVERPOINT
        - HOST_OS
        - SQLGROUPS
        - ORACLEGROUP
        - DEFAULTAPPGROUP
        - VCENTER
        - EXTERNALDATADOMAIN
        - POWERPROTECTSYSTEM
        - CDR
        - KUBERNETES
        - PPDM
        - UNITYMANAGEMENTSERVER
        - POWERSTOREMANAGEMENTSERVER
        - GENERICNASMANAGEMENTSERVER
        - CLOUD_SNAPSHOT_MANAGER
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      vendor:
        $ref: '#/definitions/VendorEnum'
      version:
        description: Version of the inventory source.
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - name
    - type
    - address
    type: object
  InventorySourceCustomAppGroup:
    properties:
      defaultGroup:
        description: Identifies whether this group is the SQL server default group.
        type: boolean
      ipRules:
        $ref: '#/definitions/InventorySourceIpRules'
      oracle:
        $ref: '#/definitions/InventorySourceOracle'
      unapprovedHostCount:
        description: Number of hosts that are not approved by AppMgr whitelist.
        format: int32
        type: integer
    type: object
  InventorySourceCustomStorageGroup:
    properties:
      vcmAttributes:
        $ref: '#/definitions/InventorySourceVcmAttributes'
    type: object
  InventorySourceDetails:
    properties:
      customAppGroup:
        $ref: '#/definitions/InventorySourceCustomAppGroup'
      customStorageGroup:
        $ref: '#/definitions/InventorySourceCustomStorageGroup'
      k8s:
        $ref: '#/definitions/InventorySourceK8s'
      model:
        type: string
      nas:
        $ref: '#/definitions/InventorySourceNas'
      ppdm:
        $ref: '#/definitions/InventorySourcePpdm'
      vCenter:
        $ref: '#/definitions/InventorySourceVCenter'
    type: object
  InventorySourceExternalTenant:
    description: InventorySource External Tenant.
    properties:
      id:
        description: Id of the external tenant
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: Name of the external tenant
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - id
    type: object
  InventorySourceIpRanges:
    properties:
      max:
        description: String representation of an IPv4 or IPv6 address. The inclusive
          maximum for this range definition.
        type: string
      min:
        description: String representation of an IPv4 or IPv6 address. The inclusive
          minimum for this range definition.
        type: string
    type: object
  InventorySourceIpRules:
    properties:
      ipList:
        description: Set of string representations of IPv4 or IPv6 addresses.
        items:
          type: string
        type: array
      ipRanges:
        description: Set of IP ranges, each defined by its minimum and maximum values.
        items:
          $ref: '#/definitions/InventorySourceIpRanges'
        type: array
      subnetworks:
        description: "\t\nSet of subnetworks, each defined by its IP address and mask."
        items:
          $ref: '#/definitions/InventorySourceSubnetworks'
        type: array
    type: object
  InventorySourceK8s:
    description: InventorySource K8s.
    properties:
      vCenterId:
        type: string
    type: object
  InventorySourceNas:
    description: InventorySource Nas.
    properties:
      protocol:
        enum:
        - NFS
        - CIFS
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      storageApplianceName:
        description: Associated storage name
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  InventorySourceOracle:
    properties:
      rman:
        $ref: '#/definitions/Rman'
      tnsAlias:
        description: Transparent Network Substrate (TNS) alias is needed only for
          DB authentication and wallet.
        type: string
      tnsLocation:
        description: TNS location is needed only for DB authentication and wallet.
        type: string
    type: object
  InventorySourcePpdm:
    properties:
      direction:
        description: The direction of replica meta-data synchronization.  Value is
          one of INCOMING, OUTGOING, BI_DIRECTIONAL
        enum:
        - INCOMING
        - OUTGOING
        - BI_DIRECTIONAL
        type: string
      systemId:
        description: The system ID of the PPDM system.
        type: string
    type: object
  InventorySourceSubnetworks:
    properties:
      ipAddress:
        description: IP address of the inventory source.
        type: string
      netmask:
        $ref: '#/definitions/Netmask'
    type: object
  InventorySourceVCenter:
    properties:
      cloudType:
        description: 'Indicate whether the vCenter is deployed in VMC.Valid values
          are the following:

          - VMC

          - NONE'
        enum:
        - NONE
        - VMC
        type: string
      hosting:
        description: 'Indicate whether the vCenter is hosting current PPDM.

          Valid values are the following:

          - True (The vCenter is hosting current PPDM.)

          - False (It defaults to false.)'
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      internal:
        description: 'Identify whether the inventory source is an internal vCenter.

          Valid values are the following:

          - True (This is an internal vCenter.)

          - False (It defaults to false.)'
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      vSphereUiIntegration:
        description: Indicate whether to register a PPDM vSphere extension, it is
          set to enabled by default, and should be presented to the user in the UI.
        type: boolean
    type: object
  InventorySourceVcmAttributes:
    properties:
      ddboostUserCredsId:
        description: UUID of DD Boost user credential for VCM.
        type: string
      external:
        description: Default value is false for VMware vCenter Configuration Manager
          (VCM).
        type: boolean
    type: object
  InventorySources:
    properties:
      content:
        items:
          $ref: '#/definitions/InventorySource'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  K8sCluster:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  K8sClusters:
    description: List of kubernetes clusters in a PPDM.
    properties:
      content:
        items:
          $ref: '#/definitions/K8sCluster'
        type: array
    type: object
  LastOperation:
    properties:
      Detail:
        type: string
      Operation:
        enum:
        - configure
        - disable_application
        - enable_application
        - monitor
        - backup
        - restore
        - delete_backup
        - redeploy
        - telemetry
        - upgrade
        - version
        - setup_network
        type: string
      Status:
        enum:
        - Pending
        - Queued
        - Running
        - Success
        - Ready
        - Failure
        - Cancelled
        - Cancelling
        - Stopped
        - Stopping
        - StoppingFailed
        - Mounting
        - Mounted
        - Unmounting
        - Unmounted
        type: string
    type: object
  License:
    description: License
    properties:
      activationDate:
        type: string
      daysLeftForExpiry:
        format: int32
        type: integer
      id:
        type: string
      key:
        type: string
      licenseKeys:
        items:
          $ref: '#/definitions/LicenseKey'
        type: array
      status:
        enum:
        - VALID
        - INVALID
        type: string
      swid:
        type: string
      type:
        enum:
        - TRIAL
        - EMERGENCY
        - CAPACITY
        - SOCKET
        - APPLIANCE
        type: string
    required:
    - key
    type: object
  LicenseKey:
    description: License Key
    properties:
      endDate:
        type: string
      featureCode:
        type: string
      featureName:
        type: string
      frontendCapacityInTB:
        format: double
        type: number
      gracePeriod:
        type: string
      licenseType:
        type: string
      numberOfSockets:
        type: string
      plc:
        type: string
      productLine:
        type: string
      startDate:
        type: string
      uomCode:
        type: string
      uomName:
        type: string
    type: object
  Licenses:
    description: Get Licenses.
    properties:
      content:
        items:
          $ref: '#/definitions/License'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Link:
    description: The reference link.
    properties:
      href:
        description: Href of link.
        type: string
        xml:
          attribute: true
      rel:
        description: Rel of link.
        type: string
        xml:
          attribute: true
    type: object
  Location:
    description: Location
    properties:
      id:
        description: The UUID of the location.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lat:
        description: The latitude of the location.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lon:
        description: The longitude of the location.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: The name of the location.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  Locations:
    properties:
      content:
        items:
          $ref: '#/definitions/Location'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Lockbox:
    description: enter description here
    properties:
      lastUpdatedTime:
        type: string
      name:
        type: string
      newPassphrase:
        type: string
      passphrase:
        type: string
    required:
    - newPassphrase
    - passphrase
    type: object
  LogBundle:
    description: A log bundle resource contains the information necessary to request,
      monitor, and access a completed log bundle.  A user provides the bundle start
      date and time and a formula. The server attempts to generate that log bundle
      by populating the other fields as information is available.
    properties:
      bundleStartDate:
        description: 'An ISO8601 date (specified in server time) of the start date
          of logging data to be included in the log bundle.  Bundle start date is
          the most recent date to be provided in the log bundle.  The date is inclusive
          of every hour of that day. For example, a date of 2015-05-11 is interpreted
          as 2015-05-11T23:59:59.999.

          NOTE: The date is assumed to be in the server timezone.'
        type: string
      filename:
        description: The filename of the bundle. Only populated if the bundle is COMPLETE.
        type: string
      generationEndDateTime:
        description: An ISO8601 date and time with timezone (specified in server time)
          of the date that the log bundle was cancelled, failed, or completed.
        format: date-time
        type: string
      generationStartDateTime:
        description: An ISO8601 date and time with timezone that specifies when the
          job started according to the server time.
        format: date-time
        type: string
      id:
        description: The unique ID of the log bundle resource.
        type: string
      logBundleFiles:
        description: Contains a link that provides access to download the physical
          log bundle file. The file is not transferred over the message bus. Only
          populated if the bundle is COMPLETE.
        items:
          $ref: '#/definitions/LogBundleFile'
        type: array
      logBundleFormula:
        $ref: '#/definitions/LogBundleFormula'
      percentComplete:
        description: If the log bundle is BUILDING, this value is a number from 0-100
          representing the percentage of completion of the building log bundle. If
          the log bundle is FAILED, CANCELLED, COMPLETE, or DELETING, this value is
          100.
        format: int32
        type: integer
      sizeOnDiskInBytes:
        description: The size of the log bundle in bytes. Only populated if the bundle
          is COMPLETE.
        format: int64
        type: integer
      sourceSystems:
        description: Specifies source systems ('DATA_MANAGER', 'INTEGRATED_STORAGE',
          'V_PROXY', 'CLOUD_DR_SERVER') of logs to be included in the log bundle.
        items:
          type: string
        type: array
      status:
        description: 'One of: [BUILDING, FAILED, CANCELLED, COMPLETED, DELETING]


          Allowed states by operation include the following.

          POST: No status allowed. If provided, it is ignored.

          PUT: CANCELLED is allowed to cancel the job. Any other entry is ignored.

          DELETE: DELETE does not accept a body. DELETE uses the REST verb and not
          a PUT status update.

          '
        type: string
    required:
    - bundleStartDate
    - logBundleFormula
    type: object
  LogBundleCreateResponse:
    description: Log Bundle Create Async Response
    properties:
      id:
        type: string
    type: object
  LogBundleDeleteResponse:
    description: Log Bundle Delete Response.
    properties:
      id:
        type: string
    type: object
  LogBundleFile:
    description: Log bundle file.
    properties:
      fileName:
        type: string
      sourceSystems:
        items:
          type: string
        type: array
      url:
        type: string
    type: object
  LogBundleFormula:
    description: 'A log bundle formula describes the contents of a log bundle including
      a set of

      log categories, log sources, and a duration.  If there are duplicate log sources
      in the log categories or log sources that are provided, only one copy of that
      log source is provided in the resulting log bundle.'
    properties:
      createdDate:
        description: An ISO8601 with timezone formatted date (in server time) specifying
          the date and time that this formula was created.
        type: string
      description:
        description: A description of the contents of the formula.
        type: string
      duration:
        description: 'An ISO8601 duration (no date or times) to collect for the log
          bundle. It starts from the log bundle start date and extends backwards in
          time (into history).  For version 1, only day durations are allowed. The
          only allowable format is P[n]D, where [n] is the number of days of logs.  A
          duration of 1 day (P1D) is equivalent to requesting 24 hours. Based on the
          description of bundleStartDate, a duration of P1D with a start date of 2015-05-11
          is interpreted as follows: 2015-05-11T23:59:59.999-00:00 to 2015-05-10T23:59:59.999-00:00'
        type: string
      id:
        description: The unique ID of the formula.
        type: string
      includeAllLogCategories:
        description: If set to true, this formula includes available log categories
          at the time that it is used to generate a log bundle.  If set to false,
          or unspecified, this formula includes only the log categories included in
          the log category list (which may be all current log categories). If includeAllLogCategories
          is set to true and the logCategoryList is populated, this value takes precedence.  In
          this case, all log categories are included and the logCategoryList is ignored.
        type: boolean
      includeAllLogSources:
        description: If set to true, this formula includes all available log sources
          at the time that it is used to generate a log bundle.  If set to false,
          or unspecified, this formula includes only the log sources that are included
          in the log source list (which may be all current log sources).  If includeAllLogSources
          is set to true and the logSourceList is populated, this value takes precedence.  In
          this case, all log sources are included and the log source list is ignored.
        type: boolean
      logCategoryList:
        description: An array of log categories that this formula contains. An empty
          array or null indicates none.
        items:
          $ref: '#/definitions/IdLink'
        type: array
      logSourceList:
        description: An array of log sources that this formula contains. An empty
          array or null indicates none.
        items:
          $ref: '#/definitions/IdLink'
        type: array
      name:
        description: A short name of the formula.
        type: string
    required:
    - id
    type: object
  LogBundleRange:
    description: Start date and end date are in RFC3339 format.
    properties:
      EndDate:
        type: string
      StartDate:
        type: string
    type: object
  LogBundles:
    description: 'Log Bundles. '
    properties:
      content:
        items:
          $ref: '#/definitions/LogBundle'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  LogDiskInfo:
    description: Represents the current disk information for the partition on which
      logs and log bundles reside.  This information can be used together with a log
      bundle estimate to determine if a desired log bundle has enough room to be fully
      created.
    properties:
      availableDiskSpaceBytes:
        description: The available/unused disk space (in bytes) of the partition on
          which log files and bundles reside.
        format: int64
        type: integer
      totalDiskSpaceBytes:
        description: The total disk space (in bytes) of the partition on which log
          files and bundles reside.
        format: int64
        type: integer
    required:
    - totalDiskSpaceBytes
    - availableDiskSpaceBytes
    type: object
  LogDiskInfos:
    description: Log Sources.
    properties:
      content:
        items:
          $ref: '#/definitions/LogDiskInfo'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Logging:
    description: enter description here
    properties:
      configurable:
        type: boolean
      logLocation:
        type: string
    type: object
  LoginCredentials:
    description: User login credentials.
    properties:
      password:
        description: The password to log in.
        type: string
      username:
        description: The username to log in.
        type: string
    required:
    - username
    - password
    type: object
  ManageMountedCopyResponse:
    properties:
      taskId:
        description: ID of a PowerProtect Data Manager task. This is the ID sub-field
          of the task link that is also contained in this object.
        type: string
    type: object
  MessageBulk:
    description: Represents a request to acknowledge alerts.
    properties:
      acknowledgement:
        $ref: '#/definitions/AlertAcknowledgement'
      acknowledgementCount:
        description: Number of alerts that were successfully updated with acknowledgment.
        format: int32
        type: integer
      acknowledgementReceivedCount:
        description: The number of alerts accepted from request.
        format: int32
        type: integer
      bulkResults:
        items:
          $ref: '#/definitions/MessageBulkResult'
        type: array
      messageIds:
        description: List of alert UUID to acknowledge.
        items:
          type: string
        type: array
    required:
    - messageIds
    - acknowledgement
    type: object
  MessageBulkResult:
    description: The response object from bulk operations.
    properties:
      acknowledgement:
        $ref: '#/definitions/AlertAcknowledgement'
      errorResponseObject:
        $ref: '#/definitions/ErrorResponseObject'
      id:
        description: Message UUID for failed update.
        type: string
    type: object
  MessageDetails:
    description: This page contains details for validation message.
    properties:
      message:
        description: Message text.
        type: string
      messageArgs:
        description: Message components.
        items:
          type: string
        type: array
      messageID:
        description: ID of the message.
        type: string
      reason:
        description: Message reason.
        type: string
      remediation:
        description: Message remediation, if available.
        type: string
    required:
    - reason
    - message
    title: MessageDetails
    type: object
  MessageSource:
    description: The PowerProtect Data Manager from which the alert message is initiated.
    properties:
      type:
        description: 'The value can be one of:


          DATA_MANAGER

          APPLIANCE_MANAGER'
        enum:
        - DATA_MANAGER
        - APPLIANCE_MANAGER
        type: string
    required:
    - type
    type: object
  MountParams:
    description: This object contains the parameters used to mount the source disk
      data associated with a copy (specified by copyId) to the target VM (specified
      by targetVmAssetId).
    properties:
      copyId:
        description: The PPDM copy id containing the  source disk data to be mounted
          to the target vm.
        type: string
      removeAgent:
        default: false
        description: This flag controls whether the FLR agent (installed on the target
          VM as part of the FLR process) is removed when the FLR session is deleted.
          If the flag is true then the agent is uninstalled otherwise it is not.
        type: boolean
      targetPassword:
        description: Password of the user that will own the recovered files.
        type: string
      targetUser:
        description: Name of the user that will own the recovered files. If the user
          name is not specified PPDM will look for a credential attched to the target
          VM. If that credential does not exists then PPDM will look for a credential
          associated with the PLC that copy was created.
        type: string
      targetVmAssetId:
        description: The PPDM VM asset id corresponding to the target VM that will
          be used to mount the source disk data.
        type: string
      timeout:
        default: '300'
        description: Timeout, in seconds, of the mount operation.
        type: string
    required:
    - copyId
    - targetVmAssetId
    type: object
  MountResponse:
    description: This object is returned from several FLR APIs.  It contains the ID
      of the FLR session and a reference to a PPDM task.
    properties:
      flrSessionId:
        description: The ID of the FLR session.
        type: string
      taskId:
        description: The ID of the PPDM task used to track the status of the called
          API that returned this response object.
        type: string
    type: object
  NameValuePairInteger:
    description: Name value pair. The value type is integer.
    properties:
      name:
        description: Name of the value.
        type: string
      value:
        description: Value of the name. Type of integer.
        format: int32
        type: integer
    type: object
  NameValuePairString:
    description: Name value pair. The value type is string.
    properties:
      name:
        description: Name of the value.
        type: string
      value:
        description: Value of the name. Type of string.
        type: string
    type: object
  NasSessionRef:
    description: Info about all available nas sessions.
    properties:
      CapacityUnits:
        format: int32
        type: integer
    type: object
  Netmask:
    properties:
      notation:
        description: 'Captures the netmask for this subnetwork in this format.

          One of:

          - CIDR

          - DECIMAL

          - BINARY'
        enum:
        - CIDR
        - DECIMAL
        - BINARY
        type: string
      value:
        description: The value of the netmask in the representation as specified by
          the type.
        type: string
    type: object
  Network:
    description: Virtual Network Configurations
    properties:
      gateway:
        description: Optional gateway, not supported in 19.5
        type: string
      id:
        description: 'Optimus: would be acm network id

          Miles: would generate an ID

          For default VLAN, the id would be 0, Miles and Optimus'
        type: string
      ips:
        description: IP address or IP range of addresses. Each IP address or IP address
          range is one item.
        items:
          minLength: 1
          type: string
        type: array
      mtu:
        default: 1500
        description: MTU (maximum transmission unit) for the virtual network.
        maximum: 9000
        minimum: 1500
        type: integer
      name:
        description: Name of the virtual network. Cannot be changed if already used
          by an asset. For default VLAN, the name is "Default Network."
        type: string
      netmask:
        description: Subnet mask for the virtual network.
        type: string
      routes:
        description: 'Optionally add a route. PowerProtect Data Manager servers may
          not need connect to all VLANs (for example, some DD VLANs), but you can
          configure connectable gateways in PowerProtect Data Manager existing VLANs.

          Route configuration may be useful for an external route, for example, to
          cloud.

          For Optimus, ACM don''t store route, so can''t pass in routes when invoke
          PUT.

          '
        items:
          properties:
            destination:
              description: 'Route target IP range or hostname.

                If type is host, enter IP address or FQDN.

                If type is subnet, then use only IP address.'
              type: string
            gateway:
              description: 'Gateway IP or proxy server.

                Optional.

                '
              type: string
            netmask:
              description: Netmask applied to source IP address, whether need support
                short format. Optional, only for subnet type.
              type: string
            type:
              default: subnet
              description: '**subnet:** Subnet. Requires netmask.

                **host:** Single IP address or FQDN. Does not require netmask.

                '
              enum:
              - subnet
              - host
              type: string
          type: object
        type: array
      status:
        default: init
        description: 'Output only, indicating request result.

          **init:** Inititalized, not yet saved to system

          **synced:** Fully synchronized to system

          **changed:** Changed but not fully synchronized to system

          **failed:** Save vlan failed.

          '
        enum:
        - init
        - synced
        - failed
        - changing
        - deleting
        type: string
      type:
        default: any
        description: 'any: no restriction

          In first release, only support this type, in later release, would support
          other types.'
        enum:
        - any
        type: string
      usages:
        description: 'Don''t needed when create network.

          Only can input for usage update API.'
        items:
          properties:
            device:
              description: The device that host used to create allias/virtual interface
              type: string
            inUse:
              default: false
              description: Indicate whether IP is in use by the specific server. Changed
                by status and user input.
              type: boolean
            ip:
              description: Real used IP by host from specified ips
              type: string
            lastUpdateAt:
              description: usage update time.
              type: string
            networkInterface:
              description: Network interface that the host created to accuire IP for
              type: string
            referenceId:
              description: 'Based on server type, store corresponding id

                For PPDM, vProxy and search, would be node id.

                For VSO related servers, would be empty for first release.'
              type: string
            serverType:
              description: Node type
              enum:
              - DATA_MANAGER
              - V_PROXY
              - SEARCH
              type: string
            status:
              description: 'init: specified but not allied yet

                failed: acquire ip failed, maybe because ip conflict

                synced: successfully applied about network and route

                released: can be reuse by other server, and can be deleted from usage

                changed: some changes stored to DB but not apply to server yet'
              enum:
              - init
              - failed
              - released
              - synced
              - deleting
              - changing
              - abandoned
              type: string
            vmNetworkName:
              description: 'Miles only.

                VM''s network card''s network name, for additional vlan, should be
                the one tag as 4095 in vSphere'
              type: string
          type: object
        type: array
      vlanId:
        description: ID of the VLAN. Value is read-only after setting it. For default
          VLAN, the ID is 0. For other VLANs, values range from 1 to 4094.
        maximum: 4094
        minimum: 0
        type: integer
      vmNetworkName:
        default: DPG_VM_PUBLIC_DATA_NETWORK
        description: 'For Optimus only.


          For Miles, host specific, refer to usage''s same field

          '
        type: string
    required:
    - name
    - vlanId
    - ips
    - netmask
    - mtu
    - type
    type: object
  NetworkMoref:
    properties:
      moref:
        type: string
      name:
        type: string
    type: object
  NetworkRequirement:
    description: Required Ip Count per component type, total just sum all up.
    properties:
      networks:
        items:
          $ref: '#/definitions/NetworkRequirementNetwork'
        type: array
    type: object
  NetworkRequirementNetwork:
    description: Network Requirement Network
    properties:
      id:
        type: string
      servers:
        items:
          $ref: '#/definitions/NetworkRequirementServer'
        type: array
    type: object
  NetworkRequirementServer:
    description: Network Requirement Server
    properties:
      ipCount:
        minimum: 0
        type: integer
      type:
        enum:
        - DATA_MANAGER
        - SEARCH
        - V_PROXY
        type: string
    type: object
  Networks:
    description: Get all VLAN networks response model, not the original Network model.
    properties:
      content:
        items:
          $ref: '#/definitions/Network'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Node:
    description: enter description here
    properties:
      components:
        items:
          $ref: '#/definitions/SubComponent'
        type: array
      id:
        type: string
      lastNodeStatusUpdated:
        format: date-time
        type: string
      lastReboot:
        type: string
      lastUpdated:
        format: date-time
        type: string
      lastUpdatedBy:
        type: string
      powerProtectModel:
        type: string
      powerProtectVersion:
        type: string
      restrictions:
        items:
          $ref: '#/definitions/Restrictions'
        type: array
      status:
        enum:
        - INITIALIZING
        - SHUTDOWN
        - PENDING
        - CONFIGURING
        - FAILED
        - RESTORE
        - RESTORE_INIT
        - RESTORE_READY
        - RESTORE_RUNNING
        - RESTORE_COMPLETED
        - RESTORE_FAILED
        - OPERATIONAL
        - OPERATIONAL_INIT
        - OPERATIONAL_RUNNING
        - PARTIALLY_OPERATIONAL
        - MAINTENANCE
        - MAINTENANCE_INIT
        - MAINTENANCE_READY
        - MAINTENANCE_RUNNING
        - MAINTENANCE_FAILED
        - QUIESCE
        - QUIESCE_INIT
        - QUIESCE_READY
        - QUIESCE_RUNNING
        - QUIESCE_FAILED
        - LOCKDOWN
        type: string
      statusDescription:
        type: string
      systemId:
        type: string
      uptimeInDays:
        type: string
      version:
        type: string
    required:
    - id
    - status
    type: object
  NodeCredentials:
    description: Credentials node.
    properties:
      id:
        description: Credentials ID.
        type: string
    required:
    - id
    type: object
  NodeSummary:
    description: Summary of node status.
    properties:
      hostname:
        description: Node FQDN or IP address.
        type: string
      id:
        description: Node ID.
        type: string
      status:
        description: Node status.
        type: string
    type: object
  Nodes:
    description: Get all nodes.
    properties:
      content:
        items:
          $ref: '#/definitions/Node'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ObjectiveValue:
    properties:
      copyType:
        enum:
        - ALL
        - FULL
        - DIFFERENTIAL
        - LOG
        - INCREMENTAL
        - CUMULATIVE
        type: string
      name:
        enum:
        - INTERVAL
        - START_TIME
        - DURATION
        - VERIFY_DELETED
        - RETENTION_TIME
        - RETENTION_LOCK
        - ALLOW_IN_CLOUD
        - LOCATION_OPTION
        - LOCATIONS
        - BACKUP
        - REPLICA
        - CLOUD_TIER
        - CLOUD_DR
        type: string
      typedValues:
        items:
          $ref: '#/definitions/TypedValue'
        type: array
        uniqueItems: true
      valueCardinality:
        enum:
        - SINGLE
        - FLAT_LIST
        - TYPED_LIST
        type: string
    type: object
  Options:
    properties:
      minimumProxyVersion:
        type: string
      quiesceWaitTime:
        format: int32
        type: integer
    type: object
  OracleDBProperties:
    properties:
      rmanProperties:
        $ref: '#/definitions/RmanProperties'
      tnsAdmin:
        type: string
      tnsName:
        type: string
    type: object
  OsUser:
    description: enter description here
    properties:
      description:
        type: string
      newPassword:
        type: string
      numberOfDaysToExpire:
        format: int32
        type: integer
      password:
        type: string
      userName:
        type: string
    required:
    - newPassword
    - password
    - userName
    type: object
  Outbound:
    description: User can add multiple outbounds, whenever they need access external
      server, they can add outbound first.
    properties:
      destination:
        type: string
      port:
        type: string
      rule:
        enum:
        - ACCEPT
        type: string
      usedBy:
        type: string
    required:
    - usedBy
    - destination
    - port
    type: object
  Owner:
    description: The owner of the activity.
    properties:
      name:
        description: Name of the owner.
        type: string
      ownerResource:
        $ref: '#/definitions/OwnerResource'
    type: object
  OwnerResource:
    description: Information about owner.
    properties:
      id:
        description: Id of the owner resource.
        type: string
      resourceType:
        description: Type of the owner resource.
        type: string
    type: object
  PPDMEULA:
    description: PPDM EULA Rest Model.
    properties:
      accepted:
        type: boolean
      acceptedTime:
        type: string
      link:
        type: string
    type: object
  PageInfo:
    description: The page information that is usually used to describe the content
      of an API response, including page number, page size, total elements count,
      and total page count.
    properties:
      number:
        description: The page number.
        type: integer
      queryState:
        description: The query token. Only used for serial query. See Tutorials -
          Page the List Result.
        type: string
      size:
        description: The number of elelments on each page.
        type: integer
      totalElements:
        description: The total number of elements across all pages.
        type: integer
      totalPages:
        description: The total number of pages.
        type: integer
    type: object
  ParentProtectionPolicy:
    properties:
      id:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionEngine:
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      type:
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
    title: ParentProtectionPolicy
    type: object
  Partition:
    description: enter description here
    properties:
      availableSize:
        description: The available size of this partition. The availableSize in 64
          bits.
        format: int64
        type: integer
      fileSystem:
        type: string
      mount:
        type: string
      name:
        type: string
      totalSize:
        description: The total size of this partition. The totalSize in 64 bits.
        format: int64
        type: integer
    type: object
  PersistentVolumeClaims:
    description: PersistentVolumeClaims is used in CopyK8s for K8S copy details.
    properties:
      appConsistentType:
        description: Type of Application Consistent Backup per PCS for PVC if present.
        type: string
      dataMover:
        description: 'The type of dataMover used (either for FCD or non FCD based
          backups) (Per PVC).

          The dataMover will help identify if the backup copy chosen for restore is
          a FCD backup. Expected values for dataMover as of today is "VDDK" or "FSAGENT".
          "VDDK" as data mover indicates that PVC that was backed up is backed by
          a first class disk.'
        type: string
      excluded:
        type: string
      name:
        type: string
      size:
        type: number
      storageClass:
        description: 'Storage Class of the PVC that was backed up. (Per PVC).

          storageClass can be used by UI to show the original storage class of the
          PVC and help choose another storage class in the alternate cluster.'
        type: string
      uid:
        type: string
    title: PersistentVolumeClaims
    type: object
  Plugin:
    properties:
      arch:
        enum:
        - AMD64
        - X86
        type: string
      binaryPath:
        type: string
      createdAt:
        format: date-time
        type: string
      endpoints:
        items:
          $ref: '#/definitions/PluginEndpoint'
        type: array
        uniqueItems: true
      id:
        type: string
      name:
        type: string
      os:
        enum:
        - WINDOWS
        - LINUX
        type: string
      tenantId:
        format: string
        type: string
      updatedAt:
        format: date-time
        type: string
      version:
        type: string
    type: object
  PluginEndpoint:
    properties:
      method:
        enum:
        - GET
        - HEAD
        - POST
        - PUT
        - PATCH
        - DELETE
        - OPTIONS
        - TRACE
        type: string
      path:
        type: string
    type: object
  PreUpgradeHealthCheck:
    description: This page contains PUHC(Pre-Upgrade Health Check) details.
    properties:
      endTime:
        description: End time of pre-upgrade health check.
        format: date-time
        type: string
      initiated:
        description: The way pre-upgrade health check was initiated.
        enum:
        - UPGRADE
        - STANDALONE
        - DOWNLOAD
        type: string
      startTime:
        description: Start time of pre-upgrade health check.
        format: date-time
        type: string
    title: PreUpgradeHealthCheck
    type: object
  PreferredInterface:
    properties:
      networkAddress:
        type: string
      networkLabel:
        type: string
      networkName:
        type: string
      speed:
        format: double
        type: number
    type: object
  Privilege:
    description: Privilege.
    properties:
      category:
        description: Category.
        type: string
      description:
        description: Description.
        type: string
      name:
        description: Name.
        type: string
    type: object
  ProtectionDetail:
    description: 'Response from activity details API : GET /api/v2/protectionDetails'
    properties:
      assetHistoryId:
        description: The asset assocated with the protection.
        type: string
      assetId:
        type: string
      backupLevel:
        description: To indicate the backup type, adhoc or scheduled.
        format: string
        type: string
      bytesTransferred:
        description: Transfer rate value.
        format: int32
        type: number
      completionStatus:
        description: The result status when the protection activity completed.
        enum:
        - FAILED
        - SUCCESS
        type: string
      completionTime:
        description: When the protection activity was completed.
        format: date-time
        type: string
      copyId:
        description: A unique copy ID. Only DD copies are supported.
        type: string
      createdAt:
        description: When this protection detail was created.
        format: date-time
        type: string
      dataTargetId:
        description: The data target associated with the protection.
        type: string
      error:
        $ref: '#/definitions/ProtectionDetailError'
      id:
        description: The unique ID of this protection detail.
        type: string
      initiatedType:
        description: To indicate the backup type, adhoc or scheduled.
        format: string
        type: string
      nextScheduledTime:
        description: The next scheduled time for protection details
        format: date-time
        type: string
      plcId:
        description: The protection policy that is associated with the protection.
        type: string
      protectionPolicyId:
        description: The protection policy that is associated with the protection.
        type: string
      replicatedCopyId:
        description: A unique replicated copy ID.
        type: string
      replicatedDataTargetId:
        description: The replicated data target assocated with the protection.
        type: string
      stageId:
        description: The stage associated with the protection.
        type: string
      startTime:
        description: When the protection actvity was started.
        format: date-time
        type: string
      transferDuration:
        description: Transfer rate value.
        format: int32
        type: number
      type:
        description: The type of protection activity that was performed.
        enum:
        - PROTECT
        - REPLICATE
        - CLOUD_TIER
        - PROMOTE
        - CLOUD_PROTECT
        type: string
    type: object
  ProtectionDetailError:
    description: The information for error of protection details.
    properties:
      code:
        description: The error code for protection details.
        type: string
      extendedReason:
        description: The extended reason for protection details.
        type: string
      reason:
        description: The error reason for protection details.
        type: string
      remediation:
        description: The remediation message for protection details.
        type: string
    type: object
  ProtectionDetails:
    description: Get all protection details in PPDM.
    properties:
      content:
        items:
          $ref: '#/definitions/ProtectionDetail'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ProtectionEngine:
    description: Protection engine information.
    properties:
      _embedded:
        $ref: '#/definitions/EngineEmbedded'
      credentials:
        $ref: '#/definitions/EngineCredential'
      detail:
        $ref: '#/definitions/EngineDetail'
      id:
        description: ID.
        type: string
      ipAddress:
        description: IP address of the protection engine (VPE or vRPA cluster).
        type: string
      name:
        description: Name to associate with the protection engine (for example, the
          vRPA cluster name).
        type: string
      registeredAt:
        description: When the cluster was registered to the PowerProtect Data Manager.
        format: date-time
        type: string
      status:
        description: Status of the protection engine.
        type: string
      type:
        description: Engine type (vRPA or VPE).
        enum:
        - VPE
        type: string
    required:
    - name
    - type
    - ipAddress
    - status
    - credentials
    - detail
    type: object
  ProtectionEngineManagement:
    description: Perform engine management requests.
    properties:
      engineId:
        description: protection engine id
        type: string
      engineType:
        description: Protection engine type (VPE or vRPA).
        enum:
        - VPE
        type: string
      jobId:
        description: Job ID for the operation.
        type: string
      operation:
        description: Management request operation.
        enum:
        - START_PROXIES
        - STOP_PROXIES
        type: string
      options:
        $ref: '#/definitions/Options'
    required:
    - engineId
    - engineType
    - operation
    type: object
  ProtectionEngines:
    description: Get Protection Engine Resource.
    properties:
      content:
        items:
          $ref: '#/definitions/ProtectionEngine'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ProtectionPolicies:
    properties:
      content:
        items:
          $ref: '#/definitions/ProtectionPolicy'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ProtectionPolicy:
    description: The model representing the protection policy.
    properties:
      assetType:
        description: The type of an asset
        enum:
        - VMAX_STORAGE_GROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        - KUBERNETES
        - MICROSOFT_EXCHANGE_DATABASE
        - SAP_HANA_DATABASE
        - NAS_SHARE
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      complianceInterval:
        description: Compliance interval. For example, "PT6H" for 6 hours.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      createdAt:
        description: When the protection policy was created.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      credentials:
        $ref: '#/definitions/ProtectionPolicyCredential'
      dataConsistency:
        description: 'Data consistency selection on the protection policy. Valid values
          are the following:

          - CRASH_CONSISTENT

          - APPLICATION_CONSISTENT'
        enum:
        - CRASH_CONSISTENT
        - APPLICATION_CONSISTENT
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      description:
        description: An optional description for the protection policy.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      details:
        $ref: '#/definitions/ProtectionPolicyDetails'
      enabled:
        description: Indicates whether the protection policy is enabled or disabled.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      encrypted:
        description: VMware backup encryption setting.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      filterIds:
        description: IDs of exclusion filters that are associated with the protection
          policy.
        items:
          type: string
        type: array
        x-ppdm-filter: true
        x-ppdm-sort: true
      forceFull:
        description: Deprecated.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: UUID of the protection policy.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: User customized name for the protection policy.
        maxLength: 150
        minLength: 1
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      passive:
        description: Indicates whether the protection policy is passive or not.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      priority:
        description: Priority of the protection policy.
        exclusiveMinimum: false
        format: int32
        minimum: 1
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      slaId:
        description: ID of associated service level agreement.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      stages:
        items:
          $ref: '#/definitions/ProtectionPolicyStage'
        type: array
      summary:
        $ref: '#/definitions/ProtectionPolicySummary'
      targetStorageProvisionStrategy:
        description: 'To indicate if this protection policy is greenfield or brownfield,
          possible values:

          - USE_CONFIGURED  - Means mark as brownfield.

          - AUTO_PROVISION  - Means mark as greenfield. (default value)'
        enum:
        - AUTO_PROVISION
        - USE_CONFIGURED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      type:
        description: 'The protection policy type. Valid values are the following:

          - ACTIVE

          - EXCLUDED'
        enum:
        - ACTIVE
        - EXCLUDED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      updatedAt:
        description: When the protection policy was updated.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - id
    - name
    - assetType
    - type
    - enabled
    - priority
    - encrypted
    type: object
  ProtectionPolicyAdhocProtectionRequest:
    description: Manual protection at the protection policy level.
    properties:
      assetIds:
        description: 'The list of asset IDs for manual backup.

          If the asset ID list is not empty, the listed assets for manual backup come
          from the same protection policy (the one that is specified).

          If the asset list is null or empty, the manual backup occurs for all assets
          in the specified protection policy.'
        items:
          type: string
        type: array
      stages:
        items:
          $ref: '#/definitions/AdhocProtectionStage'
        type: array
    type: object
  ProtectionPolicyAdhocProtectionResponse:
    description: Response of policy-based manual protection (backup, replication).
    properties:
      results:
        items:
          $ref: '#/definitions/AdhocProtectionResult'
        type: array
    type: object
  ProtectionPolicyAssetAssignments:
    properties:
      content:
        items:
          $ref: '#/definitions/Asset'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ProtectionPolicyBackupRequest:
    description: Manual backup at protection policy level.
    properties:
      assetIds:
        description: 'The list of asset Ids for manual backup.

          If the asset Id list is not empty, all those asset should come from the
          same specified protection policy.

          If the asset list is null or empty, it means manual backup should be triggered
          for all assets under the specified protection policy.'
        items:
          type: string
        type: array
      backupType:
        description: 'Backup type, the value could be one of below.

          - FULL

          - GEN0

          - DIFFERENTIAL

          - LOG

          - INCREMENTAL

          - CUMULATIVE

          - SYNTHETIC_FULL

          - AUTO_FULL


          **Note:**

          - Each asset type has its supported backup types, the provided backup type
          should match those supported backup types.'
        enum:
        - FULL
        - GEN0
        - DIFFERENTIAL
        - LOG
        - INCREMENTAL
        - CUMULATIVE
        - SYNTHETIC_FULL
        - AUTO_FULL
        type: string
      disableProtectionPolicyProcessing:
        default: false
        description: 'Boolean flag indicate whether copies created by manual backup
          should be processed by stages (e.g. promotion, replication, cloudtier, etc.)
          configured in the corresponding protection policy, for now the value is
          always false.

          '
        type: boolean
      retention:
        $ref: '#/definitions/ProtectionPolicyStageRetentionTime'
    type: object
  ProtectionPolicyCredential:
    description: Protection policy credential information.
    properties:
      id:
        description: UUID of credential.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      type:
        description: Connection type.
        enum:
        - OS
        - VCENTER
        - DBUSER
        - DB_WALLET
        - RMAN
        - RMAN_WALLET
        - DB
        - SAPHANA_DB_USER
        - SAPHANA_SYSTEMDB_USER
        - NAS
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
    type: object
  ProtectionPolicyDetails:
    description: Protection policy details information.
    properties:
      oracle:
        $ref: '#/definitions/ProtectionPolicyOracle'
      vm:
        $ref: '#/definitions/ProtectionPolicyVm'
    type: object
  ProtectionPolicyOracle:
    description: Oracle related information on protection policy.
    properties:
      dbConnection:
        $ref: '#/definitions/DbConnection'
      rmanConnection:
        $ref: '#/definitions/ConnectionInfo'
    type: object
  ProtectionPolicyStage:
    description: Protection policy stages information.
    properties:
      attributes:
        $ref: '#/definitions/ProtectionPolicyStageAttributes'
      id:
        description: UUID of stage in protection policy.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      operations:
        items:
          $ref: '#/definitions/ProtectionPolicyStageOperation'
        type: array
        uniqueItems: true
      options:
        description: Free-form policy stage options in JSON
        properties:
          debugEnabled:
            description: 'Indicates if logs need to enable DEBUG mode or not. Default
              to behavior of false if no value provided.

              - false: INFO level set for logging

              - true: DEBUG level set for logging'
            type: boolean
            x-ppdm-filter: false
            x-ppdm-sort: false
          indexingEnabled:
            description: 'Indicates if the protection policy for NAS assets enables
              the metadata indexing for backup. Default to behavior of false if no
              value provided.

              - false: No indexing for a backup copy

              - true: Indexing for the backup copy'
            type: string
            x-ppdm-filter: false
            x-ppdm-sort: false
          promotionType:
            description: "SQL pass thru Option: \nRepresents the backup promotion\
              \ type when backupLevel is LOG/DIFF_INCR . \n\"ALL\": \tPromote any\
              \ database that is not eligible for LOG/DIFF backup to a FULL backup.\
              \ \n\n\"NONE\": \tSkip any database that is not eligible for LOG/DIFF\
              \ backup.\n\n\"NONE_WITH_WARNINGS\": \tSkip any database that is not\
              \ eligible for LOG/DIFF backup but provide user a warning.  Warning\
              \ is provided in the return value.\n\nDefault behavior for SQL AppAgent\
              \ if promotionType is not supplied is to use \"ALL\""
            enum:
            - ALL
            - NONE
            - NONE_WITH_WARNINGS
            type: string
            x-ppdm-filter: false
            x-ppdm-sort: false
          skipSimpleDatabase:
            description: "SQL pass thru option:\nThe backup promotion behavior for\
              \ database in SIMPLE recovery model when backupLevel is LOG.\n\nfalse:\
              \ \tPromote  backup to FULL for database in SIMPLE recovery model if\
              \ backupLevel specified is LOG.\n\ntrue: \tSkip backup of database in\
              \ SIMPLE recovery model if backupLevel specified is LOG.\n"
            type: boolean
            x-ppdm-filter: false
            x-ppdm-sort: false
        type: object
      passive:
        type: boolean
        x-ppdm-deprecated: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      retention:
        $ref: '#/definitions/ProtectionPolicyStageRetention'
      slaId:
        description: ID of associated service level agreement.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      sourceStageId:
        description: Id of Source Stage
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      target:
        $ref: '#/definitions/ProtectionPolicyStageTarget'
      type:
        description: 'Type of stage. Valid values are the following:

          - PRIMARY

          - PROTECTION

          - PROMOTION

          - REPLICATION

          - CLOUD_TIER

          - CDR'
        enum:
        - PRIMARY
        - PROTECTION
        - PROMOTION
        - REPLICATION
        - CLOUD_TIER
        - CDR
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - id
    - type
    - passive
    type: object
  ProtectionPolicyStageAttributes:
    description: Protection policy stage attributes.
    properties:
      cloudTier:
        $ref: '#/definitions/ProtectionPolicyStageCloudTier'
      exchange:
        $ref: '#/definitions/ProtectionPolicyStageExchange'
      fileSystem:
        $ref: '#/definitions/ProtectionPolicyStageFileSystem'
      mssql:
        $ref: '#/definitions/ProtectionPolicyStageMssql'
      oracle:
        $ref: '#/definitions/ProtectionPolicyStageOracle'
      protection:
        $ref: '#/definitions/ProtectionPolicyStageProtection'
      sapHana:
        $ref: '#/definitions/ProtectionPolicyStageSapHana'
      vm:
        $ref: '#/definitions/ProtectionPolicyStageVm'
      vmax:
        $ref: '#/definitions/ProtectionPolicyStageVmax'
    type: object
  ProtectionPolicyStageCloudTier:
    description: Cloud tier confiuration for the stage.
    properties:
      cloudUnit:
        $ref: '#/definitions/ProtectionPolicyStageCloudUnit'
      tierAfter:
        $ref: '#/definitions/ProtectionPolicyStageCloudTierAfter'
    type: object
  ProtectionPolicyStageCloudTierAfter:
    description: Time configuration when the cloud tier happens for the stage.
    properties:
      interval:
        description: Time inverval used with unit.
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      unit:
        description: 'Time unit. Valid values are the following:

          - YEAR

          - MONTH

          - WEEK

          - DAY'
        enum:
        - YEAR
        - MONTH
        - WEEK
        - DAY
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageCloudUnit:
    description: Cloud unit where the tier location is for cloud tier.
    properties:
      id:
        description: Cloud unit ID.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: Cloud unit name.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageExchange:
    description: Exchange configuration for the stage.
    properties:
      consistencyCheck:
        description: 'The Exchange consistency check for the database and transaction
          log files. Default is NONE. Supported enum:

          - NONE

          - ALL

          - LOGS_ONLY

          - DATABASE_ONLY'
        enum:
        - NONE
        - ALL
        - LOGS_ONLY
        - DATABASE_ONLY
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      troubleShootingOption:
        description: 'The troubleshooting option that is associated with this Exchange
          stage. For example: debugEnabled=true.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageFileSystem:
    description: File system configuration for the stage.
    properties:
      troubleShootingOption:
        description: 'The troubleshooting option that is associated with this file
          system stage. For example: debugEnabled=true.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageMssql:
    description: Microsoft SQL (MSSQL) configuration for the stage.
    properties:
      autoPromote:
        description: The backup auto promote option associated with this MSSQL stage.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      backUpExpirationDays:
        description: The backup expiration days associated with this MSSQL stage.
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      excludeSystemDatabase:
        description: The exclude system database associated with this MSSQL stage.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      parallelism:
        description: The parallel streams associated with this MSSQL stage.
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      troubleShootingOption:
        description: 'The troubleshooting option associated with this MSSQL stage.
          For example: debugEnabled=true.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageOperation:
    description: Protection policy stage operation configuration.
    properties:
      backupType:
        description: 'Operation type. Valid values are the following:

          - FULL

          - DIFFERENTIAL

          - LOG

          - INCREMENTAL

          - CUMULATIVE

          - SYNTHETIC_FULL'
        enum:
        - FULL
        - DIFFERENTIAL
        - LOG
        - INCREMENTAL
        - CUMULATIVE
        - SYNTHETIC_FULL
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      schedule:
        $ref: '#/definitions/Schedule'
      type:
        description: 'Operation type. Valid values are the following:

          - FULL

          - DIFFERENTIAL

          - LOG

          - INCREMENTAL

          - CUMULATIVE

          - AUTO_FULL'
        enum:
        - FULL
        - DIFFERENTIAL
        - LOG
        - INCREMENTAL
        - CUMULATIVE
        - AUTO_FULL
        - SYNTHETIC_FULL
        - GEN0
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
    type: object
  ProtectionPolicyStageOracle:
    description: Oracle configuration for the stage.
    properties:
      archiveLogDeletionDays:
        description: The archive log deletion days for this Oracle stage. 0 indicates
          to delete the archive log immediately. Empty indicates not to delete the
          archive log.
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      parallelism:
        description: The parallel streams that are associated with this Oracle stage.
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      troubleShootingOption:
        description: 'The troubleshooting option that is associated with this Oracle
          stage. For example: debugEnabled=true.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageProtection:
    description: Dedicated configuration for protection stage only.
    properties:
      backupMode:
        enum:
        - FSS
        - VSS
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      forceFullRules:
        description: 'Force full conditions. Valid values are following:

          - VSO_NODE_FAILURE'
        items:
          enum:
          - VSO_NODE_FAILURE
          type: string
        type: array
        uniqueItems: true
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageRetention:
    description: Protection policy copy retention.
    properties:
      interval:
        description: Retention interval. Used with unit.
        format: int32
        minimum: 1
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      storageSystemRetentionLock:
        description: Enable or disable storage system retention lock.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      unit:
        description: 'Retention interval unit. Valid values are the following:

          - DAY

          - WEEK

          - MONTH

          - YEAR'
        enum:
        - YEAR
        - MONTH
        - WEEK
        - DAY
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - interval
    - unit
    type: object
  ProtectionPolicyStageRetentionTime:
    description: Protection policy copy retention time.
    properties:
      interval:
        description: Retention interval. Used with unit.
        format: int32
        minimum: 1
        type: integer
      unit:
        description: 'Retention interval unit. Valid values are the following:

          - DAY

          - WEEK

          - MONTH

          - YEAR'
        enum:
        - YEAR
        - MONTH
        - WEEK
        - DAY
        type: string
    required:
    - interval
    - unit
    type: object
  ProtectionPolicyStageSapHana:
    description: SAP HANA configuration for the stage.
    properties:
      troubleShootingOption:
        description: 'The troubleshooting option that is associated with this SAP
          HANA stage. For example: debugEnabled=true.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageTarget:
    description: Data target storage system information for the stage.
    properties:
      dataTargetId:
        description: UUID of data target location in storage system.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      hardCapacityQuotaLevel:
        description: Hard capacity quota level.
        format: int64
        type: integer
        x-ppdm-deprecated: true
      hardStreamQuotaLevel:
        description: Hard stream quota level.
        format: int64
        type: integer
        x-ppdm-deprecated: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      preferredInterface:
        description: 'Preferred connection interface of the storage system. For example:
          IP address.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      softCapacityQuotaLevel:
        description: Soft capacity quota level.
        format: int64
        type: integer
        x-ppdm-deprecated: true
      softStreamQuotaLevel:
        description: Soft stream quota level.
        format: int64
        type: integer
        x-ppdm-deprecated: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      storageSystemId:
        description: UUID of storage system.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - storageSystemId
    type: object
  ProtectionPolicyStageVm:
    description: VM configuration for the stage.
    properties:
      appConsistentProtection:
        description: The application-consistent protection associated with this virtual
          machine stage.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      dataMoverType:
        enum:
        - INHERIT_FROM_POLICY
        - SDM
        - VADP
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      disableQuiescing:
        description: Indicate whether to turn off the quiescing snapshot for VM backups,
          the default value is false. This option is available only for the primary
          backup stage of VM Crash Consistent policy.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      excludeSwapFiles:
        description: The exclude swap files setting associated with this virtual machine
          stage.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicyStageVmax:
    description: VMax configuration for the stage.
    properties:
      postSnapshotFileName:
        description: The postSnapshotFileName of Vmax.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      preSnapshotFileName:
        description: The preSnapshotFileName of Vmax.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionPolicySummary:
    description: Protection policy summary statistics.
    properties:
      lastExecutionStatus:
        description: 'The last execution status for the protection policy.

          - SUCCEEDED

          - FAILED

          - CANCELLED

          - COMPLETED_WITH_EXCEPTIONS

          - IDLE'
        enum:
        - SUCCEEDED
        - FAILED
        - CANCELLED
        - COMPLETED_WITH_EXCEPTIONS
        - IDLE
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      numberOfAssets:
        description: Number of assets included in the protection policy.
        format: int64
        readOnly: true
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      numberOfJobFailures:
        description: Number of job failures for the protection policy in the last
          24 hours.
        format: int64
        readOnly: true
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      numberOfSlaFailures:
        description: Number of service level agreement compliance failures for the
          protection policy in the last 24 hours.
        format: int64
        readOnly: true
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      numberOfSlaSuccess:
        description: Number of service level agreement compliance successes for the
          protection policy in the last 24 hours.
        format: int64
        readOnly: true
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      totalAssetCapacity:
        description: Total capacity of assets included in the protection policy.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
      totalAssetProtectionCapacity:
        description: Total protection capacity of assets included in the protection
          policy.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
    type: object
  ProtectionPolicyVm:
    description: VM related information on protection policy.
    properties:
      metadataIndexingEnabled:
        description: Enable or disable VM backup metadata indexing feature.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      protectionEngine:
        description: 'Protection engine type. Valid values are the following:

          - VMDIRECT

          -HYPERVISORDIRECT'
        enum:
        - VMDIRECT
        - HYPERVISORDIRECT
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ProtectionRule:
    description: Detailed information of the protection rule.
    properties:
      _embedded:
        properties:
          protectionPolicy:
            $ref: '#/definitions/EmbeddedProtectionPolicy'
          protectionlifeCycle:
            $ref: '#/definitions/EmbeddedProtectionPolicy'
          storageSystem:
            $ref: '#/definitions/EmbeddedIdName'
        readOnly: true
        type: object
      action:
        description: Action type of asset rule. "Move_To_Group" means move the assets
          in the asset rule to the related protection policy.
        enum:
        - MOVE_TO_GROUP
        - NOT_SUPPORTED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      actionResult:
        description: Protection policy ID that associated with the asset rule.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      assignedAssetsCount:
        description: Shows how many assets are assigned.
        format: int32
        type: integer
      category:
        enum:
        - PRIMITIVE
        - COMPOUND
        type: string
      conditionConnector:
        description: Operator for conditions.
        enum:
        - AND
        - OR
        - NONE
        type: string
        x-ppdm-deprecated: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      conditions:
        description: Conditions of the protection rule that indicates how to filter
          assets.
        items:
          $ref: '#/definitions/Condition'
        type: array
      description:
        description: Detailed desription of the asset rule.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      displayDescription:
        description: The display format of the condition(s)
        type: string
      id:
        description: UUID of the asset rule
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      inventorySourceType:
        description: Inventory source type that the asset rule is for.
        enum:
        - VMAX_STORAGE_GROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        - MICROSOFT_EXCHANGE_DATABASE
        - SAP_HANA_DATABASE
        - KUBERNETES
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastRunAt:
        description: Last running time for the asset rule.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      logicalOperator:
        enum:
        - AND
        - OR
        type: string
      managedBy:
        default: 'null'
        description: 'Enum indicating the protection rule is managed by which component.

          If the value is null, it means the protection rule is not managed by any
          component, user could modify it at will;otherwise, the corresonding management
          component owns the modification responsibility, user modification is not
          recommended.'
        enum:
        - PROTECTION_POLICY
        type: string
      name:
        description: The name of the asset rule.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      priority:
        description: Priority of the asset rule. High priority asset rule is run in
          advance.
        format: int32
        type: integer
      rules:
        items:
          $ref: '#/definitions/ProtectionRule'
        type: array
      tenant:
        $ref: '#/definitions/Id'
    required:
    - name
    - action
    - actionResult
    - conditions
    - logicalOperator
    - inventorySourceType
    - priority
    type: object
  ProtectionRuleExecution:
    description: Detail information of dynamic filter execution.
    properties:
      assetRuleIds:
        description: Id list of dynamic filters.
        items:
          type: string
        type: array
      inventorySourceType:
        description: Type of inventory source.
        enum:
        - VMAX_STORAGE_GROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        - KUBERNETES
        - MICROSOFT_EXCHANGE_DATABASE
        - SAP_HANA_DATABASE
        - NAS_SHARE
        type: string
    type: object
  ProtectionRules:
    properties:
      content:
        items:
          $ref: '#/definitions/ProtectionRule'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ProtectionSummary:
    properties:
      maxNoOfProtectableVms:
        format: int64
        type: integer
      noOfProtectedVms:
        format: int64
        type: integer
      totalProtectedSizeInBytes:
        format: int64
        type: integer
    type: object
  ProviderParameter:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  ProxyDeploymentConfig:
    description: Proxy Deployment Config.
    properties:
      AdditionalVMNetworks:
        items:
          $ref: '#/definitions/VProxyDeploymentNetworkConfig'
        type: array
      Dns:
        type: string
      Fqdn:
        type: string
      Gateway:
        type: string
      IPProtocol:
        enum:
        - IPv4
        - IPv6
        type: string
      InterfaceName:
        type: string
      IpAddress:
        type: string
      Location:
        $ref: '#/definitions/VmDeploymentLocation'
      MacAddress:
        type: string
      MultiVlanEnabled:
        type: boolean
      NTPServer:
        type: string
      NetMask:
        type: string
      NetworkMoref:
        type: string
      OvaFile:
        type: string
      RootCredential:
        $ref: '#/definitions/VProxyCredential'
      Timezone:
        type: string
      VMName:
        type: string
      Vlans:
        items:
          properties:
            Gateway:
              type: string
            IpAddress:
              type: string
            Mtu:
              type: integer
            Netmask:
              type: string
            Routes:
              items:
                properties:
                  Gateway:
                    type: string
                  Netmask:
                    type: string
                  Source:
                    type: string
                  Type:
                    type: string
                type: object
              type: array
            VlanId:
              type: integer
          type: object
        type: array
    type: object
  ProxyLogBundleSessionsConfig:
    description: Manages proxy log bundle session configuration during POST.
    properties:
      AcceptedLanguage:
        enum:
        - en
        type: string
      ClientSessionData:
        additionalProperties: true
        type: object
      IdleTimeout:
        format: int64
        type: integer
      LogBundleRange:
        $ref: '#/definitions/LogBundleRange'
      LogDetail:
        type: string
      LogLevel:
        type: string
      LogTag:
        type: string
      NoCancelOnTimeout:
        type: boolean
      ProxySpec:
        items:
          $ref: '#/definitions/ProxyLogBundleSpec'
        type: array
      SessionId:
        type: string
    type: object
  ProxyLogBundleSessionsStatus:
    description: Manage proxy log bundle session status.
    properties:
      ApplicationData:
        type: string
      ApplicationVersion:
        type: string
      Description:
        type: string
      EndTime:
        type: string
      Error:
        $ref: '#/definitions/ResourceStatusError'
      Progress:
        format: int64
        type: integer
      ProxyLogBundleStatus:
        items:
          $ref: '#/definitions/ProxyLogBundleStatus'
        type: array
      StartTime:
        type: string
      State:
        enum:
        - Pending
        - Queued
        - Running
        - Success
        - Ready
        - Failure
        - Cancelled
        - Cancelling
        - Stopped
        - Stopping
        - StoppingFailed
        - Mounting
        - Mounted
        - Unmounting
        - Unmounted
        type: string
      Warnings:
        items:
          type: string
        type: array
    type: object
  ProxyLogBundleSpec:
    properties:
      LogBundlePath:
        type: string
      ProxySessionId:
        type: string
    type: object
  ProxyLogBundleStatus:
    properties:
      Error:
        $ref: '#/definitions/ResourceStatusError'
      FilesCollected:
        format: int32
        type: integer
      LogBundle:
        type: string
      ProxySessionId:
        type: string
      State:
        enum:
        - Pending
        - Queued
        - Running
        - Success
        - Ready
        - Failure
        - Cancelled
        - Cancelling
        - Stopped
        - Stopping
        - StoppingFailed
        - Mounting
        - Mounted
        - Unmounting
        - Unmounted
        type: string
    type: object
  ProxySessionOverride:
    properties:
      CapacityPercentage:
        format: int32
        type: integer
      Datastores:
        items:
          type: string
        type: array
      TransportSessions:
        $ref: '#/definitions/ConfigurableTransportSessions'
    type: object
  ProxyStatus:
    description: Proxy Status.
    properties:
      Detail:
        type: string
      Status:
        enum:
        - Deploying
        - Deployed
        - Registering
        - Registered
        - DisablePending
        - Disabled
        - Ready
        - Failed
        - DeletePending
        - Deleted
        - MaintenancePending
        - Upgraded
        - PowereonPending
        - PoweroffPending
        - Poweredoff
        type: string
    type: object
  PutAlertAcknowledgement:
    description: Put Alert Acknowledgement.
    properties:
      acknowledgement:
        $ref: '#/definitions/AlertAcknowledgement'
      id:
        type: string
    type: object
  PvcStorageMapping:
    properties:
      pvcName:
        type: string
      storageClasses:
        items:
          type: string
        type: array
    type: object
  PvcStorageMappings:
    description: List of storage classes per PVC.
    properties:
      content:
        items:
          $ref: '#/definitions/PvcStorageMapping'
        type: array
    type: object
  RPAConnectivity:
    properties:
      rpaUid:
        format: int64
        type: integer
      status:
        enum:
        - OK
        - WARNING
        - ERROR
        - UNKNOWN
        type: string
    type: object
  RecoveryContext:
    properties:
      description:
        description: Description for the recovery context.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      id:
        format: string
        type: string
      local:
        description: The name of an asset.
        type: boolean
        x-ppdm-filter: false
        x-ppdm-sort: false
      name:
        description: The name of an asset.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      systemTenantId:
        description: The tenant ID on target PPDM system
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
    required:
    - id
    - name
    - description
    - systemTenantId
    - local
    type: object
  RecoveryContexts:
    properties:
      content:
        items:
          $ref: '#/definitions/RecoveryContext'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  RefreshAccessTokenRequest:
    description: Refresh token.
    properties:
      grant_type:
        description: 'A type of an authorization grant that is a credential that the
          client uses to obtain an access token

          as described by RFC 6749 Section 1.3'
        enum:
        - authorization_code
        - password
        - client_credentials
        - refresh_token
        type: string
      refresh_token:
        description: 'The refresh token that is issued by the authorization server

          to obtain a new access token when the current

          access token becomes invalid or expires.'
        pattern: ^[\w\-]+?\.[\w\-]+?\.[\w\-]+?$
        type: string
      scope:
        description: The scope of the access token as described by RFC 6749 Section
          3.3
        type: string
    required:
    - refresh_token
    - grant_type
    type: object
  RemoteUpgradePackage:
    description: Remote Upgrade Package Information.
    properties:
      checksum:
        type: string
      criticality:
        enum:
        - URGENT
        type: string
      description:
        type: string
      id:
        type: string
      lastUpdated:
        format: date-time
        type: string
      madeAvailable:
        format: date-time
        type: string
      packageName:
        type: string
      packageVersion:
        type: string
      releaseNotesLink:
        type: string
      sizeInBytes:
        format: double
        type: number
      state:
        enum:
        - AVAILABLE
        - DOWNLOADED
        - DOWNLOADING
        - IGNORED
        - FAILED
        type: string
      title:
        type: string
    type: object
  RemoteUpgradePackageDownload:
    description: Get a page result of Device Connection.
    properties:
      content:
        items:
          properties: {}
        type: array
    type: object
  RemoteUpgradePackageDownloadProgress:
    description: Get a page result of Remote Upgrade Package Information.
    properties:
      errorMsg:
        type: string
      percentageCompleted:
        format: double
        type: number
      transferRate:
        format: double
        type: number
    type: object
  RemoteUpgradePackages:
    description: Get Remote Upgrade Packages.
    properties:
      content:
        items:
          $ref: '#/definitions/RemoteUpgradePackage'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ReservedBy:
    description: Details about the session that reserved this proxy.
    properties:
      SessionId:
        type: string
      SessionType:
        type: string
    type: object
  ResetOsUserPasswordRequest:
    properties:
      newPassword:
        type: string
      userName:
        type: string
    title: ResetOsUserPasswordRequest
    type: object
  ResetPasswordRequest:
    description: Reset password credentials.
    properties:
      newPassword:
        description: The new password to replace current one.
        type: string
      resetToken:
        description: Temporary token to reset password.
        type: string
    required:
    - resetToken
    - newPassword
    type: object
  ResetPasswordResponse:
    description: Reset Password response.
    properties:
      username:
        description: The reset password username.
        type: string
    required:
    - username
    type: object
  Resource:
    description: The reference to a resource that is associated with this activity.
    properties:
      id:
        description: The reference ID.
        type: string
      name:
        description: The reference name.
        type: string
      type:
        description: The reference type.
        type: string
    type: object
  ResourceCloudUnit:
    properties:
      name:
        type: string
        x-ppdm-filter: false
        x-ppmd-sort: false
      profileName:
        type: string
        x-ppdm-filter: false
        x-ppmd-sort: false
      providerName:
        type: string
        x-ppdm-filter: false
        x-ppmd-sort: false
      state:
        type: string
        x-ppdm-filter: false
        x-ppmd-sort: false
      storageArrayId:
        type: string
    type: object
  ResourceStatusError:
    properties:
      Classifications:
        items:
          type: string
        type: array
      Code:
        format: int32
        type: integer
      Remedy:
        items:
          type: string
        type: array
      Retryable:
        type: boolean
      Text:
        type: string
    type: object
  RestoreFilesRequest:
    description: This object is contains information used to restores files to a target
      VM.
    properties:
      filePaths:
        description: Array of the names of files to restore.
        items:
          type: string
        type: array
      overwriteExisting:
        default: true
        description: Flag indicating whether existing files should be overwritten.
        type: boolean
      restoreToOriginalPath:
        default: false
        description: Flag indicating whether the files should be restored to their
          original locations. The target directory field must be empty or null if
          this flag is set to true.
        type: boolean
      targetDirectory:
        description: Directory on the destination VM where to restore files to. This
          string must be null or empty if the "restoreToOriginalPath" flag is set
          to true.
        type: string
    required:
    - filePaths
    type: object
  RestoreFilesResponse:
    properties:
      taskId:
        description: The ID of the PowerProtect Data Manager task that is used to
          track the status of the called API that returned this response object.
        type: string
    type: object
  RestoredCopies:
    properties:
      content:
        items:
          $ref: '#/definitions/RestoredCopy'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  RestoredCopiesDetails:
    description: Restored copies details.
    properties:
      targetCloudInfo:
        $ref: '#/definitions/TargetCloudInfo'
      targetDatabaseInfo:
        $ref: '#/definitions/TargetDatabaseInfo'
      targetFileSystemInfo:
        $ref: '#/definitions/TargetFileSystemInfo'
      targetK8sInfo:
        $ref: '#/definitions/TargetK8sInfo'
      targetNasInfo:
        $ref: '#/definitions/TargetNasInfo'
      targetStorageInfo:
        $ref: '#/definitions/TargetStorageInfo'
      targetVmInfo:
        $ref: '#/definitions/TargetVmInfo'
    type: object
    x-ppdm-filter: false
    x-ppdm-sort: false
  RestoredCopy:
    description: Restored copies REST model.
    properties:
      activityId:
        description: The activity ID for the restore activity. Activity could be Task,
          Job, or JobGroup.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      completionTime:
        description: Restoration completion time.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      copyId:
        description: ID of copy to be restored.
        type: string
        x-ppdm-deprecated: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      copyIds:
        description: IDs of copy to be restored.
        items:
          type: string
        type: array
        x-ppdm-filter: true
        x-ppdm-sort: true
      description:
        description: Description of particular restored copy.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      expirationTime:
        description: When the restore is expired, VMDM service involves the restore
          session to remove (cleanup) its NAS datastore and resource.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: UUID of particular restored copy.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      options:
        description: 'Agent free-form JSON key pair options.

          '
        properties:
          allowOverwrite:
            description: Indicate the strategy recovery will use to handle conflict
              of the contents in the destination NAS Server/Folder. the value must
              be either 'false' or 'true
            type: string
          disconnectDatabaseUsers:
            description: 'Microsoft SQL Server requires that there are no database
              user connections when starting a database restore.

              This option will automatically disconnect any active database users
              prior to restoring the database.

              - false: do not disconnect active database users from database prior
              to starting a database restore.

              - true: disconnect active database users prior to starting a database
              restore.'
            type: boolean
          enableCompressedRestore:
            description: 'DD Boost compressed restore improves backup read performance
              by using data compression techniques.

              This option enables DD Boost compressed restore to improve DD Boost
              backup read performance.


              When set to false, the application agent does not enable DD Boost compressed
              restore.


              When set to true, the application agent enables DD Boost compressed
              restore.'
            type: boolean
          enableDebug:
            description: 'SQL Pass thru field:

              indicates if debug log should be enabled for the agent or not.'
            type: boolean
          fileRelocationOptions:
            description: 'SQL Pass thru field:

              Defines the file relocation options for restore'
            properties:
              targetDataFileLocation:
                description: The target file path where all database data files will
                  be relocated during the restore which should have a valid file system
                  path when  fileRelocationType is "CUSTOM_LOCATION".
                type: string
              targetLogFileLocation:
                description: The target file path where all database log files will
                  be relocated during the restore which should have a validate file
                  system path when fileRelocationType is "CUSTOM_LOCATION"
                type: string
              type:
                description: "ORIGINAL_LOCATION:\tThis indicates that the database\
                  \ is being restored to the original location\nDEFAULT_LOCATION:\t\
                  Indicates the user is restoring the database to an alternate location\
                  \ and has specified to restore the database to the default data\
                  \ and log file paths of the target instance specified.\nCUSTOM_LOCATION:\t\
                  Indicates the user is restoring the database to an alternate location\
                  \ and has specified to restore the database to the default data\
                  \ and log file paths specified."
                enum:
                - ORIGINAL_LOCATION
                - DEFAULT_LOCATION
                - CUSTOM_LOCATION
                type: string
            type: object
          forceDatabaseOverwrite:
            description: 'SQL Pass thru field:

              indicates the database should be overwritten by the restore, which specifies
              the "FORCE" flag for T-SQL RESTORE statement.'
            type: boolean
          performTailLogBackup:
            description: 'SQL Pass thru field:

              indicates if tail log backup should be performed.

              '
            type: boolean
          recoveryState:
            description: 'SQL Pass thru field.

              If not specified, application assumes default is "RECOVERY".'
            enum:
            - RECOVERY
            - NO_RECOVERY
            type: string
          restoreOriginalMachineConfig:
            description: The field for Cloud DR restore , that marks if set originar
              MAC id of restored VM
            type: boolean
          stopAtTime:
            description: 'SQL Pass thru field:


              The time when SQL should stop rolling forward transactions for the TLOG
              backup being restored.'
            type: string
          vcenterId:
            description: The vcenter ID for Cloud DR restore.
            type: string
        type: object
      restoreEntireBackupTransaction:
        description: Restore all copies that have the same backup transaction ID (backupTransactionId).
        type: boolean
      restoreType:
        description: Restore operation type of particular restored copy.
        enum:
        - INSTANT_ACCESS
        - IR_TO_PRODUCTION
        - IR_TO_ALTERNATE
        - TO_PRODUCTION
        - TO_ALTERNATE
        - TO_EXISTING
        - DIRECT_TO_ESX
        - TO_CLOUD
        - TO_EXPORT
        - TO_FLR
        - TO_MOUNT
        type: string
      restoredCopiesDetails:
        $ref: '#/definitions/RestoredCopiesDetails'
      startTime:
        description: Restoration start time.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      state:
        description: State of particular restored copy.
        enum:
        - WAITING
        - RUNNING
        - STOPPING
        - COMPLETED
        - MOUNTED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      status:
        description: Status of particular restored copy.
        enum:
        - UNKNOWN
        - SUCCESS
        - PARTIALSUCCESS
        - PARTIALCANCELLED
        - CANCELLED
        - FAILED
        - VMOTIONED
        - DELETED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - description
    - restoreType
    type: object
  RestoredFilesBatchRequest:
    description: ''
    properties:
      requests:
        items:
          properties:
            body:
              allOf:
              - $ref: '#/definitions/MountParams'
              - $ref: '#/definitions/RestoreFilesRequest'
            id:
              description: A value that uniquely identifies each request in the batch.
              minLength: 1
              type: string
          required:
          - id
          type: object
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - requests
    type: object
  RestoredFilesBatchResponse:
    description: ''
    properties:
      responses:
        items:
          properties:
            body:
              properties:
                activityId:
                  description: The UUID of the PPDM Job that will process this request.
                  minLength: 1
                  type: string
                error:
                  $ref: '#/definitions/ErrorMessage'
              required:
              - activityId
              type: object
            id:
              description: The original ID from the request.
              minLength: 1
              type: string
            status:
              description: The HTTP status code for each request.  Normally it is
                202, but each request MAY fail.
              type: number
          required:
          - id
          - status
          type: object
        minItems: 1
        type: array
        uniqueItems: true
    required:
    - responses
    type: object
  RestoredTargetCompatibilities:
    description: RestoredTargetCompatibilities
    properties:
      compatibilityFailureReason:
        description: Reason for  compatibility failure.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      targetName:
        description: Name of the target.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      type:
        description: Type of restore target.
        enum:
        - COMPATIBLE
        - INCOMPATIBLE
        - UNKNOWN
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  RestoredVmAsset:
    properties:
      assetRef:
        type: string
      vmRef:
        type: string
    type: object
  Restrictions:
    description: "Restrictions that are enforced independently of the node state.\
      \ For example, providing a \"restricted OPERATIONAL\" mode.\n\nSupported restrictions:\n\
      \   noScheduledStorageAccess   If true, will percent scheduled workflows that\
      \ would interact with storage.\n"
    properties:
      name:
        enum:
        - noScheduledStorageAccess
        type: string
      value:
        enum:
        - true
        - false
        type: string
    type: object
  RetentionLock:
    properties:
      enable:
        type: boolean
      mode:
        enum:
        - COMPLIANCE
        - GOVERNANCE
        type: string
    type: object
  RetierRetentionTime:
    description: ''
    properties:
      retierRetentionTime:
        description: The amount of time the recalled asset will stay on the data domain
          before being retiered back to cloud."
        format: date-time
        type: string
    type: object
  RetryActivityResult:
    properties:
      errorResponseObject:
        $ref: '#/definitions/ErrorResponseObject'
      newJobId:
        type: string
      retryJobId:
        type: string
    type: object
  Rman:
    properties:
      rmanCredsId:
        type: string
      rmanTnsAlias:
        type: string
      rmanTnsLocation:
        type: string
    type: object
  RmanProperties:
    properties:
      rmanCredentialId:
        type: string
      rmanTnsAdmin:
        type: string
      rmanTnsName:
        type: string
    type: object
  Role:
    description: Role.
    properties:
      description:
        description: Role description.
        type: string
      hiddenRole:
        description: Hidden role.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: Role ID.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: Role name.
        maxLength: 2147483647
        minLength: 1
        pattern: ^[a-zA-Z0-9\.\@_]*$
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      privilegeList:
        description: Privilege list.
        items:
          $ref: '#/definitions/Privilege'
        type: array
      systemRole:
        description: System role.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      transferable:
        description: Transferable.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  Roles:
    description: Response body of the list of Roles.
    properties:
      content:
        items:
          $ref: '#/definitions/Role'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  SWRepoFile:
    properties:
      Agents:
        items:
          $ref: '#/definitions/AgentInfo'
        type: array
      LastModified:
        type: string
      Name:
        type: string
      Path:
        type: string
      Size:
        format: int64
        type: integer
      Version:
        type: string
    type: object
  SWRepoFiles:
    properties:
      content:
        items:
          $ref: '#/definitions/SWRepoFile'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Schedule:
    properties:
      dayOfMonth:
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      duration:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      frequency:
        enum:
        - MINUTELY
        - HOURLY
        - DAILY
        - WEEKLY
        - MONTHLY
        - YEARLY
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      genericDay:
        enum:
        - FIRST
        - LAST
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      interval:
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      month:
        enum:
        - JANUARY
        - FEBRUARY
        - MARCH
        - APRIL
        - MAY
        - JUNE
        - JULY
        - AUGUST
        - SEPTEMBER
        - OCTOBER
        - NOVEMBER
        - DECEMBER
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      startTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      weekDays:
        items:
          enum:
          - SUNDAY
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          type: string
        type: array
        uniqueItems: true
        x-ppdm-filter: true
        x-ppdm-sort: true
      weekOfMonth:
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  SdrAction:
    description: '**SDR Action Detail** is the summary fors server disaster recovery
      action data information.'
    properties:
      backupRef:
        $ref: '#/definitions/SdrBackupRef'
      elapsedSeconds:
        description: Server disaster recovery action elapsed seconds.
        format: int32
        type: integer
      error:
        description: Server disaster recovery action error.
        type: string
      id:
        description: Server disaster recovery action ID.
        type: string
      progress:
        description: Server disaster recovery action progress status.
        format: int32
        type: integer
      startTime:
        description: Server disaster recovery action start time.
        format: date-time
        type: string
      state:
        description: Server disaster recovery action state.
        type: string
      type:
        description: Server disaster recovery type.
        type: string
    type: object
  SdrBackup:
    description: '**SDR Backup Detail** is the summary for server disaster recovery
      backup data information.'
    properties:
      backupConsistencyType:
        description: Server Disaster Recovery Backup backup type.
        type: string
      checksum:
        description: Server disaster recovery backup checksum.
        type: string
      components:
        items:
          $ref: '#/definitions/SdrComponent'
        type: array
        uniqueItems: true
      consistency:
        description: Server disaster recovery backup consistency.
        type: string
      creationTime:
        description: Server disaster recovery backup creation time.
        format: date-time
        type: string
      elapsedSeconds:
        description: Server disaster recovery backup elapsed seconds.
        format: int32
        type: integer
      error:
        description: Server disaster recovery backup error.
        type: string
      hostname:
        description: Server disaster recovery backup host name.
        type: string
      id:
        description: Server disaster recovery backup ID.
        type: string
      lockboxPassphrase:
        description: Server disaster recovery backup lockbox passphrase.
        type: string
      mfrManifestId:
        description: Server disaster recovery backup manifest ID.
        type: string
      mfrReplicationId:
        description: Server disaster recovery backup replication ID.
        type: string
      name:
        description: Server disaster recovery backup name.
        type: string
      noScheduledStorageAccess:
        type: boolean
      nodeId:
        description: Server disaster recovery backup node ID.
        type: string
      recover:
        description: Server disaster recovery backup recover flag.
        type: boolean
      sequenceNumber:
        description: Server disaster recovery backup sequence number.
        format: int32
        type: integer
      sizeInBytes:
        description: Server disaster recovery backup size.
        format: int64
        type: integer
      state:
        description: Server disaster recovery backup state.
        type: string
      version:
        description: Server disaster recovery backup version.
        type: string
    type: object
  SdrBackupRef:
    description: '**SDR Backup Ref Detail** is the summary for server disaster recovery
      cction reference data object information.'
    properties:
      id:
        description: Server disaster recovery backup ID.
        type: string
    type: object
  SdrBackups:
    description: Server Disaster Recovery backup info.
    properties:
      content:
        items:
          $ref: '#/definitions/SdrBackup'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  SdrComponent:
    description: '**Component Detail** is the summary for Data Component register/unregister
      data information.'
    properties:
      backupPath:
        description: Toggle indicating backup path.
        type: string
      backupStatus:
        description: Toggle indicating backup status.
        type: string
      backupsEnabled:
        default: true
        description: Toggle indicating whether the data component actively creates
          backups. Default is true.
        type: boolean
      id:
        description: Unique ID of the data component.
        type: string
      isComponentInternal:
        description: Is component interal.
        type: boolean
      name:
        description: Name of the data component.
        type: string
      version:
        description: Version of the data component.
        type: string
    type: object
  SdrConfiguration:
    description: '**SDR Configuration Detail** is the summary for server disaster
      recovery configuration data information.'
    properties:
      backupsEnabled:
        description: Server disaster recovery configuration backup enabled setting.
        type: boolean
      credentialId:
        description: Server disaster recovery configuration DD Boost credential ID.
        type: string
      credentialPassword:
        description: Server disaster recovery configuration DD Boost credential password
          (only used for restoring DR backup and is never saved)
        type: string
      credentialUsername:
        description: Server disaster recovery configuration DD Boost credential username
          (only used for restoring DR backup and is never saved)
        type: string
      id:
        description: Server disaster recovery configuration ID.
        type: string
      repositoryFilesystem:
        description: 'Server disaster recovery configuration filesystem: NFS or BoostFS.'
        type: string
      repositoryHost:
        description: Server disaster recovery configuration host.
        type: string
      repositoryPath:
        description: Server disaster recovery configuration path.
        type: string
      type:
        description: Server disaster recovery configuration type - Integrated Storage
          or DD.
        type: string
    required:
    - repositoryHost
    - repositoryPath
    - type
    type: object
  SdrHost:
    description: '**SDR Host Detail** is the summary for server disaster recovery
      host data information.'
    properties:
      hostname:
        description: Server disaster recovery host name.
        type: string
      id:
        description: Server disaster recovery host ID.
        type: string
      nodeId:
        description: Server disaster recovery host node ID.
        type: string
      version:
        description: Server disaster recovery host version.
        type: string
    type: object
  SearchCluster:
    description: Search Cluster Information
    properties:
      config:
        $ref: '#/definitions/SearchClusterConfig'
      id:
        description: ID.
        type: string
      maintenanceMode:
        description: Search cluster is in maintenance mode.
        type: boolean
      name:
        description: Name to associate with the search cluster.
        type: string
      state:
        description: State of the search cluster.
        enum:
        - INACTIVE
        - OPERATIONAL
        - DISABLED
        - DISABLE_PENDING
        - SUSPENDED
        - DEGRADED
        - FAILED
        type: string
      stateDetail:
        description: Detail of the search cluster state.
        type: string
      summary:
        $ref: '#/definitions/SearchClusterSummary'
      suspendedBy:
        description: User last update the cluster.
        enum:
        - USER
        - SYSTEM
        type: string
      updatedBy:
        description: User who last updated the cluster.
        type: string
    required:
    - name
    - state
    type: object
  SearchClusterConfig:
    description: Configuration properties of the search cluster.
    properties:
      indexRetentionDays:
        description: Days after which the indexing catalog should be deleted.
        format: int32
        type: integer
    type: object
  SearchClusterLogBundle:
    description: Log Bundle Resource
    properties:
      config:
        $ref: '#/definitions/SearchClusterLogBundleConfig'
      id:
        description: ID.
        type: string
      status:
        $ref: '#/definitions/SearchClusterLogBundleStatus'
    required:
    - config
    - status
    type: object
  SearchClusterLogBundleConfig:
    properties:
      logBundleRange:
        $ref: '#/definitions/SearchClusterLogBundleRange'
      logDirectory:
        description: Location of the log directory.
        type: string
    required:
    - logDirectory
    - logBundleRange
    type: object
  SearchClusterLogBundleRange:
    description: Date range to select files based on modification time.
    properties:
      endDate:
        description: Range end date.
        type: string
      startDate:
        description: Range start date.
        type: string
    required:
    - startDate
    - endDate
    type: object
  SearchClusterLogBundleStatus:
    properties:
      logBundlePath:
        description: The generated log bundle.
        readOnly: true
        type: string
      progress:
        description: Current log bundle collection progress.
        format: int32
        readOnly: true
        type: integer
      state:
        description: Current log bundle state.
        enum:
        - Pending
        - Queued
        - Running
        - Ready
        - Failure
        readOnly: true
        type: string
      taskId:
        description: Task ID for the operation.
        readOnly: true
        type: string
    type: object
  SearchClusterManagement:
    description: Management Request Information
    properties:
      clusterId:
        description: Cluster ID for the operation.
        type: string
      operation:
        description: Operation to be carried out.
        enum:
        - ENABLE
        - DISABLE
        - SUSPEND
        - RESUME
        - POWER_ON
        - POWER_OFF
        - UPGRADE
        - ENTER_MAINTENANCE_MODE
        - EXIT_MAINTENANCE_MODE
        type: string
    required:
    - clusterId
    - operation
    type: object
  SearchClusterSummary:
    description: Current summary of the search cluster.
    properties:
      diskCacheNfsServer:
        description: NFS server hosting disk cache.
        type: string
      lastMetadataSyncTime:
        description: Last index synchronization time.
        format: date-time
        type: string
      nodes:
        description: Summary of node status.
        items:
          $ref: '#/definitions/NodeSummary'
        type: array
      totalAssets:
        description: Total assets targeted for index.
        format: int64
        type: integer
      totalAssetsIndexed:
        description: Total assets indexed.
        format: int64
        type: integer
      totalDiskCapacity:
        description: Aggregate disk capacity of all nodes.
        format: int64
        type: integer
      totalDiskUsage:
        description: Aggregate disk usage of all nodes.
        format: int64
        type: integer
      totalFailed:
        description: Total nodes in failed state.
        format: int32
        type: integer
      totalNodes:
        description: Total deployed search nodes.
        format: int32
        type: integer
    type: object
  SearchClusters:
    description: Get Search Clusters.
    properties:
      content:
        items:
          $ref: '#/definitions/SearchCluster'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  SearchNode:
    description: Search Node Information
    properties:
      adminCredentials:
        $ref: '#/definitions/NodeCredentials'
      deploymentConfig:
        $ref: '#/definitions/SearchNodeDeploymentConfig'
      hostName:
        description: FQDN or IP address of the search node.
        type: string
      id:
        description: ID.
        type: string
      instanceUuid:
        description: Instance UUID of the search node.
        type: string
      inventorySourceId:
        description: The vCenter inventory source ID where the node is deployed.
        type: string
      nodeType:
        description: 'Node type: Master, Secondary.'
        type: string
      rootCredentials:
        $ref: '#/definitions/NodeCredentials'
      status:
        $ref: '#/definitions/SearchNodeStatus'
      vmMoref:
        description: VM managed object reference (MoRef) of the search node.
        type: string
    required:
    - hostName
    - nodeType
    - inventorySourceId
    - deploymentConfig
    type: object
  SearchNodeAdditionalVMNetworks:
    properties:
      fqdn:
        type: string
      gateway:
        type: string
      interfaceName:
        type: string
      ipAddress:
        type: string
      ipProtocol:
        enum:
        - IPv4
        - IPv6
        type: string
      macAddress:
        type: string
      multiVlanEnabled:
        type: boolean
      netMask:
        type: string
      networkMoref:
        type: string
      vlans:
        items:
          properties:
            gateway:
              type: string
            ipAddress:
              type: string
            mtu:
              type: integer
            netmask:
              type: string
            routes:
              items:
                properties:
                  gateway:
                    type: string
                  netmask:
                    type: string
                  source:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            vlanId:
              type: integer
          type: object
        type: array
    type: object
  SearchNodeDeploymentConfig:
    description: Deployment properties of the node.
    properties:
      additionalVMNetworks:
        items:
          $ref: '#/definitions/SearchNodeAdditionalVMNetworks'
        type: array
      dns:
        description: List of DNS servers separated by comma.
        type: string
      fqdn:
        description: VM FQDN.
        type: string
      gateway:
        description: IP gateway.
        type: string
      ipAddress:
        description: VM IP address.
        type: string
      ipProtocol:
        description: 'IP Protocol: IPv4 (default), IPv6.'
        type: string
      location:
        $ref: '#/definitions/SearchNodeDeploymentLocation'
      multiVlanEnabled:
        type: boolean
      netMask:
        description: Network mask.
        type: string
      networkMoref:
        description: Network MoRef for the node VM.
        type: string
      ovafile:
        description: OVA file name to use for deployment.
        type: string
      timeZone:
        description: Time zone (default is cuurent PowerProtect Data Manager timezone).
        type: string
      vlans:
        items:
          properties:
            gateway:
              type: string
            ipAddress:
              type: string
            mtu:
              type: integer
            netmask:
              type: string
            routes:
              items:
                properties:
                  gateway:
                    type: string
                  netmask:
                    type: string
                  source:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            vlanId:
              type: integer
          type: object
        type: array
      vmName:
        description: VM name.
        type: string
    required:
    - fqdn
    - vmName
    - ipAddress
    - dns
    - gateway
    - netMask
    - networkMoref
    - ipProtocol
    - ovafile
    - location
    - additionalVMNetworks
    type: object
  SearchNodeDeploymentLocation:
    description: Deployment location of the node.
    properties:
      clusterMoref:
        description: Specify cluster MoRef. Optional if a host MoRef or resource pool
          MoRef is specified.
        type: string
      datastoreMoref:
        description: Moref of datastore to use for node storage.
        type: string
      folderMoref:
        description: VM folder Moref.
        type: string
      hostMoref:
        description: Specify Host moref. Not required if hostMoref is provided.
        type: string
      resourcePoolMoref:
        description: Specify a resource pool or a cluster. Not required if hostMoref
          is provided.
        type: string
    required:
    - datastoreMoref
    type: object
  SearchNodeManagement:
    description: Manage Search Cluster Node
    properties:
      nodeId:
        description: Node II for the operation.
        type: string
      operation:
        description: Operation to be carried out.
        enum:
        - REDEPLOY
        - DECOMMISSION
        type: string
    required:
    - nodeId
    - operation
    type: object
  SearchNodeStatistics:
    description: Statistics of the Node
    properties:
      diskCapacity:
        description: Maximum disk capacity in bytes.
        format: int64
        type: integer
      diskUsage:
        description: Current disk usage in bytes.
        format: int64
        type: integer
    type: object
  SearchNodeStatus:
    description: Status of the node.
    properties:
      aliases:
        description: Aliases as known to DNS.
        items:
          type: string
        type: array
      deployed:
        description: Specifies if the node VM is deployed.
        type: boolean
      deployedTime:
        description: Time when proxy was deployed (UTC ISO 8601 format).
        type: string
      hostedComputeResource:
        description: Hosted compute resource for the node.
        type: string
      lastCheckedTime:
        description: Last time periodic health check was performed (UTC ISO 8601 format).
        type: string
      nodeStats:
        $ref: '#/definitions/SearchNodeStatistics'
      nodeStatus:
        description: Current node status.
        enum:
        - Deploying
        - Deployed
        - Registering
        - Registered
        - DisablePending
        - Disabled
        - Ready
        - Failed
        - DeletePending
        - Deleted
        - MaintenancePending
        - Upgraded
        - PowereonPending
        - PoweroffPending
        - Poweredoff
        type: string
      nodeStatusDetail:
        description: Detail of the node status.
        type: string
      powerState:
        description: VM power state. Value is On, Off, or Suspended.
        type: string
      vcenterName:
        type: string
      version:
        description: The application's version.
        type: string
    type: object
  SecurityGroup:
    description: Security group in the cloud.
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  ServiceLevelAgreement:
    properties:
      createdAt:
        description: The time when this service level agreement was created.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      description:
        description: The description of this service level agreement.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      enabled:
        description: The status of the service level agreement.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: The ID of this service level agreement.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: The name of this service level agreement.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      serviceLevelObjectives:
        description: The service level objectives that are contained in this service
          level agreement.
        items:
          $ref: '#/definitions/ServiceLevelObjectiveConfiguration'
        type: array
        x-ppdm-filter: false
        x-ppdm-sort: false
      stageType:
        description: The stage type for which this service level agreement is applicable.
        enum:
        - PROTECTION
        - PROMOTION
        - REPLICATION
        - CLOUD
        - CLOUD_TIER
        - CDR
        - ALL
        type: string
      summary:
        $ref: '#/definitions/ServiceLevelAgreementSummary'
      updatedAt:
        description: The time when this service level agreement was updated.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ServiceLevelAgreementSummary:
    description: service level agreement metrics summary
    properties:
      outOfComplianceAssets:
        format: int64
        type: integer
      outOfComplianceObjectives:
        format: int64
        type: integer
      policiesAtRisk:
        format: int64
        type: integer
      totalAssets:
        format: int64
        type: integer
      totalPolicies:
        format: int64
        type: integer
    title: ServiceLevelAgreementSummary
    type: object
  ServiceLevelAgreements:
    properties:
      content:
        items:
          $ref: '#/definitions/ServiceLevelAgreement'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  ServiceLevelObjective:
    description: ServiceLevelObjective
    properties:
      description:
        description: Description of the service level objective.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: ID of the service level objective.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      mandatory:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: Name of the service level objective.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      order:
        format: int32
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      ruleExecutionClass:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      stageType:
        description: Stage type of the service level objective.
        enum:
        - PROTECTION
        - PROMOTION
        - REPLICATION
        - CLOUD_TIER
        - PRIMARY
        - CDR
        - ALL
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      valueCardinality:
        description: Value cardinality of the service level objective.
        enum:
        - SINGLE
        - FLAT_LIST
        - TYPED_LIST
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  ServiceLevelObjectiveConfiguration:
    properties:
      activeEnforcement:
        type: boolean
      assetType:
        description: The asset type for the predefined service level object.
        enum:
        - VMAX_STORAGE_GROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        readOnly: true
        type: string
        x-ppdm-deprecated: 'true'
      definitionId:
        description: The ID of the predefined service level object.
        type: string
      inUse:
        description: Indicates whether the service level objective is in use.
        type: boolean
      name:
        description: The name of the predefined service level object.
        type: string
      stageType:
        description: The stage type of the predefined service level objects.
        enum:
        - PROTECTION
        - PROMOTION
        - REPLICATION
        - CLOUD_TIER
        - CDR
        - ALL
        type: string
      valuesList:
        description: Values that belong to the service level objective.
        items:
          $ref: '#/definitions/ObjectiveValue'
        type: array
        uniqueItems: true
    type: object
  ServiceLevelObjectives:
    properties:
      content:
        items:
          $ref: '#/definitions/ServiceLevelObjective'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  SingleApplicationOfInterest:
    properties:
      apiVersion:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      plcCompatible:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      version:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  SlaMetrics:
    description: REST model for SLA metrics.
    properties:
      assetMetrics:
        description: Asset-level metrics.
        items:
          $ref: '#/definitions/AssetMetric'
        type: array
      endTime:
        description: Metrics end time.
        format: date-time
        type: string
      failedSlaCount:
        description: Number of failed Service Level Agreements.
        format: int64
        type: integer
      inComplianceAssetCount:
        description: Number of assets in compliance.
        format: int64
        type: integer
      outOfComplianceAssetCapacity:
        description: Capacity of assets out of compliance.
        format: double
        type: number
      outOfComplianceAssetCount:
        description: Number of assets out of compliance.
        format: int64
        type: integer
      outOfCompliancePolicyCount:
        description: Number of policies out of compliance.
        format: int32
        type: integer
      startTime:
        description: Metrics start time.
        format: date-time
        type: string
    type: object
  Smtp:
    description: SMTP
    properties:
      id:
        type: string
      mailFrom:
        type: string
      mailServer:
        type: string
      password:
        type: string
      port:
        format: int32
        type: integer
      username:
        type: string
    required:
    - id
    - mailServer
    type: object
  SmtpTest:
    description: SMTP Test
    properties:
      mailFrom:
        type: string
      mailServer:
        type: string
      password:
        type: string
      port:
        format: int32
        type: integer
      recipient:
        type: string
      username:
        type: string
    required:
    - mailServer
    - recipient
    type: object
  Smtps:
    description: Get SMTP server list.
    properties:
      content:
        items:
          $ref: '#/definitions/Smtp'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  Source:
    description: 'Source of the notification. This can be one of the following: DATA_MANAGER,
      INTEGRATED_STORAGE, or APPLIANCE_MANAGER.'
    properties:
      type:
        enum:
        - DATA_MANAGER
        - APPLIANCE_MANAGER
        type: string
    type: object
    x-ppdm-filter: true
    x-ppdm-sort: true
  SplitterInfo:
    properties:
      numberOfAttachedRPAClusters:
        format: int32
        type: integer
      rpaConnectivityInfo:
        items:
          $ref: '#/definitions/RPAConnectivity'
        type: array
        uniqueItems: true
      status:
        type: string
      uid:
        type: string
      version:
        type: string
    type: object
  StatsNotAvailableInfo:
    description: Information about hosts relative to support for statistics.  A host
      may require an agent upgrade or the application may not support statistics.
    properties:
      assetId:
        description: For future use.
        type: string
      assetName:
        description: For future use.
        type: string
      hostname:
        type: string
      version:
        type: string
    type: object
  StorageContainer:
    description: Cloud DR available storage containers.
    properties:
      cloudAccountId:
        description: UUID.
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  StorageContainers:
    properties:
      content:
        items:
          $ref: '#/definitions/StorageContainer'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  StorageLocation:
    description: Detailed information for location of storage.
    properties:
      capacityBytes:
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      nodeId:
        type: string
      quotaBytes:
        type: string
      quotaRemainingBytes:
        type: string
      replication:
        type: boolean
      replicationLocations:
        items:
          $ref: '#/definitions/StorageLocation'
        type: array
      storageSystemType:
        enum:
        - VMAX_STORAGE_SYSTEM
        - XTREMIO_STORAGE_SYSTEM
        - RECOVERPOINT_SYSTEM
        - DATA_DOMAIN_SYSTEM
        - CDR_REGION_SYSTEM
        - POWER_PROTECT_SYSTEM
        - UNITY_APPLIANCE
        - POWER_STORE_APPLIANCE
        - GENERIC_NAS_APPLIANCE
        type: string
      totalCopyCount:
        type: string
      totalSizeBytes:
        type: string
      usedBytes:
        type: string
    type: object
  StorageMetricsDetail:
    description: The aggregation of all storage metrics.
    properties:
      availablePercentage:
        description: The percent of storage available.
        format: int32
        type: integer
      availableSize:
        description: The amount of storage available.
        format: double
        type: number
      systemName:
        description: The system name.
        type: string
      totalSize:
        description: total amount of storage
        format: double
        type: number
      usedPercentage:
        description: The percentage of the storage used.
        format: int32
        type: integer
      usedSize:
        description: The amout of storage used.
        format: double
        type: number
    type: object
  StorageMetricsStats:
    properties:
      criticalSystemsCount:
        format: int32
        type: integer
      nonCriticalSystemsCount:
        format: int32
        type: integer
      systemsBySpaceUtilization:
        items:
          $ref: '#/definitions/StorageMetricsDetail'
        type: array
    type: object
  StorageSystem:
    description: Information of the storage system.
    properties:
      _embedded:
        properties:
          inventorySource:
            $ref: '#/definitions/EmbeddedIdName'
          location:
            $ref: '#/definitions/EmbeddedIdName'
        readOnly: true
        type: object
      capacityUtilization:
        description: Capacity utilization of the storage system.
        format: double
        type: number
        x-ppdm-filter: true
        x-ppdm-sort: true
      createdAt:
        description: Create time of the storage system.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      ddLocationId:
        description: UUID of location for the Data Domain storage system.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      details:
        $ref: '#/definitions/StorageSystemDetails'
      id:
        description: UUID of the storage system in Elasticsearch. It can be used on
          GET or API, taking UUID in path.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastDiscovered:
        description: Last discovery starts time of the storage system.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastDiscoveryAt:
        description: Last discovery end time of the storage system.
        format: date-time
        readOnly: true
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastDiscoveryResult:
        $ref: '#/definitions/DiscoveryResult'
      lastDiscoveryStatus:
        description: 'Status of the last discovery for the storage system. Valid values
          are following:

          - NEW

          - DETECTED

          - NOT_DETECTED

          - DELETED'
        enum:
        - NEW
        - DETECTED
        - NOT_DETECTED
        - DELETED
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastDiscoveryTaskId:
        description: Last discovery task UUID of the storage system.
        format: string
        readOnly: true
        type: string
      local:
        description: Location of the storage system. True for internal storage system
          and false for external storage system.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      locationId:
        description: UUID of location for the storage system.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      name:
        description: Name of the storage system. It can be used to show on UI page.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      operatingSystem:
        properties:
          name:
            type: string
          version:
            type: string
        type: object
      type:
        description: Type of the storage system.
        enum:
        - VMAX_STORAGE_SYSTEM
        - XTREMIO_STORAGE_SYSTEM
        - RECOVERPOINT_SYSTEM
        - DATA_DOMAIN_SYSTEM
        - CDR_REGION_SYSTEM
        - POWER_PROTECT_SYSTEM
        - GENERIC_NAS_APPLIANCE
        - POWER_STORE_APPLIANCE
        - UNITY_APPLIANCE
        - DATA_DOMAIN_APPLIANCE_POOL
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      updatedAt:
        description: Update time of the storage system.
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  StorageSystemDataDomain:
    description: Details of the Data Domain.
    properties:
      capacityQuotasSupported:
        description: Indicates if capacity quota is supported.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      cloudEnabled:
        description: Whether Cloud is enabled or not on the Data Domain system.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      cloudTierLicensed:
        description: Data Domain Cloud Tier License.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      compressionFactor:
        description: 'Compression factor of the Data Domain.

          - Example: 1.44E-4'
        format: double
        type: number
        x-ppdm-filter: true
        x-ppdm-sort: true
      datacenterName:
        description: Name of the system pool's datacenter.
        type: string
      ddboostLicensed:
        description: Data Domain DDBoost License.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      encryptionLicensed:
        description: Data Domain Encryption License.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      model:
        description: 'Model of the Data Domain.

          - Example: DD VE Version 4.0'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      percentUsed:
        description: Percent of capacity used for the Data Domain.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
      preferredInterfaces:
        items:
          $ref: '#/definitions/PreferredInterface'
        type: array
        uniqueItems: true
      preferredNetworkSupported:
        description: Indicates if preferred network interface is supported.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      replicationEncryptionEnabled:
        description: Encryption of replication for the Data Domain. True for enabling
          the encryption and false for disabling the encryption.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      replicationLicensed:
        description: Data Domain Replication License.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      retentionLockComplianceLicensed:
        description: Data Domain Retention Lock Compliance License.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      retentionLockGovernanceLicensed:
        description: Data Domain Retention Lock Governance License.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      retentionLockSupported:
        description: Indicates if retention lock is supported.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      serialNumber:
        description: Serial number of the Data Domain.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      streamQuotasSupported:
        description: Indicates if stream quota is supported.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      totalSize:
        description: The total capacity in bytes of the Data Domain.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
      totalUsed:
        description: The total used capacity in bytes of the Data Domain.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
      vdiskEnabled:
        description: Whether vDisk service is enabled or not on the Data Domain system.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      version:
        description: 'Version of the Data Domain.

          - Example: Data Domain OS 6.2.0.10-615548'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  StorageSystemDetails:
    description: Details of the storage system.
    properties:
      dataDomain:
        $ref: '#/definitions/StorageSystemDataDomain'
      recoverPoint:
        $ref: '#/definitions/StorageSystemRecoverPoint'
      vmax:
        $ref: '#/definitions/StorageSystemVmax'
      xio:
        $ref: '#/definitions/StorageSystemXio'
    type: object
  StorageSystemRecoverPoint:
    description: Details of the recover point.
    properties:
      protectedSpace:
        description: Protected space of RecoverPoint.
        format: double
        type: number
        x-ppdm-filter: true
        x-ppdm-sort: true
      serialNumber:
        description: Serial number of RecoverPoint.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      totalCapacityManaged:
        description: Total capacity managed for RecoverPoint.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
      version:
        description: Version of RecoverPoint.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  StorageSystemVmax:
    description: Details of the VMAX.
    properties:
      cacheSize:
        description: The total size in bytes of the cache in the VMAX.
        format: int32
        type: integer
        x-ppdm-filter: false
        x-ppdm-sort: false
      model:
        description: Model of the VMAX.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      serialNumber:
        description: Serial number of the VMAX.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      totalSize:
        description: The total capacity in bytes of the VMAX.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
      totalUsed:
        description: The total used capacity in bytes of the VMAX.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
    type: object
  StorageSystemXio:
    description: Details of the XtremIO.
    properties:
      serialNumber:
        description: Serial number of the XtremIO.
        type: string
        x-ppdm-filter: false
        x-ppdm-sort: false
      totalSize:
        description: The total capacity in bytes of the XtremIO.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
      totalUsed:
        description: The used capacity in bytes of the XtremIO.
        format: double
        type: number
        x-ppdm-filter: false
        x-ppdm-sort: false
      version:
        description: Version of XtremIO.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  StorageSystems:
    properties:
      content:
        items:
          $ref: '#/definitions/StorageSystem'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  StorageUnit:
    properties:
      combinedStreamHardLimit:
        format: int64
        type: integer
      combinedStreamSoftLimit:
        format: int64
        type: integer
      hardLimit:
        format: int64
        type: integer
      name:
        type: string
      nativeId:
        description: The Data Domain ID for the storage unit.
        type: string
      nativeUri:
        description: The Data Domain URI for the storage unit.
        type: string
      softLimit:
        format: int64
        type: integer
      tenantUnit:
        type: string
    type: object
  SubComponent:
    description: enter description here
    properties:
      name:
        enum:
        - VM_DIRECT
        - POWER_PROTECT_DATA_MANAGER
        - APP_AGENT
        - INTEGRATED_STORAGE
        type: string
      version:
        type: string
    type: object
  SubComponentDetails:
    description: This page includes the details of all subcomponents.
    properties:
      attributes:
        additionalProperties:
          type: string
        description: Attributes of the subcomponent.
        type: object
      componentName:
        description: Name of component.
        type: string
      dateInstalled:
        description: Date upgrade installed.
        format: date-time
        type: string
      errorMessage:
        description: Error message if error occurs.
        type: string
      fileName:
        description: Name of subcomponent bin file.
        type: string
      fromVersion:
        description: The version before upgrade.
        type: string
      minimumVersion:
        description: Minimum compatible version of this subcomponent that is supported
          by this upgrade package.
        type: string
      stateChangedTime:
        description: sub component state changed time
        format: date-time
        type: string
      subComponentUpgradeState:
        description: The state of upgrade process in subcomponent.
        enum:
        - PROCESSING
        - AVAILABLE
        - UPGRADING
        - UPGRADED
        - FAILED
        type: string
      upgradeError:
        $ref: '#/definitions/MessageDetails'
      upgradeMode:
        description: Upgrade mode of subcomponent.
        enum:
        - DU
        - MDU
        - NDU
        type: string
      upgradeStarted:
        description: Start time of the upgrade.
        type: string
      upgradeVersion:
        description: Upgrade component version.
        type: string
    title: SubComponentDetails
    type: object
  Subnet:
    description: Subnet in the cloud.
    properties:
      addressSpace:
        type: string
      occupiedIPs:
        items:
          type: string
        type: array
      subnetId:
        type: string
      subnetName:
        type: string
      subnetZone:
        type: string
    type: object
  SupportedUpgrade:
    description: Proxy ugrade for protection engine API.
    properties:
      minimumProxyVersion:
        description: minimumProxyVersion
        type: string
      upgradeType:
        description: upgradeType
        enum:
        - DU
        - NDU
        type: string
    required:
    - minimumProxyVersion
    - upgradeType
    type: object
  SystemComponent:
    description: System Component.
    properties:
      componentDisplayName:
        type: string
      componentServiceName:
        type: string
      componentType:
        type: string
      id:
        type: string
      logging:
        $ref: '#/definitions/Logging'
      monitored:
        type: boolean
      status:
        enum:
        - INITIALIZING
        - UP
        - MAINTENANCE
        - QUIESCE
        - RESTORE
        - SHUTTING_DOWN
        - DOWN
        - UP_NOT_RESPONDING
        - LOCKDOWN
        - UNKNOWN
        - DISABLED
        type: string
    type: object
  SystemComponents:
    description: Get all System Components.
    properties:
      content:
        items:
          $ref: '#/definitions/SystemComponent'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  SystemConfiguration:
    description: System Configuration.
    properties:
      applicationUserPassword:
        type: string
      autoSupport:
        type: boolean
      configType:
        type: string
      deployedPlatform:
        enum:
        - AZURE
        - AWS
        - VMC
        - GCP
        - VMWARE
        type: string
      firewall:
        $ref: '#/definitions/Firewall'
      gettingStartedCompleted:
        type: boolean
      id:
        type: string
      integratedStorageSecuritySetupCompleted:
        type: boolean
      lockbox:
        $ref: '#/definitions/Lockbox'
      networks:
        items:
          $ref: '#/definitions/SystemConfigurationNetwork'
        type: array
      nodeId:
        type: string
      ntpServers:
        items:
          type: string
        type: array
      osUsers:
        items:
          $ref: '#/definitions/OsUser'
        type: array
      timeZone:
        type: string
    required:
    - id
    - applicationUserPassword
    - timeZone
    - lockbox
    - osUsers
    type: object
  SystemConfigurationNetwork:
    description: System Configuration Network.
    properties:
      dnsServers:
        items:
          type: string
        type: array
      fqdn:
        type: string
      gateway:
        type: string
      interfaceName:
        type: string
      ipAddress:
        items:
          type: string
        type: array
      ipAddressFamily:
        type: string
      netMask:
        type: string
      nslookupSuccess:
        type: boolean
      prefix:
        type: string
    required:
    - dnsServers
    - fqdn
    - gateway
    - interfaceName
    - ipAddress
    - ipAddressFamily
    - netMask
    type: object
  SystemConfigurations:
    description: Get System Configuration.
    properties:
      content:
        items:
          $ref: '#/definitions/SystemConfiguration'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  TargetCloudInfo:
    properties:
      drType:
        type: string
      networkId:
        type: string
      securityGroupIds:
        items:
          type: string
        type: array
    type: object
  TargetDatabaseInfo:
    description: The container for database-specific attributes.
    properties:
      applicationSystemId:
        type: string
      assetName:
        type: string
      hostId:
        type: string
    type: object
  TargetFileSystemInfo:
    properties:
      conflictStrategy:
        description: Indicate the strategy recovery will use to handle conflict of
          the contents in the destination directory.
        enum:
        - OVERWRITE
        - TO_ALTERNATE
        type: string
      hostId:
        type: string
      location:
        type: string
      mountUrl:
        type: string
      sources:
        items:
          type: string
        type: array
    required:
    - location
    type: object
  TargetK8sInfo:
    description: The container for Kubernetes-specific attributes.
    properties:
      namespace:
        description: 'The alternate namespace name for Restore to New.


          Note: If restoreType==TO_PRODUCTION (Restore to Original), the value of
          this field is ignored.'
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      overwritePersistentVolumeClaim:
        description: 'Boolean to indicate if persistent volume claim contents should
          be overwritten if they exist.


          If it is true, existing persistent volume claim contents are overwritten.'
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      persistentVolumeClaims:
        description: List of persistent volume claims to be restored. Each entry in
          the list is the asset name pointing to a Kubernetes persistent volume claim
          asset.
        items:
          properties:
            alternateStorageClass:
              description: The alternate storage class to be used.
              type: string
            name:
              description: The name of the persistent volume claim.
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
          type: object
        type: array
        x-ppdm-filter: false
        x-ppdm-sort: false
      skipNamespaceResources:
        description: 'Boolean to indicate whether namespace resources will be restored.


          If it is true, it means to not restore namespace resources.'
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      targetInventorySourceId:
        description: The target cluster inventory source id where the restore will  begin.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
    x-ppdm-filter: false
    x-ppdm-sort: false
  TargetNasInfo:
    description: NAS specific patameters for restore copies
    properties:
      assetId:
        description: Asset Id of the destination NAS share in case of restore to alternate
        type: string
      sources:
        description: Sources selected files/folders for file-level recovery
        items:
          $ref: '#/definitions/TargetNasSource'
        type: array
    type: object
  TargetNasSource:
    description: Selected sources for file level restore for NAS
    properties:
      path:
        description: File/folder path for file-level recovery
        type: string
      pathHash:
        description: Hash of the full path of the file / folder. the hash can be got
          by search index.
        type: string
      sliceSsid:
        description: SSID of file/folder for file-level recovery, the field can be
          got by search index.
        type: string
      type:
        description: 'Type of sources selected files/folder for file-level recovery.
          Enum: FOLDER, FILE'
        enum:
        - FOLDER
        - FILE
        type: string
    type: object
  TargetStorageInfo:
    properties:
      groupName:
        type: string
      targetDetails:
        description: the target details
        items:
          properties:
            restoredAssetId:
              type: string
            storageGroupName:
              type: string
            storageSystemId:
              type: string
          type: object
        type: array
      targetHostId:
        type: string
    type: object
  TargetVmInfo:
    properties:
      clusterMoref:
        type: string
      credentials:
        $ref: '#/definitions/VMCredentials'
      dataCenterMoref:
        type: string
      dataStoreMoref:
        type: string
      deleteBackingFile:
        type: boolean
      disks:
        items:
          $ref: '#/definitions/VirtualDiskMap'
        type: array
        uniqueItems: true
      esxHost:
        $ref: '#/definitions/HostCredentials'
      folderMoref:
        type: string
      hostMoref:
        type: string
      inventorySourceId:
        type: string
      recoverConfig:
        type: boolean
      resourcePoolMoref:
        type: string
      restoredVmAsset:
        $ref: '#/definitions/RestoredVmAsset'
      spbmRestoreDirective:
        enum:
        - 'OFF'
        - FROM_COPY
        type: string
      tagRestoreDirective:
        enum:
        - 'OFF'
        - FROM_COPY
        type: string
      vmName:
        type: string
      vmPowerOn:
        type: boolean
      vmReconnectNic:
        type: boolean
    required:
    - inventorySourceId
    - vmName
    - dataCenterMoref
    - clusterMoref
    - hostMoref
    - dataStoreMoref
    type: object
  TelemetryEULA:
    description: Telemetry EULA Rest Model.
    properties:
      accepted:
        type: boolean
      acceptedTime:
        type: string
      link:
        type: string
    type: object
  Timezone:
    description: enter description here
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  Timezones:
    description: Get all timezones.
    properties:
      content:
        items:
          $ref: '#/definitions/Timezone'
        type: array
    type: object
  TransportSessionRef:
    description: Defines the transport modes that is supported by proxy.
    properties:
      CapacityUnits:
        format: int32
        type: integer
      Mode:
        enum:
        - HotaddPreferred
        - HotaddOnly
        - NbdOnly
        - None
        type: string
      UseSsl:
        type: boolean
    type: object
  TypedValue:
    properties:
      dataType:
        type: string
      value:
        type: string
    type: object
  UpdateAssetCredentailRequest:
    description: Update credentail of the asset.
    properties:
      credentialId:
        description: The UUID of the credential.
        type: string
      id:
        description: The UUID of an asset.
        type: string
      type:
        description: The type of an asset, such as VMWARE_VIRTUAL_MACHINE.
        enum:
        - VMAX_STORAGE_GROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        - KUBERNETES
        - SAP_HANA_DATABASE
        type: string
    required:
    - id
    - type
    - credentialId
    type: object
  UpdateAssetExcludeDisksRequest:
    description: Update assets to exclude specific disks.
    properties:
      details:
        properties:
          vm:
            properties:
              disks:
                items:
                  properties:
                    excluded:
                      type: boolean
                    key:
                      type: integer
                    name:
                      type: string
                  type: object
                type: array
            type: object
        type: object
      id:
        type: string
    type: object
  UpdateBrowseRequest:
    description: This object contains the parameters use to update a browse request
      (it is used for input and output).  It contains a boolean "browseDest" parameter,
      and a String "directory" parameter, which contains the directory path to browse.
    properties:
      browseDest:
        description: If true, browse the destination (target VM), if false, brouse
          the source (copy).
        type: boolean
      directory:
        description: This is the directory path used as input, or output, for an FLR
          browse session API call.
        type: string
    type: object
  UpdateCdrServerConfigurationRequest:
    description: Password and IP data.
    properties:
      password:
        type: string
      privateIp:
        type: string
    type: object
  UpdatePaswordRequest:
    description: Updated credentials.
    properties:
      newPassword:
        description: The new password to replace current one.
        type: string
      password:
        description: The password to login.
        type: string
      username:
        description: The username to login.
        type: string
    required:
    - newPassword
    - password
    - username
    type: object
  UpgradePackage:
    description: Information of distinct package for upgrade.
    properties:
      certificateDetailsMap:
        $ref: '#/definitions/CertificateDetailsMap'
      certificateTrustedByUser:
        description: Whether the certifcate is trusted by user.
        type: boolean
      criticality:
        description: package criticality
        enum:
        - URGENT
        type: string
      dateInstalled:
        description: Upgrade package installed date.
        format: date-time
        type: string
      description:
        description: Detailed description of upgrade package.
        type: string
      errorMessage:
        description: Error message if error occurs.
        type: string
      eula:
        $ref: '#/definitions/UpgradePackageEula'
      fileName:
        description: Name of the upgrade package.
        type: string
      fromVersion:
        description: Version before upgrade.
        type: string
      id:
        description: Upgrade package ID.
        format: string
        type: string
      initiationType:
        description: upgrade initiation type
        enum:
        - CUSTOMER
        - AUTOMATIC
        type: string
      lockboxPassphrase:
        description: The passphrase of lockbox, which is needed when lockboxResetRequired
          is set to true.
        type: string
      lockboxResetRequired:
        description: Whether it needs to reset lockbox.
        type: boolean
      madeAvailable:
        description: Available date of upgrade package.
        format: date-time
        type: string
      maintenanceUpgrade:
        type: boolean
      minimumVersion:
        description: Minimum appliance version supported by this upgrade package.
        type: string
      name:
        description: Name of upgrade package.
        type: string
      packageDelivery:
        description: indicates where the package comes from
        enum:
        - UPLOAD
        - MFT
        type: string
      packageVersion:
        description: The version of upgrade package.
        type: string
      preUpgradeHealthCheck:
        $ref: '#/definitions/PreUpgradeHealthCheck'
      rebootRequired:
        description: Whether a system restart is required.
        type: boolean
      releaseNotesLink:
        description: release notes link
        type: string
      sizeInBytes:
        description: Size of upgrade package in bytes.
        format: int64
        type: integer
      state:
        description: State of upgrade package.
        enum:
        - PROCESSING
        - AVAILABLE
        - INSTALLED
        - INSTALLING
        - FAILED
        - INVALID
        - PRECHECK_FAILED
        - INSTALLED_WITH_ERRORS
        - INSTALLED_CORE
        type: string
        x-ppdm-filter: true
      subComponentDetails:
        description: Detail information of sub-components.
        items:
          $ref: '#/definitions/SubComponentDetails'
        type: array
      type:
        description: Type of upgrade package.
        enum:
        - RELEASE
        - EMERGENCY
        - PATCH
        - CONTENT
        - SECURITY
        type: string
        x-ppdm-filter: true
      upgradeError:
        $ref: '#/definitions/MessageDetails'
      upgradeMode:
        description: Upgrade mode of this component.
        enum:
        - DU
        - MDU
        - NDU
        type: string
      upgradeStarted:
        description: Start time of upgrade.
        type: string
      upgradeToken:
        description: Token to trigger upgrade.
        type: string
      validationDetails:
        items:
          $ref: '#/definitions/ValidationDetail'
        type: array
    required:
    - id
    - state
    - certificateTrustedByUser
    - lockboxPassphrase
    - upgradeToken
    title: UpgradePackage
    type: object
  UpgradePackageEula:
    description: Object that contains attributes for End User License Agreement (EULA)
      in the upgrade.
    properties:
      productEulaAccepted:
        description: Whether product EULA is accepted.
        type: boolean
      productEulaChanged:
        description: Whether the product EULA changed.
        type: boolean
      telemetryEulaAccepted:
        description: Whether EULA telemetry is accepted.
        type: boolean
      telemetryEulaChanged:
        description: Whether EULA telemetry changed.
        type: boolean
    type: object
  UpgradePackages:
    description: Response of getting upgrade packages.
    properties:
      content:
        description: Upgrade package's detail content.
        items:
          $ref: '#/definitions/UpgradePackage'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  User:
    description: User.
    properties:
      createdDate:
        description: Date the user was created.
        format: date-time
        type: string
      emailAddress:
        description: User email address.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      firstName:
        description: User first name.
        maxLength: 100
        minLength: 0
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      forcePasswordChange:
        description: Force the user to change password on first log in. Default is
          true.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      id:
        description: User ID.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      lastName:
        description: User last name.
        maxLength: 100
        minLength: 0
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      password:
        description: User password.
        type: string
      roleId:
        description: Role ID.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      username:
        description: User username.
        maxLength: 50
        minLength: 1
        pattern: ^[a-zA-Z0-9\.\_]*$
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - username
    type: object
  UserGroup:
    description: User group.
    properties:
      createdDate:
        description: Date the user group was created.
        format: date-time
        type: string
      id:
        description: User group ID.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      identitySourceGroups:
        description: The identity source groups in the group-to-role mapping.
        items:
          $ref: '#/definitions/IdentitySourceGroupsMapping'
        type: array
        uniqueItems: true
      name:
        description: Name of the user group.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      roleId:
        description: Role ID for the identity source groups.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    required:
    - name
    - identitySourceGroups
    type: object
  UserGroups:
    description: Response body of the list of User Groups.
    properties:
      content:
        items:
          $ref: '#/definitions/UserGroup'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  UserNote:
    description: The user notes on a message.
    properties:
      note:
        description: The custom text note on the message.
        type: string
      updatedTime:
        description: The time that note is updated. Follows ISO 8601.
        format: date-time
        type: string
      username:
        description: The name of the user who added or updated the notes.
        type: string
    type: object
  Users:
    description: Response body of the list of Users.
    properties:
      content:
        items:
          $ref: '#/definitions/User'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  VMBackupValidationResult:
    properties:
      status:
        type: string
      time:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  VMCredentials:
    properties:
      adminCredentialId:
        type: string
      userCredentialId:
        type: string
    type: object
  VPEEngineInfo:
    properties:
      protectionSummary:
        $ref: '#/definitions/ProtectionSummary'
      totalDisabledProxies:
        format: int32
        type: integer
      totalFailedProxies:
        format: int32
        type: integer
      totalReadyProxies:
        format: int32
        type: integer
      vcsStatuses:
        items:
          $ref: '#/definitions/VcStatus'
        type: array
    type: object
  VPEProxies:
    description: Get VPE Proxies Response.
    properties:
      content:
        items:
          $ref: '#/definitions/VPEProxy'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  VPEProxy:
    description: VPE protection engine resource that represents a registered (or deployed)
      vProxy VM.
    properties:
      Config:
        $ref: '#/definitions/VProxyConfig'
      Id:
        type: string
      Status:
        $ref: '#/definitions/VProxyStatus'
    type: object
  VPEProxyLogBundle:
    description: Proxy log bundle sessions information.
    properties:
      Config:
        $ref: '#/definitions/ProxyLogBundleSessionsConfig'
      Id:
        description: Proxy ID.
        type: string
      Status:
        $ref: '#/definitions/ProxyLogBundleSessionsStatus'
    required:
    - Id
    - Config
    type: object
  VPEProxyLogBundleRequest:
    properties:
      IdleTimeout:
        format: int64
        type: integer
      LogBundleRange:
        $ref: '#/definitions/LogBundleRange'
      LogDirectory:
        type: string
    type: object
  VPEProxyLogBundles:
    description: Get VPE Proxy Log Bundles Response.
    properties:
      content:
        items:
          $ref: '#/definitions/VPEProxyLogBundle'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  VProxyConfig:
    properties:
      AdvancedOptions:
        $ref: '#/definitions/ProxySessionOverride'
      ApplicationData:
        additionalProperties: true
        type: object
      AutoUpdateConfig:
        type: boolean
      Credential:
        $ref: '#/definitions/VProxyCredential'
      DeployProxy:
        type: boolean
      Disabled:
        type: boolean
      HealthCheckInterval:
        format: int32
        type: integer
      HostName:
        type: string
      InstanceUuid:
        type: string
      MORef:
        type: string
      Operation:
        enum:
        - configure
        - disable_application
        - enable_application
        - monitor
        - backup
        - restore
        - delete_backup
        - redeploy
        - telemetry
        - upgrade
        - version
        - setup_network
        type: string
      Port:
        format: int32
        type: integer
      ProxyDeploymentConfig:
        $ref: '#/definitions/ProxyDeploymentConfig'
      ProxyType:
        enum:
        - Embedded
        - Internal
        - External
        type: string
      SkipRegistration:
        type: boolean
      SupportedProtectionTypes:
        items:
          enum:
          - VM
          - Kubernetes
          - NAS
          type: string
        type: array
      UpdateCredentials:
        type: boolean
      VimServerRef:
        $ref: '#/definitions/VProxyVimServerRef'
    type: object
  VProxyCredential:
    properties:
      ObjectId:
        type: string
      Password:
        type: string
      Type:
        enum:
        - ObjectId
        - Object
        type: string
      UserName:
        type: string
    type: object
  VProxyDaemonStatus:
    description: Contains information about the vProxy daemons
    properties:
      DaemonName:
        type: string
      Resources:
        items:
          type: string
        type: array
      Status:
        type: string
    type: object
  VProxyDeploymentNetworkConfig:
    properties:
      Fqdn:
        type: string
      Gateway:
        type: string
      IPProtocol:
        enum:
        - IPv4
        - IPv6
        type: string
      InterfaceName:
        type: string
      IpAddress:
        type: string
      MacAddress:
        type: string
      MultiVlanEnabled:
        type: boolean
      NetMask:
        type: string
      NetworkMoref:
        type: string
      Vlans:
        items:
          properties:
            Gateway:
              type: string
            IpAddress:
              type: string
            Mtu:
              type: integer
            Netmask:
              type: string
            Routes:
              items:
                properties:
                  Gateway:
                    type: string
                  Netmask:
                    type: string
                  Source:
                    type: string
                  Type:
                    type: string
                type: object
              type: array
            VlanId:
              type: integer
          type: object
        type: array
    type: object
  VProxyNetworkConfig:
    description: VProxyNetworkConfig is a simplified model representing network configuration
      of a vProxy VM.  This  model assumes that each NIC has no more than one IPv4
      and/or IPv6 address and a single gateway for each. While the current OVA is
      only configured with a single NIC, customers can add additional NICs.  This
      model can represent additional NICs accurately if they meet the constraints
      outlined above.
    properties:
      Connected:
        type: boolean
      DeviceLabel:
        type: string
      Dns:
        $ref: '#/definitions/CommonDnsConfig'
      GatewayV4:
        type: string
      GatewayV6:
        type: string
      IpAddrV4:
        $ref: '#/definitions/CommonIpConfig'
      IpAddrV6:
        $ref: '#/definitions/CommonIpConfig'
      MAC:
        type: string
      VirtualDeviceId:
        format: int32
        type: integer
      VirtualNetworkName:
        type: string
    type: object
  VProxyStatus:
    properties:
      Aliases:
        items:
          type: string
        type: array
      AllottedModes:
        items:
          $ref: '#/definitions/AllottedModes'
        type: array
      AllottedNasSessions:
        items:
          $ref: '#/definitions/AllottedModes'
        type: array
      Certificate:
        type: string
      ConfigChange:
        properties:
          PropertyChanges:
            items:
              $ref: '#/definitions/ConfigPropertyChangeRef'
            type: array
          UpdatedTime:
            format: date-time
            type: string
        type: object
      DaemonStatus:
        items:
          $ref: '#/definitions/VProxyDaemonStatus'
        type: array
      DatacenterMoref:
        type: string
      Datastores:
        items:
          type: string
        type: array
      DeployedTime:
        type: string
      HostedComputeRes:
        $ref: '#/definitions/VimObjectRef'
      LastCheckedTime:
        type: string
      LastOperation:
        $ref: '#/definitions/LastOperation'
      ModesAvailable:
        $ref: '#/definitions/TransportSessionRef'
      NasSessionsAvailable:
        $ref: '#/definitions/NasSessionRef'
      Networks:
        items:
          $ref: '#/definitions/VProxyNetworkConfig'
        type: array
      PowerState:
        enum:
        - 'On'
        - 'Off'
        - Suspended
        type: string
      ProxyDeployed:
        type: boolean
      ProxyRegistered:
        type: boolean
      ProxyState:
        enum:
        - READY
        - MAINTENANCE
        - REGISTER
        - UNREGISTERED
        - SETUP
        - RESET
        type: string
      ProxyStatus:
        $ref: '#/definitions/ProxyStatus'
      RegisteredTime:
        type: string
      Thumbprint:
        type: string
      Uuid:
        type: string
      Version:
        type: string
      VlanStatus:
        items:
          $ref: '#/definitions/VProxyVlanStatus'
        type: array
    type: object
  VProxyVimServerRef:
    description: vCenter ID in PowerProtect Data Manager. Also provides detail about
      the vCenter hostname port along with its credentials.
    properties:
      ObjectId:
        type: string
      Type:
        enum:
        - ObjectId
        - Object
        type: string
      Vcenter:
        $ref: '#/definitions/CommonVimServer'
    type: object
  VProxyVlanStatus:
    properties:
      Detail:
        type: string
      IpAddress:
        type: string
      Status:
        enum:
        - CONNECTED
        - FAILURE
        type: string
      VlanId:
        format: int32
        type: integer
    type: object
  ValidationDetail:
    description: This page contains upgrade precondition validation details.
    properties:
      message:
        description: Message received after uload a pakcage.
        type: string
      messageDetails:
        $ref: '#/definitions/MessageDetails'
      resultType:
        description: Type of validation result.
        enum:
        - INFO
        - WARNING
        - ERROR
        type: string
      subComponent:
        description: Name of subcomponent.
        type: string
      validateTime:
        description: Date of the validation.
        format: date-time
        type: string
      validationName:
        description: The validation name.
        type: string
    title: ValidationDetail
    type: object
  VcStatus:
    description: VCenter Status information
    properties:
      ipAddress:
        description: ipAddress
        type: string
      name:
        description: name
        type: string
      status:
        description: status
        enum:
        - CONNECTED
        - AUTHENTICATION_FAILURE
        - IP_UNREACHABLE
        - UNSUPPORTED_VERSION
        - INVALID_PORT
        - INVALID_PORT_OR_CERTIFICATE
        - UNKNOWN_ERROR
        - UNKNOWN
        type: string
    type: object
  VendorEnum:
    enum:
    - DATADOMAIN
    - VMAX
    - VMWARE
    - MICROSOFT
    - ORACLE
    - DELLEMC
    - AWS
    - KUBERNETES
    - AZURE
    - SAP
    - UNITY
    - POWERSTORE
    - GENERIC
    title: VendorEnum
    type: string
    x-ppdm-filter: true
    x-ppdm-sort: true
  VerifiedObjective:
    properties:
      copyType:
        enum:
        - ALL
        - FULL
        - DIFFERENTIAL
        - LOG
        - INCREMENTAL
        - CUMULATIVE
      endTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      failure:
        $ref: '#/definitions/Failure'
      name:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      slaId:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      stageId:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      startTime:
        format: date-time
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      status:
        enum:
        - SUCCEEDED
        - FAILED
        - SKIPPED
        type: string
      success:
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  VimObjectRef:
    properties:
      MOref:
        type: string
      Type:
        type: string
    type: object
  VirtualDiskMap:
    properties:
      datastore:
        type: string
      label:
        type: string
      provisioningType:
        enum:
        - THICK
        - THICK_LAZY
        - THICK_EAGER
        - THIN
        type: string
    type: object
  VirtualDiskMapping:
    properties:
      dataStoreMoref:
        type: string
      diskLabel:
        type: string
      key:
        format: int32
        type: integer
      provisioningType:
        enum:
        - THICK_EAGER
        - THICK_LAZY
        - THIN
        type: string
      uuid:
        type: string
    type: object
  VmAgentInstallationRequest:
    description: Request of initiating agent installation on VM.
    properties:
      applicationType:
        description: The application type which will be installed on the selected
          VM.
        enum:
        - MSSQL
        type: string
      vmAssetId:
        description: '* The selected VM on which the application will be installed.

          * The asset type associated to this id should be a VM asset type.'
        type: string
    type: object
  VmAgentInstallationResponse:
    description: Response of initiating agent installation on VM
    properties:
      activityId:
        description: The job group id of the initiated VM agent installation activity.
        type: string
    type: object
  VmDeploymentLocation:
    properties:
      ClusterMoref:
        type: string
      DatastoreMoref:
        type: string
      FolderMoref:
        type: string
      HostMoref:
        type: string
      NetworkMoref:
        type: string
      ResourcePoolMoref:
        type: string
    type: object
  VmExpirationRequest:
    description: VmExpirationRequest - Encapsulates the request to extend Live Vm/Instant
      Access session expiration object.  Currently used as a REST API request object.
    properties:
      extendedDay:
        description: 'A positive integer representing the number of days to extend
          the expiration of the Vm/Instant Access session.

          A REST API will specify the session id on which this applies.'
        format: int32
        type: integer
    required:
    - extendedDay
    type: object
  VmotionVmConfig:
    description: Vmotion parameter config object.  This object is used as a REST request
      body in API /api/v2/restored-copies/{id}/vmotion, which requests a vMotion to
      relocate the VMDK files (copy of a VM) from a Data Domain to vCenter datastore.
    properties:
      description:
        description: When the vMotion request is submitted, this optional description
          is used as the description of the PowerProtect Data Manager task that is
          created to perform the vMotion request.
        type: string
      disks:
        description: The optional VirtualDiskMapping for the target virtual disk mapping
          information to perform the restore to.  If supplied, the virtual disk mapping
          information is used for the restore. Otherwise, the original virtual disk
          mapping information is used (virtual disk mapping information of targetVm
          from restoredCopyResource).
        items:
          $ref: '#/definitions/VirtualDiskMapping'
        type: array
      targetDatastoreMoref:
        description: 'The optional MoRef (managed object reference) of the target
          datastore to perform the restore to.  If supplied, then the datastore with
          the targetDatastoreMoref is used for the restore. Otherwise, the original
          datastoreMoref is used (datastore of targetVm from restoredCopyResource).
          If neither MoRef is available, the API returns a bad request status.


          If no disk array is specified, the VMDK files are restored to the targetDatastoreMoref.'
        type: string
      targetFolderMoref:
        description: The optional MoRef (managed object reference) of the target folder
          to perform the restore to.  If supplied, the folder with the targetFolderMoref
          is used for the restore. Otherwise, the original folderMoref is used (folder
          of targetVm from restoredCopyResource).
        type: string
      targetHostMoref:
        description: The optional MoRef (managed objectrReference) of the target host
          to perform the restore to.  If supplied, the host with the targetHostMoref
          is used for the restore. Otherwise, the original hostMoref is used (host
          of targetVm from restoredCopyResource).
        type: string
      targetResourcePoolMoref:
        description: The optional MoRef (managed object reference) of the target resourcePool
          to perform the restore to.  If supplied, then the resourcePool with the
          targetResourcePoolMoref is used for the restore. Otherwise, the original
          resourcePoolMoref is used (resourcePool of targetVm from restoredCopyResource).
        type: string
      vmMoref:
        description: Not used.
        type: string
    type: object
  Whitelist:
    description: Whitelist.
    properties:
      createdTime:
        description: Created timestamp (ISO 8601 format).
        format: date-time
        type: string
      expiresAt:
        description: Expiration timestamp (ISO 8601 format).
        format: date-time
        type: string
      id:
        description: Whitelist ID.
        format: string
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      internal:
        description: The internal value of the whitelist entry.
        type: boolean
      ip:
        description: Whitelist IP address.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      roleId:
        description: The role id of the whitelist entries.
        type: string
      state:
        description: Whitelist state.
        enum:
        - APPROVED
        - REJECTED
        - UNDEFINED
        - AUTOMATIC
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
  Whitelists:
    description: Response body of the list of Whitelists.
    properties:
      content:
        items:
          $ref: '#/definitions/Whitelist'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    type: object
  copyTargetDisk:
    properties:
      backupIndex:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      capacityInBytes:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      controller:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      controllerType:
        enum:
        - IDE
        - SCSI
        - SATA
        - USB
        - USB3
        - PCI
        - NVME
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      datastoreMoref:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      eagerlyScrub:
        description: Flag indicates if the disk was eagerly zeroed when provisioned.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      excluded:
        description: It means if this disk is treated as backup target.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      key:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      label:
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      provisioningType:
        enum:
        - THICK
        - THICK_LAZY
        - THICK_EAGER
        - THIN
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      storagePolicyId:
        description: The UUID of vCenter storage policy assigned to this disk
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
      thinProvisioned:
        description: Flag indicates if the disk was thin provisioned.
        type: boolean
        x-ppdm-filter: true
        x-ppdm-sort: true
      unitNumber:
        format: int64
        type: integer
        x-ppdm-filter: true
        x-ppdm-sort: true
      usedBytes:
        description: Indicates the number of bytes of a virtual disk in-use.
        type: string
        x-ppdm-filter: true
        x-ppdm-sort: true
    type: object
host: localhost:8443
info:
  description: PowerProtect Data Manager Public Restful API
  title: PowerProtect Data Manager
  version: v2
parameters:
  filter:
    allowEmptyValue: true
    description: The filter string that is expressed using PowerProtect Data Manager
      filter syntax. See Tutorials - Filter the List Result.
    in: query
    name: filter
    type: string
  orderby:
    allowEmptyValue: true
    description: The attributes/fields to be sorted by. This parameter can combine
      with sort direction "ASC" or "DESC". Default direction is ASC. See Tutorials
      - Sort the List Result.
    in: query
    name: orderby
    type: string
  page:
    allowEmptyValue: true
    default: 1
    description: The page number to be returned. Must not be less than 1. See Tutorials
      - Page the List Result.
    in: query
    maximum: 10000
    minimum: 1
    name: page
    type: integer
  pageSize:
    allowEmptyValue: true
    default: 100
    description: The number of resources to be returned. Must not be less than 1.
      See Tutorials - Page the List Result.
    in: query
    maximum: 10000
    minimum: 1
    name: pageSize
    type: integer
  queryState:
    allowEmptyValue: true
    description: Token string to use to retrieve the next page of a result. The initial
      search request with queryState must be queryState=BEGIN and a pageSize. After
      a search begins, subsequent responses include a token string to pass as a parameter
      for the next page retrieval. When the query state in the response that is returned
      from the previous search is END, no further results can be retrieved from this
      query. More details see Tutorials - Page the List Result.
    in: query
    name: queryState
    type: string
  upgradePackageId:
    description: The given package ID for upgrade.
    format: string
    in: path
    name: id
    required: true
    type: string
paths:
  /api/v2/account/change-password:
    post:
      description: Updates user account login credentials by providing the username,
        current password, and a new password. Returns the username and masked new
        password in the response body in JSON format.
      operationId: changePassword
      parameters:
      - description: Updated user account login credentials.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdatePaswordRequest'
      responses:
        '200':
          description: Successfully changed the user password.
          schema:
            $ref: '#/definitions/LoginCredentials'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The provided credentials are invalid.
        '422':
          description: Unprocessable entity. An error has occurred when trying to
            change the user password.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      summary: Update user account login credentials.
      tags:
      - Authentication and Authorization
  /api/v2/account/forgot-password:
    post:
      description: Resets a user password by providing the username. An email is sent
        to the user email address with a link to reset the token.
      operationId: forgotPassword
      parameters:
      - description: Username
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ForgotPasswordRequest'
      responses:
        '204':
          description: If the username exists, an email is sent to the user email
            address.
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '422':
          description: Unprocessable entity. An error has occurred when trying to
            send an email to the user.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      summary: Send an email to reset a user password.
      tags:
      - Authentication and Authorization
  /api/v2/account/reset-password:
    post:
      description: Resets the user password with the temporary reset token. The temporary
        reset token is contained in the email sent to the user email address, after
        performing an API call to forgot-password.
      operationId: resetPassword
      parameters:
      - description: Reset password credentials.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ResetPasswordRequest'
      responses:
        '200':
          description: Successfully changed the user password.
          schema:
            $ref: '#/definitions/ResetPasswordResponse'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The reset password token is either invalid or expired.
        '422':
          description: Unprocessable entity. An error occurred while trying to send
            an email to the user.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      summary: Reset user password with temporary reset token.
      tags:
      - Authentication and Authorization
  /api/v2/activities:
    get:
      description: 'Retrieves a list of all activities.

        > This endpoint supports execution by the following roles: admin


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getActivities
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/queryState'
      - description: "A general search text.\nFor example: q=VM_1\nwhere the following\
          \ fields will be searched for VM_1.\n\nThe following fields are searched:\n\
          \n    name\n    result.summaries\n    result.error.reason\n    result.error.remediation\n\
          \    logInfo.logText\n    asset.name\n    asset.type\n    copy.name\n  \
          \  copy.type\n    dataTarget.name\n    host.name\n    protectionPolicy.name\n\
          \    sourceDataTarget.name\n    serviceLevelAgreement.name\n    owner.name\n\
          \    lastUpdateTime\n    createdTime or createTime\n"
        in: query
        name: q
        type: string
      - description: Entity type to group asset-level activities by.
        in: query
        name: groupBy
        type: string
      - description: Value of entity of type specified in groupBy parameter.
        in: query
        name: groupByValue
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available activity resources.
          schema:
            $ref: '#/definitions/Activities'
        '400':
          description: The request is not valid. Check request parameters.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor does not have required permissions.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: A server error prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all activities.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random,serial
  /api/v2/activities/{id}:
    get:
      description: 'Retrieves an activity resource with matching ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getActivity
      parameters:
      - description: ID of the activity resource.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available activity resource.
          schema:
            $ref: '#/definitions/Activity'
        '401':
          description: The requestor is not authenticated.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor does not have required permissions.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: A server error prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get an activity by ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/activities/{id}/cancel:
    post:
      description: 'Cancels the selected activity with the specified ID. Activities
        in running or queued state can be canceled.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: cancelActivity
      parameters:
      - description: ID of the activity resource.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ActivityCancellation'
        '202':
          description: The request is accepted and is processing. The activity transitions
            to Pending Cancellation state before being Canceled. In some cases, the
            cancel request may be rejected if the activity is close to completion
            when the request was issued.
          schema:
            $ref: '#/definitions/Activity'
        '400':
          description: The request is not valid. Check request body and/or filters.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor does not have required permissions.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: A server error prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Cancel a running activity.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/activities/{id}/retry:
    post:
      consumes:
      - application/json
      description: 'Retries one or more failed jobs within a job group for the specified
        ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: retryActivity
      parameters:
      - description: The activity retry request model. The model has array of IDs.
          If no ID is specified, failed child jobs within the job group are retried.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ActivityRetryBulkRequest'
      - description: ID of the activity resource.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '202':
          description: The request has been accepted and is processing. A new job
            is generated when an existing job is retried. The new job replaces the
            old one under the job group if the retry operation is successful.
          schema:
            $ref: '#/definitions/ActivityRetryBulkResponse'
        '400':
          description: The request is not valid. Check request body and/or filters.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor does not have required permissions.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: A server error prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Retry a failed activity.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/activity-metrics:
    get:
      description: 'Retrieves aggregation metrics for jobs and job groups in different
        states.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getActivityMetrics
      parameters:
      - description: createTime gt "2019-07-08T20:26:16.032Z"
        format: date-time
        in: query
        name: createTime
        type: string
      - description: state in ("RUNNING", "QUEUED", "PENDING_CANCELLATION").
        in: query
        items:
          type: string
        minItems: 1
        name: state
        type: array
        uniqueItems: true
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available resources.
          schema:
            items:
              $ref: '#/definitions/ActivityMetrics'
            type: array
        '400':
          description: The request is not valid. Check request body and/or filters.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor does not have required permissions.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: A server error prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get aggregation of state counts for activities.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/agent-registration-status:
    get:
      consumes: []
      description: 'Retrieves the agent registration status. You can filter and sort
        various fields.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getAgentRegistrationStatus
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned the result.
          schema:
            $ref: '#/definitions/AgentRegistrationStatuses'
        '400':
          description: Bad request. Invalid argument.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Service unavailable. Internal server error.
      security:
      - BearerAuth: []
      summary: Get the agent registration status.
      tags:
      - Application Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/alert-metrics:
    get:
      description: 'Retrieves all alert metrics posted within a given time interval
        and includes the number of unacknowledged critical, warning, and informational
        alerts.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getAlertMetrics
      parameters:
      - $ref: '#/parameters/filter'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available alert metrics.
          schema:
            $ref: '#/definitions/AlertMetrics'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all Alert metrics.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/alerts:
    get:
      description: 'Retrieves a list of alerts.

        > This endpoint supports execution by the following roles: admin


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getAlerts
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/queryState'
      - description: The general search text. For example q=VM_1
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available alert resources.
          schema:
            $ref: '#/definitions/Alerts'
        '400':
          description: The request is not valid. Check the request parameters.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all alerts.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random,serial
  /api/v2/alerts/acknowledgements:
    post:
      consumes:
      - application/json
      description: 'Updates acknowledgement object of bulk messages.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: acknowledgeAlerts
      parameters:
      - description: User can acknowledge alerts by changing the state from unacknowledged
          to acknowledged.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/MessageBulk'
      produces:
      - application/json
      responses:
        '201':
          description: Resources updated.
          schema:
            $ref: '#/definitions/MessageBulk'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resources is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update message acknowledgements by ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/alerts/{id}:
    get:
      description: 'Retrieves an alert message with the specified ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getAlert
      parameters:
      - description: ID of the alerts resource.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned the alert message.
          schema:
            $ref: '#/definitions/Alert'
        '400':
          description: The request is not valid. Verify the ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get an alert message by ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
    patch:
      consumes:
      - application/json
      description: 'Updates acknowledgement object of a message. Adds or updates userNote
        object of a message.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateAlert
      parameters:
      - description: Alerts describe the exception/failures that include both current
          issues or predicted issues to help investigate potential area of risk.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Alert'
      - description: ID of the alerts resource.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Resource updated.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update message acknowledgement or user note by ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/alerts/{id}/acknowledgement:
    put:
      consumes:
      - application/json
      description: 'Updates acknowledgement object of the specified alert.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: acknowledgeAlert
      parameters:
      - description: ID of the alerts resource.
        in: path
        name: id
        required: true
        type: string
      - description: Alert message body.
        in: body
        name: body
        schema:
          $ref: '#/definitions/PutAlertAcknowledgement'
      produces:
      - application/json
      responses:
        '200':
          description: Resource updated.
          schema:
            $ref: '#/definitions/PutAlertAcknowledgement'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update alert acknowledgement by ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/asset-backups:
    post:
      consumes:
      - application/json
      deprecated: true
      description: 'Triggers a manual backup for a single asset. The asset must be
        in a protection policy.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: triggerAssetBackup
      parameters:
      - description: Detailed information for manual backup of an asset.
        in: body
        name: body
        schema:
          $ref: '#/definitions/AssetBackupRequest'
      responses:
        '201':
          description: Successful operation. Returns asset ID, backup type, and task
            ID.
          schema:
            $ref: '#/definitions/AssetBackupResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: A resource with the specified ID is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Trigger manual backup for an asset.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/asset-compliance-details:
    get:
      description: 'Retrieves asset compliance details from compliance verification
        result, extracts some fields, and exports to CSV. This API can support multiple
        filters (for example: slaId, timeRange, and completionStatus).

        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: getAssetComplianceDetails
      parameters:
      - $ref: '#/parameters/filter'
      produces:
      - text/csv
      responses:
        '200':
          description: Successfully returned a CSV file containing the asset compliance
            details.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Export asset compliance details as CSV.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,user
  /api/v2/asset-networks-batch:
    patch:
      description: 'Initiates assset networks assignment / unassignment batch operation
        on selected asset ids.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: assignAssetNetworks
      parameters:
      - description: The body contains detailed instruction to patch.
        in: body
        name: body
        schema:
          $ref: '#/definitions/AssetNetworksBatchRequests'
      responses:
        '204':
          description: Successfully patched asset networks.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Network assignment / unassignment on assets.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/assets:
    get:
      description: 'Retrieves all assets that PowerProtect Data Manager manages.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getAssets
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available asset.
          schema:
            $ref: '#/definitions/Assets'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '416':
          description: The request is too large to be retrieved.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all assets.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random,serial
  /api/v2/assets-batch:
    patch:
      consumes:
      - application/json
      description: 'Update a batch of assets.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: batchUpdateAssets
      parameters:
      - description: Assets patch request body.
        in: body
        name: body
        schema:
          $ref: '#/definitions/BatchUpdateAssetRequests'
      responses:
        '204':
          description: The batch of assets have been update successfully.
        '207':
          description: Some of the assets failed to update.
          schema:
            $ref: '#/definitions/BatchResponses'
        '500':
          description: Error Response.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update a batch of assets.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/assets-deletion-batch:
    post:
      description: 'Delete multiple assets in batch.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: postAssetsDeletionBatch
      parameters:
      - description: ''
        in: body
        name: body
        schema:
          $ref: '#/definitions/AssetsBatchDeletionRequests'
      responses:
        '207':
          description: assets deletion process complete.
          schema:
            $ref: '#/definitions/BatchResponses'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete multiple assets in batch.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/assets/{id}:
    get:
      description: 'Retrieves an asset by its ID. Use this API request to get detailed
        information about the asset.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getAsset
      parameters:
      - description: The asset ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the asset.
          schema:
            $ref: '#/definitions/Asset'
        '204':
          description: The requested asset does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get an asset by its ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    patch:
      description: 'Sends patch request to set the VM disk excluded status to true
        or false. Each patch request sets only one asset by the specified ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateAssetExcludeDisk
      parameters:
      - description: The asset ID.
        in: path
        name: id
        required: true
        type: string
      - description: The body contains detailed information of the disks to patch.
        in: body
        name: body
        schema:
          $ref: '#/definitions/UpdateAssetExcludeDisksRequest'
      responses:
        '200':
          description: The response shows the asset that includes the updated excluded
            disk status.
          schema:
            $ref: '#/definitions/Asset'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Set disks excluded status of an asset.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
    put:
      description: "Updates the only credential ID of the specified asset. \n> This\
        \ endpoint supports execution by the following roles: admin\n"
      operationId: updateAsset
      parameters:
      - description: The asset ID.
        in: path
        name: id
        required: true
        type: string
      - description: The body contains detailed information of the asset to update.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/UpdateAssetCredentailRequest'
      responses:
        '200':
          description: Successfully updated the asset.
          schema:
            $ref: '#/definitions/Asset'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update asset credential ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/assets/{id}/copies:
    get:
      description: 'Retrieves all copies of the asset by the specified asset ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getAssetCopies
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: The asset ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned available copies.
          schema:
            $ref: '#/definitions/AssetCopies'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all copies by asset ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
  /api/v2/assets/{id}/copy-map:
    get:
      description: 'Retrieves copy map of the specified asset.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getAssetCopyMap
      parameters:
      - description: ID of the asset.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned available copy map.
          schema:
            $ref: '#/definitions/CopyMap'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get copy map for an asset.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/assets/{id}/file-instances:
    get:
      consumes:
      - application/json
      description: 'Retrieves a paginated list of documents that represent files and
        folders within the specified asset. A number of query parameters can be used
        to customize the ordering, pagination, and filtering of the result. By default,
        a list of 10 objects is returned.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getAssetFileInstances
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: ID of the protected asset.
        in: path
        name: id
        required: true
        type: string
      - description: The start date from which to show document copies.  Each file
          or folder copy has a copy start date and copy end date that records the
          from-and-to time.  Modifications to that file or folder cause another document
          to be indexed with a different copy start date and copy end date.  This
          filter limits result sets to be greater or equal to a particular copy start
          date.
        format: date-time
        in: query
        name: copyStartDate
        type: string
      - description: The end date up to which to show document copies.  Each file
          or folder copy has a copy start date and copy end date that records the
          from-and-to time.  Modifications to that file or folder cause another document
          to be indexed with a different copy start date and copy end date.  This
          filter limits result sets to be less or equal to a particular copy end date.
        format: date-time
        in: query
        name: copyEndDate
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned the array of files and folders within
            the specified asset.
          schema:
            $ref: '#/definitions/FileInstances'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Server error prevented the successful completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get files and folders within a protected asset.
      tags:
      - Asset Metadata
      x-ppdm-executable-roles: admin
  /api/v2/audit-logs:
    get:
      description: "Retrieves all audit log resources. \n> This endpoint supports\
        \ execution by the following roles: admin\n\n> This endpoint supports pagination\
        \ with types: random,serial\n"
      operationId: getAuditLogs
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/queryState'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available audit logs.
          schema:
            $ref: '#/definitions/AuditLogs'
        '400':
          description: The request is not valid. Check the request parameters.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '416':
          description: The request is too large to be satisfied.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all audit log resources.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random,serial
  /api/v2/audit-logs/{id}:
    get:
      description: "Retrieves the audit log resource that matches the given ID. \n\
        > This endpoint supports execution by the following roles: admin\n"
      operationId: getAuditLog
      parameters:
      - description: ID of the audit log resource.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned the audit log.
          schema:
            $ref: '#/definitions/AuditLog'
        '400':
          description: The request is not valid. Check if id is valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource does not exist.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get an audit log resource with the given ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/audit-logs/{id}/notes:
    put:
      consumes:
      - application/json
      description: "Updates the audit log resource with the given ID. \n> This endpoint\
        \ supports execution by the following roles: admin\n"
      operationId: updateAuditLogNotes
      parameters:
      - description: ID of the audit log resource.
        in: path
        name: id
        required: true
        type: string
      - description: The Audit Log request body.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/AuditLog'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned the audit log.
          schema:
            $ref: '#/definitions/AuditLog'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested audit logs does not exist.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update the AuditLog resource with the given id.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/certificates:
    get:
      description: 'Retrieves all of the external hosts and root CA TLS certificates
        that are currently stored in the trust store and has the state of ACCEPTED,
        and lists them in the response body in JSON format.  Identical to GET /api/v2/certificates/external.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getCertificates
      parameters:
      - description: Specify the host from which to get the certificate.
        in: query
        name: host
        required: true
        type: string
      - description: Specify the port number from which to get the certificate.
        in: query
        name: port
        required: true
        type: string
      - default: HOST
        description: Specify the type of certificate to get.
        enum:
        - HOST
        - ROOT
        - INTERMEDIATE
        in: query
        name: type
        type: string
      - default: false
        description: Check if the host IP or fully qualified domain name (FQDN) used
          in host is in the certificate's subject alternative name.
        in: query
        name: strict
        type: boolean
      responses:
        '200':
          description: Successfully retrieved all the certificates.
          schema:
            $ref: '#/definitions/CertificatesList'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '404':
          description: The certificate was not found.
        '500':
          description: An issue has occurred on the system. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all certificates.
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/certificates-signing:
    post:
      description: "Signs a CSR by providing the certificate content and the IP and\
        \ FQDN of the external host. The IP of the external host must be added to\
        \ the whitelist before signing the CSR.\n> This endpoint supports execution\
        \ by the following roles: admin,user,export-and-recovery-admin \n"
      operationId: signCertificate
      parameters:
      - description: Certificates Signing Request
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/CertificateSigningRequest'
      responses:
        '201':
          description: Successfully signed CSR and returned the signed certificate.
          schema:
            $ref: '#/definitions/CertificateSigningResponse'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '409':
          description: Request could not be processed because of a data conflict.
        '500':
          description: An issue has occurred on the system. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Sign a certificate signing request (CSR).
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: 'admin,user,export-and-recovery-admin '
  /api/v2/certificates/{certId}:
    delete:
      description: 'Deletes an external host TLS certificate that is currently stored
        in the trust store by using the ID of the certificate.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteCertificate
      parameters:
      - description: Certificate ID in UUID format.
        format: string
        in: path
        name: certId
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the specified certificate.
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '404':
          description: The certificate was not found.
        '500':
          description: An issue has occurred on the system. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Delete a certificate by ID.
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin
    get:
      description: "Retrieves an external host TLS certificate that is currently stored\
        \ in the trust store, and lists it in the response body in JSON format.\n\
        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\
        \ \n"
      operationId: getCertificate
      parameters:
      - description: Certificate ID in UUID format.
        format: string
        in: path
        name: certId
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the specified certificate.
          schema:
            $ref: '#/definitions/Certificate'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '404':
          description: The certificate was not found.
        '500':
          description: An issue has occurred on the system. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get a certificate by ID.
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: 'admin,user,export-and-recovery-admin '
    put:
      description: 'Updates an external host TLS certificate that is currently stored
        in the trust store by using the ID of the certificate, and lists the updated
        one in the response body in JSON format.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateCertificate
      parameters:
      - description: Certificate ID in UUID format.
        in: path
        name: certId
        required: true
        type: string
      - description: Certificates
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Certificate'
      responses:
        '200':
          description: Successfully updated the specified certificate.
          schema:
            $ref: '#/definitions/Certificate'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '404':
          description: The certificate was not found.
        '500':
          description: An issue has occurred on the system. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Update a certificate by ID.
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-accounts:
    get:
      description: 'Retrieves a complete listing of the Cloud Disaster Recovery (Cloud
        DR) accounts in the system. This listing includes the IDs for each Cloud DR
        account as well as other information such as the name of the provider, user
        name, connection status, and so on.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrAccounts
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned Cloud DR accounts list.
          schema:
            $ref: '#/definitions/CloudAccounts'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR accounts.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
    post:
      consumes:
      - application/json
      description: 'Creates a new Cloud Disaster Recovery account.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: createCloudDrAccount
      parameters:
      - description: Cloud account creation prameters.
        in: body
        name: body
        schema:
          $ref: '#/definitions/CloudAccount'
      produces:
      - application/json
      responses:
        '201':
          description: Resource created.
          schema:
            $ref: '#/definitions/CloudAccount'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create Cloud DR accounts.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
  /api/v2/cloud-dr-accounts/{id}:
    get:
      consumes:
      - application/json
      description: 'Retrieves the specified Cloud Disaster Recovery account by ID.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrAccount
      parameters:
      - description: Cloud DR account ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned Cloud DR account.
          schema:
            $ref: '#/definitions/CloudAccount'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR account by ID.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
    put:
      consumes:
      - application/json
      description: 'Updates the specified Cloud Disaster Recovery account.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: updateCloudDrAccount
      parameters:
      - description: Cloud DR account modification parameters.
        in: body
        name: body
        schema:
          $ref: '#/definitions/CloudAccount'
      - description: The Cloud DR account ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Resource updated.
          schema:
            $ref: '#/definitions/CloudAccount'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update Cloud DR account.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
  /api/v2/cloud-dr-accounts/{id}/cloud-dr-data-targets:
    get:
      consumes:
      - application/json
      description: 'Retrieves a list of Cloud DR targets for the specified Cloud DR
        account.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrDataTargets
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned Cloud DR targets list.
          schema:
            $ref: '#/definitions/CloudTargets'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all Cloud DR targets.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
    post:
      consumes:
      - application/json
      description: 'Creates Cloud Disaster Recovery target for the specified Cloud
        DR account.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: createCloudDrDataTarget
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        type: string
      - description: Cloud DR target creation parameters.
        in: body
        name: body
        schema:
          $ref: '#/definitions/CloudTarget'
      produces:
      - application/json
      responses:
        '200':
          description: Resource created.
          schema:
            $ref: '#/definitions/CloudTarget'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create Cloud DR target.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
  /api/v2/cloud-dr-accounts/{id}/cloud-dr-data-targets/{tdId}:
    delete:
      consumes:
      - application/json
      description: 'Deletes Cloud Disaster Recovery target for the specified Cloud
        DR account.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: deleteCloudDrDataTarget
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        type: string
      - description: ID of the Cloud DR target.
        in: path
        name: tdId
        required: true
        type: string
      responses:
        '200':
          description: Successfully deleted Cloud DR target.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete Cloud DR target.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
    get:
      consumes:
      - application/json
      description: 'Retrieves Cloud Disaster Recovery target by its ID.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrDataTarget
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        type: string
      - description: ID of the Cloud DR target.
        in: path
        name: tdId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned Cloud DR target.
          schema:
            $ref: '#/definitions/CloudTarget'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR target.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
  /api/v2/cloud-dr-accounts/{id}/cloud-dr-storage-containers:
    get:
      consumes:
      - application/json
      description: 'Retrieves a list of Cloud DR storage containers for the specified
        Cloud DR account.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrStorageContainers
      parameters:
      - description: 'The ID of storage container. '
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned storage containers.
          schema:
            $ref: '#/definitions/StorageContainers'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR storage containers.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
  /api/v2/cloud-dr-accounts/{id}/cloud-dr-storage-containers/{scId}:
    get:
      consumes:
      - application/json
      description: 'Retrieves the specified Cloud Disaster Recovery storage container
        for the Cloud DR account.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrStorageContainer
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        type: string
      - description: Storage container ID.
        in: path
        name: scId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned storage container.
          schema:
            $ref: '#/definitions/StorageContainer'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR storage container.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
  /api/v2/cloud-dr-configurations:
    put:
      consumes:
      - application/json
      description: 'Update the Cloud Disaster Recovery configuration. Cloud DR configuration
        settings are internal and should not be modified without the supervision of
        Customer Support.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: updateCloudDrConfigurations
      parameters:
      - description: 'Cloud DR configuration setting consists of a key and value.

          '
        in: body
        name: body
        schema:
          $ref: '#/definitions/CdrConfiguration'
      responses:
        '200':
          description: Resource has been updated successfully.
          schema:
            $ref: '#/definitions/CdrsExtendedProperties'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update Cloud DR configuration.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
  /api/v2/cloud-dr-configurations/{key}:
    get:
      consumes:
      - application/json
      description: 'Retrieves the Cloud Disaster Recovery configuration setting for
        the specified key. Cloud DR configuration settings are internal and should
        not be modified without the supervision of Customer Support.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrConfiguration
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The response body contains the requested Cloud DR configuration
            setting.
          schema:
            $ref: '#/definitions/CdrConfiguration'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR configuration by key.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
    parameters:
    - description: Key of the Cloud DR configuration setting.
      in: path
      name: key
      required: true
      type: string
  /api/v2/cloud-dr-proxy:
    delete:
      consumes:
      - application/json
      description: 'Deletes proxy details from Cloud DR.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: deleteCloudDrProxy
      produces:
      - application/json
      responses:
        '202':
          description: The request was accepted for processing.
          schema:
            properties: {}
            type: object
      security:
      - BearerAuth: []
      summary: Delete Cloud DR proxy configuration.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
    get:
      consumes:
      - application/json
      description: 'Retrieves details about the Cloud DR proxy.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrProxy
      produces:
      - application/json
      responses:
        '200':
          description: The request completed successfully.
          schema:
            items:
              $ref: '#/definitions/CdrProxyConfigurationOutput'
            type: array
      security:
      - BearerAuth: []
      summary: Get Cloud DR proxy configuration.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
    put:
      consumes:
      - application/json
      description: 'Updates proxy details in Cloud DR.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: updateCloudDrProxy
      parameters:
      - description: CdrProxyConfiguration
        in: body
        name: body
        schema:
          $ref: '#/definitions/CdrProxyConfigurationInput'
      produces:
      - application/json
      responses:
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/CdrProxyConfigurationOutputDetailed'
      security:
      - BearerAuth: []
      summary: Update Cloud DR proxy configuration.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
  /api/v2/cloud-dr-regions/{region}/networks:
    get:
      consumes:
      - application/json
      description: 'Retrieves Cloud Disaster Recovery (Cloud DR) target networks for
        the specified region. Getting this information enables you to run a disaster
        recovery operation.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrRegionsNetworks
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The response is a list of all the available networks in the
            specified region.
          schema:
            $ref: '#/definitions/CdrCloudNetworks'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR target networks.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
    parameters:
    - description: Specific region.
      in: path
      name: region
      required: true
      type: string
  /api/v2/cloud-dr-server-configuration:
    get:
      description: 'Retrieves the Cloud Disaster Recovery Server (CDRS) properties.
        CDRS properties include Cloud target ID, CDRS connection IP address and connectivity
        state, region, whether the deployment completed or not, and so on.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrServerConfiguration
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned CDRS properties.
          schema:
            $ref: '#/definitions/CdrsExtendedProperties'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get CDRS properties.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
    patch:
      consumes:
      - application/json
      description: 'Edit the Cloud Disaster Recovery Server (CDRS) connection properties.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: updateCloudDrServerConfiguration
      parameters:
      - description: Edit CDRS connection properties.
        in: body
        name: body
        schema:
          $ref: '#/definitions/UpdateCdrServerConfigurationRequest'
      responses:
        '200':
          description: Resource updated.
          schema:
            properties: {}
            type: object
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Edit CDRS connection properties.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
  /api/v2/cloud-dr-server-deployment:
    delete:
      consumes:
      - application/json
      description: 'Deletes the Cloud Disaster Recovery Server (CDRS).

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: deleteCloudDrServer
      parameters:
      - description: CDRS deployment region.
        in: body
        name: body
        schema:
          description: Region.
          type: string
      responses:
        '200':
          description: Successfully deleted CDRS.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete CDRS.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
    get:
      description: 'Get the Cloud Disaster Recovery Server (CDRS) deployment state.
        The deployment state includes job name, deployment state, and deployment stages
        and their status.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrServer
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned CDRS deployment state.
          schema:
            $ref: '#/definitions/DeployStateProperties'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get CDRS deployment state.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
    post:
      consumes:
      - application/json
      description: 'Deploys a Cloud Disaster Recovery Server (CDRS).

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: deployCloudDrServer
      parameters:
      - description: Deploy CDRS resource.
        in: body
        name: body
        schema:
          $ref: '#/definitions/DeployCdrsRequest'
      produces:
      - application/json
      responses:
        '201':
          description: Request accepted.
          schema:
            $ref: '#/definitions/AsyncTaskResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Deploy a CDRS.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
  /api/v2/cloud-dr-server-version:
    get:
      description: 'Retrieves the Cloud Disaster Recovery Server (CDRS) version.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrServerVersion
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned CDRS version.
          schema:
            $ref: '#/definitions/CdrVersion'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get CDRS version.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
  /api/v2/cloud-dr-sessions:
    get:
      consumes:
      - application/json
      description: 'Retrieves Cloud Disaster Recovery sessions by pagination, order
        by, and filter.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrSessions
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available Cloud DR sessions resources.
          schema:
            $ref: '#/definitions/CdrSessions'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR sessions.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
  /api/v2/cloud-dr-sessions/{drId}:
    delete:
      consumes:
      - application/json
      description: 'Ends the Cloud Disaster Recovery session according to the specified
        session ID. You can get a list of Cloud Disaster Recovery session IDs by using
        GET /api/v2/cloud-dr-sessions.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: endCloudDrSession
      responses:
        '200':
          description: Successfully invoked ending of Cloud DR session.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: End Cloud DR session.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
    parameters:
    - description: Cloud DR session ID.
      in: path
      name: drId
      required: true
      type: string
  /api/v2/cloud-dr-vcenters:
    get:
      description: 'Retrieves a list of Cloud Disaster Recovery vCenter Servers. The
        list includes the vCenter Server IDs, which you can use to update the vCenter
        Server configuration or get the vCenter Server inventory of the specified
        vCenter Server.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrVCenter
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned vCenter Servers list.
          schema:
            $ref: '#/definitions/CdrVcRemoteServers'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get Cloud DR vCenters list.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
  /api/v2/cloud-dr-vcenters/{id}/configuration:
    put:
      consumes:
      - application/json
      description: 'Updates the vCenter configuration for the specified vCenter Server.

        > This endpoint supports execution by the following roles: export-and-recovery-admin

        '
      operationId: updateCloudDrVCenterConfiguration
      parameters:
      - description: The vCenter Server ID.
        in: path
        name: id
        required: true
        type: string
      - description: Cloud DR vCenter configuration.
        in: body
        name: body
        schema:
          $ref: '#/definitions/CdrVcConfiguration'
      responses:
        '201':
          description: Successfully updated vCenter configuration.
          schema:
            type: object
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The vCenter id in the request is not found.
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update vCenter configuration.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: export-and-recovery-admin
  /api/v2/cloud-dr-vcenters/{id}/inventory:
    get:
      consumes: []
      description: 'Retrieves vCenter inventory for the specified vCenter Server ID.

        > This endpoint supports execution by the following roles: user

        '
      operationId: getCloudDrVCenterInventory
      parameters:
      - description: The vCenter Server ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned vCenter inventory.
          schema:
            $ref: '#/definitions/CdrVcInventory'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The vCenter id in the request is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get vCenter inventory.
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: user
  /api/v2/cloud-recalled-copies:
    post:
      consumes:
      - application/json
      description: 'Runs a process to move back a copy set from the cloud to the active
        tier based on the specified protection copy set ID and retier retention time.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: recallCloudCopy
      parameters:
      - description: Provide the protectionCopySetId and retierRetentionTime to recall
          an asset.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/CloudRecalledCopy'
      responses:
        '202':
          description: 'Asset has been moved back to Data Domain. '
          schema:
            $ref: '#/definitions/CloudResult'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
        '403':
          description: The requester is not authenticated to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Recall a copy from the cloud.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/cloud-recalled-copies/{copySetId}:
    put:
      consumes:
      - application/json
      description: 'Updates the retier retention time for a specified copy set on
        a Data Domain based on the copy set ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: updateCloudCopyRetierRetentionTime
      parameters:
      - description: The asset ID of a copy on the Data Domain.
        in: path
        name: copySetId
        required: true
        type: string
      - description: Provide the new retierRetentionTime of the asset that corresponds
          to the the copySetId being passed in.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/RetierRetentionTime'
      responses:
        '200':
          description: Resource updated.
          schema:
            $ref: '#/definitions/CloudResult'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
        '403':
          description: The requester is not authenticated to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update a copy set retier time to the cloud.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/cloud-tiered-copies:
    post:
      consumes:
      - application/json
      description: 'Starts a process to move copies from the Data Domain active tier
        to the cloud tier/cloud unit. Copies are moved to the cloud for long-term
        retention.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: createCloudTieredCopy
      parameters:
      - description: Required to provide the protectionCopySetId in order to set a
          copy for CloutTiering.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/CloudTieredCopy'
      responses:
        '201':
          description: 'Cloud tiering process for asset has been created. '
          schema:
            $ref: '#/definitions/CloudResult'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Creates cloud tiering process for an asset or a copy set.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/common-settings:
    get:
      description: 'Retrieves the available common settings.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getCommonSettings
      produces:
      - application/json
      responses:
        '200':
          description: Located and returned the available settings successfully.
          schema:
            $ref: '#/definitions/CommonSettings'
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all settings.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/common-settings/ASSET_SETTING:
    get:
      description: 'Get asset settings.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getAssetSettings
      responses:
        '200':
          description: Successfully returned the asset settings.
          schema:
            $ref: '#/definitions/CommonSetting'
        '400':
          description: The request is invalid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get asset settings.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Modify the current asset settings.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateAssetSettings
      parameters:
      - description: 'Payload of Common Settings. '
        in: body
        name: body
        schema:
          $ref: '#/definitions/CommonSetting'
      responses:
        '200':
          description: Successfully updated the asset settings.
          schema:
            $ref: '#/definitions/CommonSetting'
        '400':
          description: Invalid request to update Dynamic Filter setting.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: The service is unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Modify asset settings.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/common-settings/DYNAMIC_FILTER_SETTING:
    get:
      description: 'Retrieves dynamic filter settings.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDynamicFilterSettings
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommonSetting'
        '400':
          description: The request is invalid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get dynamic filter settings.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates the dynamic filter settings (known as protection rules
        in the PowerProtect Data Manager UI).


        PowerProtect Data Manager supports migrating any assets across protection
        policies by default. If you want to migrate only *unprotected* assets across
        protection policies, remove the "value" from the supportMoveAssetsAcrossProtectionPolicy
        property when forming the request. Using the "VMWARE_VIRTUAL_MACHINE" value
        as an example, if you want to enable migrating only *unprotected* VMs across
        protection policies, remove the value "VMWARE_VIRTUAL_MACHINE."

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateDynamicFilterSettings
      parameters:
      - description: Update the value of properties for the dynamic filter setting.
        in: body
        name: body
        schema:
          $ref: '#/definitions/CommonSetting'
      responses:
        '200':
          description: Successfully updated the dynamic filter settings.
          schema:
            $ref: '#/definitions/CommonSetting'
        '400':
          description: Invalid request to update the dynamic filter setting.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: The service is unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update dynamic filter settings.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/common-settings/TELEMETRY_SETTING:
    get:
      description: 'Retrieves the current telemetry settings.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getTelemetrySetting
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned the telemetry settings.
          schema:
            $ref: '#/definitions/CommonSetting'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/CommonSetting'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
        '503':
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Get telemetry settings.
      tags:
      - Telemetry Setting
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates the current telemetry settings.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateTelemetrySetting
      parameters:
      - description: Request body containing Common Settings REST Resource model.
        in: body
        name: CommonSettingsRestResource
        required: false
        schema:
          $ref: '#/definitions/CommonSetting'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully updated the telemetry settings.
          schema:
            $ref: '#/definitions/CommonSetting'
        '400':
          description: The submitted settings payload has a syntax error.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '422':
          description: Required fields are missing in the request payload.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
        '503':
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Modify telemetry settings.
      tags:
      - Telemetry Setting
      x-ppdm-executable-roles: admin
  /api/v2/common-settings/VM_BACKUP_SETTING:
    get:
      description: 'Retrieves VM backup settings.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getVmBackupSettings
      responses:
        '200':
          description: Successfully returned the VM backup settings.
          schema:
            $ref: '#/definitions/CommonSetting'
        '400':
          description: The request is invalid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get VM backup settings.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates the current VM backup settings.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateVmBackupSettings
      responses:
        '200':
          description: Successfully updated the VM backup settings.
          schema:
            $ref: '#/definitions/CommonSetting'
        '400':
          description: Invalid request to update VM backup setting.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: The service is unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update VM backup settings.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/common-settings/{id}:
    get:
      description: 'Retrieves common settings by ID.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getCommonSetting
      parameters:
      - description: "\tCommon settings ID."
        format: string
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned all the settings with the specified common
            settings ID.
          schema:
            $ref: '#/definitions/CommonSetting'
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find settings with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get common settings by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
    put:
      description: 'Modifies the settings by ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateCommonSetting
      parameters:
      - description: Common settings ID sent in request.
        format: string
        in: path
        name: id
        required: true
        type: string
      - description: Modify the settings.
        in: body
        name: CommonSettingsRestResource
        required: false
        schema:
          $ref: '#/definitions/CommonSetting'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully updated the settings.
          schema:
            $ref: '#/definitions/CommonSetting'
        '400':
          description: The submitted settings payload has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find settings with the specified ID.
        '422':
          description: Occurs when the required fields are missing in the request
            payload.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Modify the settings by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
  /api/v2/compliance-details:
    get:
      description: 'Retrieves the **Compliance Details**. **Compliance Detail** is
        a summary of the compliance result for one asset on one SLA on one stage of
        policy. The compliance result is one run of compliance verification for one
        asset for all SLAs that are assigned to the asset. Normally, one compliance
        result has multiple assigned SLAs. This API can support multiple filters (for
        example, assetId and completionTime).


        This API has a known issue for pagination. The size is not the actual page
        size, but the compliance result size.  For example, if you request a page
        size of 10, you receive 10 compliance results. If each compliance result has
        4 SLAs on different stages, the return size is 40 instead of 10. The totalPages
        and totalElements properties are for the compliance result instead of compliance
        detail.


        > This endpoint supports execution by the following roles: admin,user


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getComplianceDetails
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available compliance results.
          schema:
            $ref: '#/definitions/ComplianceDetails'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: An default error response.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all compliance details.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,user
      x-ppdm-pagination: random,serial
  /api/v2/compliance-results:
    get:
      description: 'Retrieves the compliance results. The compliance result is one
        run of compliance verification for one asset for all SLAs that are assigned
        to the asset.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getComplianceResults
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available compliance result.
          schema:
            $ref: '#/definitions/ComplianceResults'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all compliance results.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/compliance-results/{id}:
    get:
      description: 'Retrieves the compliance result with the specified ID. The compliance
        result is one run of compliance verification for one asset for all SLAs that
        are assigned to the asset.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getComplianceResult
      parameters:
      - description: ID of the compliance result.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the compliance result.
          schema:
            $ref: '#/definitions/ComplianceResult'
        '204':
          description: The requested compliance result does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get  compliance results by ID.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/components:
    get:
      description: 'Retrieves all the available components.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getComponents
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available resources.
          schema:
            $ref: '#/definitions/SystemComponents'
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all components.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/components/{id}:
    get:
      description: 'Retrieves component with the specific ID.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getComponent
      parameters:
      - description: Component ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned the component with the specified ID.
          schema:
            $ref: '#/definitions/SystemComponent'
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a component with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get component by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
    put:
      description: 'Updates a component by ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateComponent
      parameters:
      - description: Component ID.
        in: path
        name: id
        required: true
        type: string
      - description: Modify the component.
        in: body
        name: body
        schema:
          $ref: '#/definitions/SystemComponent'
      produces:
      - application/json
      responses:
        '200':
          description: The update operation is successful.
          schema:
            $ref: '#/definitions/SystemComponent'
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a component with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Update component by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
  /api/v2/components/{id}/management:
    post:
      description: 'Manages the Cloud Disaster Recovery Appliance (CDRA) component.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: manageComponent
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Manages CDRA component.
        in: body
        name: body
        schema:
          $ref: '#/definitions/EntityString'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/EntityString'
        '202':
          description: The POST operation is successful.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a component with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Manage CDRA component.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
  /api/v2/configurations:
    get:
      description: 'Retrieves all PowerProtect Data Manager appliance configurations.
        Running GET on this API endpoint returns an array of configurations objects
        with which the PowerProtect Data Manager appliance can be configured.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getConfigurations
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available resources.
          schema:
            $ref: '#/definitions/SystemConfigurations'
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all configurations.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/configurations/{configurationId}/config-status:
    get:
      description: 'Retrieves the progress of the initial configuration. The configuration
        ID must first be obtained by running GET on the configurations API, which
        returns an array of configurations objects with which the PowerProtect Data
        Manager appliance can be configured.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getConfigStatus
      parameters:
      - description: Configuration ID.
        in: path
        name: configurationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Located and returned the available configuration status successfully.
          schema:
            $ref: '#/definitions/ConfigStatus'
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a configuration status with the given ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get the progress of initial configuration.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/configurations/{id}:
    get:
      description: 'Retrieves a PowerProtect Data Manager appliance configuration
        by its ID. Running GET on this API returns an array of configurations objects
        with which the PowerProtect Data Manager appliance can be configured.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getConfiguration
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned the configuration with the specified ID.
          schema:
            $ref: '#/definitions/SystemConfiguration'
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get configuration by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
    put:
      description: 'The initial configuration request is allowed only when the appliance
        state is PENDING or RESTORE. You can only perform the request once.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: startConfiguration
      parameters:
      - description: Configuration ID sent in request.
        in: path
        name: id
        required: true
        type: string
      - description: The initial configuration request is allowed only when the appliance
          state is PENDING or RESTORE. You can only perform the request once.
        in: body
        name: Configuration
        required: false
        schema:
          $ref: '#/definitions/SystemConfiguration'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SystemConfiguration'
        '202':
          description: Accepted and processing the initial configuration request.
        '400':
          description: The submitted configuration has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: Cannot change the configuration in the current node state.
        '404':
          description: Cannot find a configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Start the initial configuration.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
  /api/v2/copies-batch:
    patch:
      description: 'Changes retention time for copies. All asset types and backup
        types are supported. The maximum batch size is 1000.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: changeRetentionTime
      parameters:
      - description: The body contains detailed instructions to patch.
        in: body
        name: body
        schema:
          $ref: '#/definitions/CopiesRetentionTimeBatchRequests'
      responses:
        '202':
          description: Retention time change request has been accepted.
          schema:
            $ref: '#/definitions/CopiesRetentionTimeBatchResponse'
        '400':
          description: The request is invalid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Change retention time for copies.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin
  /api/v2/copies-deletion-batch:
    post:
      consumes:
      - application/json
      description: Batch deletes copies from different assets and stage types.
      operationId: batchDeleteCopies
      parameters:
      - default: 'false'
        description: 'For asset type without dependency, this option makes no difference.
          For asset type with dependency between copies:

          - cascadeDelete=true deletes all copies in the dependency chain.

          - cascadeDelete=false does not delete any copy with HTTP status code of
          409 (Conflict).

          - By default, if cascadeDelete is not specified, it functions as if cascadeDelete
          is false.'
        in: query
        name: cascadeDelete
        type: string
      - default: 'false'
        description: '- removeConfigurationOnly=true only deletes metadata from PowerProtect
          Data Manager without physically deleting from storage or application agent.

          - removeConfigurationOnly=false deletes copy from storage and application
          agent (if any). If successfully deletes from storage and application agent,
          then it deletes metadata from PowerProtect Data Manager.

          - By default, if removeConfigurationOnly is not specified, it behaves as
          if removeConfigurationOnly is false.'
        in: query
        name: removeConfigurationOnly
        type: string
      - default: 'false'
        description: '- forceRemoveLatestBackup=true enables deleting the latest backup.
          It may break the later chain, or for VM CBT backup, it may break the in-progress
          backup.

          - forceRemoveLatestBackup=false, if the specified copy is the latest backup,
          returns 409 error.

          - By default is forceRemoveLatestBackup is not specified, it behaves as
          if removeConfigurationOnly is false.'
        in: query
        name: forceRemoveLatestBackup
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CopyDeletionBatchRequests'
      - default: 'false'
        description: '- forceDelete=true enables force deleting without checking the
          state of the copies.

          - forceDelete=false if the copy with restoring/cloud tiering state, skip
          deleting the copy.

          - By default, if forceDeleteis not specified, it behaves as if forceDeleteis
          false.'
        in: query
        name: forceDelete
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CopyDeletionBatchResponses'
        '400':
          description: ''
        '401':
          description: ''
        '403':
          description: ''
        '409':
          description: ''
        '500':
          description: ''
      security:
      - BearerAuth: []
      summary: Batch delete copies.
      tags:
      - Copy Management
  /api/v2/copies-report:
    get:
      consumes: []
      description: 'Retrieves deleted copies based on the filter provided and exports
        detailed information in the report in CSV format.

        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: getCopiesReport
      parameters:
      - $ref: '#/parameters/filter'
      produces:
      - text/csv
      responses:
        '200':
          description: Successfully returned a CSV file containing the deleted copies
            detail information.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Export deleted copies as CSV report.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,user
  /api/v2/copies/{id}:
    delete:
      description: 'Deletes asset copy by ID.

        > This endpoint supports execution by the following roles: user,export-and-recovery-admin

        '
      operationId: deleteCopy
      parameters:
      - description: ID of the copy.
        in: path
        name: id
        required: true
        type: string
      - default: 'false'
        description: 'For asset type without dependency, this option makes no difference.
          For asset type with dependency between copies:

          - cascadeDelete=true deletes all copies in the dependency chain.

          - cascadeDelete=false does not delete any copy with HTTP status code of
          409 (Conflict).

          - By default, when cascadeDelete is not specified, it operates as if cascadeDelete
          is false.'
        in: query
        name: cascadeDelete
        type: string
      - default: 'false'
        description: '- removeConfigurationOnly=true only deletes metadata from PowerProtect
          Data Manager without physically deleting from storage or application agent.

          - removeConfigurationOnly=false deletes copy from storage and application
          agent (if any). If successfully deleted from storage and application agent,
          then it deletes metadata from PowerProtect Data Manager.

          - By default, when removeConfigurationOnly is not specified, it operates
          as if removeConfigurationOnly is false.'
        in: query
        name: removeConfigurationOnly
        type: string
      - default: 'false'
        description: '- forceRemoveLatestBackup=true enables deleting the latest backup.
          It may break the later chain, or for VM CBT backup, it may break the in-progress
          backup.

          - forceRemoveLatestBackup=false, if the specified copy is the latest backup,
          produces HTTP error 409 (Conflict).

          - By default, when forceRemoveLatestBackup is not specified, it operates
          as if removeConfigurationOnly is false.'
        in: query
        name: forceRemoveLatestBackup
        type: string
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/CopyDeletion'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The copy to be deleted is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: The copy could not be deleted because of a dependency issue.
            Examples of dependency issues include retention lock, dependency copies
            could not be deleted, restoring, or cloud tiering, or cloud recalling.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete copy by ID.
      tags:
      - Copy Management
      x-ppdm-executable-roles: user,export-and-recovery-admin
    get:
      description: 'Retrieves a copy by its ID. The copy defines asset backup. Each
        copy is assigned to an asset. A asset can correspond to many copies.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getCopy
      parameters:
      - description: ID of the copy.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned copy.
          schema:
            $ref: '#/definitions/Copy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get copy by ID.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/copies/{id}/cloud:
    post:
      description: 'Recall and retier a copy from cloud. The header should contain
        a valid authentication token. Retier and retention time is required.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: cloudCreateCopy
      parameters:
      - description: ID of the copy.
        in: path
        name: id
        required: true
        type: string
      - description: Detailed information of the action to recall and retier a copy
          from cloud.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/CloudCopy'
      responses:
        '200':
          description: Successfully create the copy.
          schema:
            $ref: '#/definitions/CloudCopy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Recall and retier a copy from cloud.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,export-and-recovery-admin
    put:
      description: 'Update recall and retier a copy retier time from cloud. Only retier
        retention time can be updated. Retier retention time is required.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: cloudUpdateCopy
      parameters:
      - description: ID of the copy.
        in: path
        name: id
        required: true
        type: string
      - description: Detailed information of the action to recall and retier a copy
          from cloud.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/CloudCopy'
      responses:
        '200':
          description: Successfully updated the copy.
          schema:
            $ref: '#/definitions/CloudCopy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update recall and retier a copy retier time from cloud.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,export-and-recovery-admin
  /api/v2/copies/{id}/logs:
    get:
      description: 'Retrieves copy logs by ID. The parameter ID is the ID of a full
        copy. It returns BAD_REQUEST if parameter ID is invalid.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getCopyLogs
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: ID of the copy.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned copy logs.
          schema:
            $ref: '#/definitions/CopyLogs'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get copy logs by ID.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/copy-metrics:
    get:
      description: Get copy metrics per asset.
      operationId: getCopyMetrics
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned copy metrics.
          schema:
            $ref: '#/definitions/CopyMetrics'
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get copy metrics.
      tags:
      - Compliance
  /api/v2/credentials:
    get:
      description: 'Retrieves all **Credentials** in PowerProtect Data Manager. **Credentials**
        contains username and password or token. The password is securely stored in
        the lockbox of PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getCredentials
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available credentials.
          schema:
            $ref: '#/definitions/Credentials'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all credentials.
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Creates a **Credential** in PowerProtect Data Manager. **Credential**
        contains username and password. The password is securely stored in the lockbox
        of PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createCredential
      parameters:
      - description: Request body to create a credential.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Credential'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Credential'
        '201':
          description: Successfully created the credential.
          schema:
            $ref: '#/definitions/Credential'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a credential.
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin
  /api/v2/credentials-batch:
    patch:
      description: 'Credentials batch update for password

        > This endpoint supports execution by the following roles: admin

        '
      operationId: batchUpdateCredentials
      parameters:
      - description: Request Body for credential password batch update.
        in: body
        name: body
        schema:
          $ref: '#/definitions/CredentialsBatchRequests'
      responses:
        '202':
          description: Credential password batch request has been accepted.
          schema:
            $ref: '#/definitions/CredentialsBatchResponse'
        '400':
          description: The request is invalid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Credentials batch update.
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin
  /api/v2/credentials-deletion-batch:
    post:
      description: 'Delete multiple credentials in batch.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: postCredentialsDeletionBatch
      parameters:
      - description: ''
        in: body
        name: body
        schema:
          $ref: '#/definitions/CredentialsBatchDeletionRequest'
      responses:
        '204':
          description: Successfully deleted all the credentials.
        '207':
          description: Some of the credentials are failed to be deleted.
          schema:
            $ref: '#/definitions/BatchResponses'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete multiple credentials in batch.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/credentials/{id}:
    delete:
      description: 'Deletes a **Credential** by ID from PowerProtect Data Manager.
        The deleted **Credential** is removed from PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteCredential
      parameters:
      - description: ID of the credential.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the credential.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete credential by ID.
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a **Credential** by ID. **Credential** contains username
        and password. The password is securely stored in the lockbox of PowerProtect
        Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getCredential
      parameters:
      - description: ID of the credential.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the credential.
          schema:
            $ref: '#/definitions/Credential'
        '204':
          description: The requested credential does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a credential by ID.
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates a **Credential** by ID. **Credential** contains username
        and password. The password is securely stored in the lockbox of PowerProtect
        Data Manager.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateCredential
      parameters:
      - description: ID of the credential.
        in: path
        name: id
        required: true
        type: string
      - description: Request body to update a credential.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Credential'
      responses:
        '200':
          description: Successfully updated the credential.
          schema:
            $ref: '#/definitions/Credential'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update credential by ID.
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin
  /api/v2/credentials/{id}/usage:
    get:
      description: 'Get all the consumers which are using this credential

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getCredentialsUsage
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CredentialUsage'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested credential does not exist.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all the consumers which are using this credential
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    parameters:
    - description: The credential Id
      in: path
      name: id
      required: true
      type: string
  /api/v2/data-targets:
    get:
      description: 'Retrieves all data targets. These data targets are automatically
        generated by storage systems. This API request returns a list of data targets.  An
        empty list is returned if there are no data sources. Filtering is supported
        for asterisked properties. Paging is supported.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDataTargets
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: The request completed successfully.
          schema:
            $ref: '#/definitions/DataTarget'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all data targets.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/data-targets/{id}:
    get:
      description: 'Retrieves a data target by its ID. This API request returns a
        data target. If the data target ID does not exist, 404 is returned.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDataTarget
      parameters:
      - description: id of the data target
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: The request completed successfully.
          schema:
            $ref: '#/definitions/DataTarget'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a data target by ID.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/datadomain-cloud-units/{storageSystemId}:
    get:
      description: 'Provides a storage system ID to retrieve a list of all cloud units
        on the specified Data Domain storage system. The result contains information
        about the cloud profile and provider name.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDataDomainCloundUnits
      parameters:
      - description: Storage system ID.
        in: path
        name: storageSystemId
        required: true
        type: string
      responses:
        '200':
          description: The request completed successfully.
          schema:
            $ref: '#/definitions/CloudUnits'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested cloud unit does not exist.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all cloud units by storage system ID.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/datadomain-ddboost-encryption-settings:
    get:
      consumes:
      - application/json
      description: 'Retrieves Data Domain system encryption setting information of
        the specified Data Domain system or PowerProtect Data Manager. The result
        contains the authentication mode and the encryption strength information.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDataDomainDdboostEncryptionSettings
      parameters:
      - description: The hostname.
        in: query
        name: hostname
        required: true
        type: string
      - description: The port number.
        format: int32
        in: query
        name: port
        required: true
        type: integer
      - description: The encrytion type.
        in: query
        name: type
        required: true
        type: string
      - description: The credential ID.
        in: query
        name: credentialId
        required: true
        type: string
      responses:
        '200':
          description: The request completed successfully.
          schema:
            $ref: '#/definitions/DataDomainEncryptionSettings'
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get Data Domain system encryption setting.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      consumes:
      - application/json
      description: 'Updates Data Domain system encryption setting of the local PowerProtect
        Data Manager. The encryption settings will be updated on the local Intergrated
        Storage system.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateDataDomainDdboostEncryptionSettings
      parameters:
      - description: Request body
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/DataDomainEncryptionSettings'
      responses:
        '200':
          description: The request completed successfully.
          schema:
            $ref: '#/definitions/DataDomainEncryptionSettings'
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Update Data Domain system encryption setting.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin
  /api/v2/datadomain-mtrees:
    get:
      description: 'Retrieves a list of all Data Domain MTrees existing in all added
        Data Domain systems in the current PowerProtect system. The result contains
        information about each Mtree on the list such as the name, retention lock,
        storage system, and quotas.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDataDomainMTrees
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      produces:
      - application/json
      responses:
        '200':
          description: The request completed successfully.
          schema:
            $ref: '#/definitions/DataDomainMTrees'
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all Data Domain system MTrees.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/datadomain-storage-units/{dataTargetId}:
    get:
      description: 'Provides a data target ID to get information about the storage
        unit such as name, retention lock status, and Data Domain storage system.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDataDomainStorageUnit
      parameters:
      - description: Data target ID
        in: path
        name: dataTargetId
        required: true
        type: string
      responses:
        '200':
          description: The request completed successfully.
          schema:
            $ref: '#/definitions/DataDomainStorageUnit'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get storage unit by data target ID.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/discoveries:
    get:
      description: 'Retrieves a paginated list of discoveries. You can specify the
        page number and the page size by using **page** and **pageSize** query parameters
        respectively. By default, a list of all discovery objects is returned. This
        API also supports a **filter** query parameter that returns discovery objects
        that match a specified set of conditions. This API supports an **orderby**
        query parameter to specify how the returned list of discovery objects is sorted.
        When successful, the API returns the HTTP status code 200 (OK).


        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getAllDiscoveries
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned known discoveries.
          schema:
            $ref: '#/definitions/Discoveries'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all discoveries.
      tags:
      - Discovery
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      description: 'Runs a discovery that is identified by a specified **start** value.
        If the discovery that is identified by the specified **start** value is already
        running, the API returns an error with HTTP status code 409 (CONFLICT). If
        the discovery starts successfully, the API returns the HTTP status code 202
        (ACCEPTED).

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: createDiscovery
      parameters:
      - description: 'The request body must contain a JSON representation of the discovery
          model. '
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Discovery'
      responses:
        '202':
          description: Successfully accepted the discovery request.
          schema:
            $ref: '#/definitions/Discovery'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: A similar discovery request is currently processing.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Request a discovery.
      tags:
      - Discovery
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/discoveries/{id}:
    delete:
      description: 'Deletes a discovery that is identified by a specified ID. If the
        discovery that is identified by the specified ID is already running, the API
        returns an error with HTTP status code 409 (CONFLICT). If the discovery is
        deleted successfully, this API returns the HTTP status code 204 (NO CONTENT).

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: deleteDiscovery
      parameters:
      - description: The UUID of the internal discovery model stored in Elasticsearch.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the discovery.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: A similar discovery request is currently processing.
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete a discovery by ID.
      tags:
      - Discovery
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates a discovery that is identified by a specified ID. Use
        this API to update the scheduled start time (hour and minute) when a discovery
        re-runs each day or set whether that scheduled discovery is enabled. If the
        server is in the quiesce state before a backup, the API returns the HTTP status
        code 503 (SERVICE UNAVAILABLE). If the discovery is updated successfully,
        the API returns the HTTP status code 200 (OK).

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: updateDiscovery
      parameters:
      - description: The UUID of the internal discovery model stored in Elasticsearch.
        in: path
        name: id
        required: true
        type: string
      - description: The request body must contain a JSON representation of the discovery
          model.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Discovery'
      responses:
        '200':
          description: Successfully updated the discovery.
          schema:
            $ref: '#/definitions/Discovery'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: Server in quiesce state prior to a backup.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update a discovery by ID.
      tags:
      - Discovery
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/disks:
    get:
      description: 'Retrieves all disks in the appliance.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getDisks
      produces:
      - application/json
      responses:
        '200':
          description: Located and returned the available disks successfully.
          schema:
            $ref: '#/definitions/Disks'
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all disks in the appliance.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/disks/{id}:
    get:
      description: 'Retrieves a disk by ID.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getDisk
      parameters:
      - description: Disk ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned the disk with the specified ID.
          schema:
            $ref: '#/definitions/Disk'
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a disk with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get disk by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/dynamic-filters:
    get:
      deprecated: true
      description: 'Retrieves all dynamic filters

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDynamicFilters
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available dynamic filters.
          schema:
            $ref: '#/definitions/ProtectionRules'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all dynamic filters.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      deprecated: true
      description: 'Create a dynamic filter.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createDynamicFilter
      parameters:
      - description: Detailed information for the dynamic filter to create.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ProtectionRule'
      responses:
        '200':
          description: 'Successful operation. '
          schema:
            $ref: '#/definitions/ProtectionRule'
        '201':
          description: Successfully created the dynamic filter.
          schema:
            $ref: '#/definitions/ProtectionRule'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a dynamic filter.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/dynamic-filters-execution:
    post:
      deprecated: true
      description: 'Executes dynamic filters.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: executeDynamicFilters
      parameters:
      - description: Detailed information about running dynamic filters.
        in: body
        name: body
        schema:
          $ref: '#/definitions/ProtectionRuleExecution'
      responses:
        '200':
          description: Successfully triggered the dynamic filters.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Execute dynamic filters.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/dynamic-filters/{id}:
    delete:
      deprecated: true
      description: 'Deletes dynamic filter by specified ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteDynamicFilter
      parameters:
      - description: ID of the dynamic filter.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully deleted the dynamic filter.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete dynamic filter by ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
    get:
      deprecated: true
      description: 'Retrieves a dynamic filter by ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getDynamicFilter
      parameters:
      - description: ID of the dynamic filter.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the dynamic filter.
          schema:
            $ref: '#/definitions/ProtectionRule'
        '204':
          description: The requested dynamic filter does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a dynamic filter by ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      deprecated: true
      description: 'Update dynamic filter by ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateDynamicFilter
      parameters:
      - description: ID of the dynamic filter.
        in: path
        name: id
        required: true
        type: string
      - description: Detail information of dynamic filter to be updated.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ProtectionRule'
      responses:
        '200':
          description: Successfully updated the dynamic filter.
          schema:
            $ref: '#/definitions/ProtectionRule'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update dynamic filter by ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/eulas/PPDM:
    get:
      description: 'Retrieves the current PowerProtect Data Manager end user license
        agreement (EULA).

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getPPDMEULA
      responses:
        '200':
          description: Found and returned the PowerProtect Data Manager EULA.
          schema:
            $ref: '#/definitions/PPDMEULA'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: The service is unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      summary: Get PowerProtect Data Manager EULA.
      tags:
      - Installation
      x-ppdm-executable-roles: admin, user, export and recovery admin
    patch:
      description: 'Accepts PowerProtect Data Manager end user license agreement (EULA).

        > This endpoint supports execution by the following roles: admin

        '
      operationId: acceptPPDMEULA
      parameters:
      - description: Request body containing accepted or not
        in: body
        name: body
        schema:
          $ref: '#/definitions/AcceptPPDMEULA'
      responses:
        '200':
          description: Successfully updated the PowerProtect Data Manager EULA.
          schema:
            $ref: '#/definitions/PPDMEULA'
        '400':
          description: The submitted settings payload has a syntax error.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '422':
          description: Required fields are missing in the request payload.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: The service is unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      summary: Accept PowerProtect Data Manager EULA.
      tags:
      - Installation
      x-ppdm-executable-roles: admin
  /api/v2/eulas/TELEMETRY:
    get:
      description: 'Retrieves the current telemetry end user license agreement (EULA).

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getTelemetryEULA
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned the telemetry EULA.
          schema:
            $ref: '#/definitions/TelemetryEULA'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: The service is unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      summary: Get telemetry EULA.
      tags:
      - Telemetry Setting
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    patch:
      description: 'Accepts telemetry end user license agreement (EULA).

        > This endpoint supports execution by the following roles: admin

        '
      operationId: acceptTelemetryEULA
      parameters:
      - description: Request body containing accepted or not
        in: body
        name: body
        schema:
          $ref: '#/definitions/AcceptTelemetryEULA'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully updated the telemetry EULA.
          schema:
            $ref: '#/definitions/TelemetryEULA'
        '400':
          description: The submitted settings payload has a syntax error.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '422':
          description: Required fields are missing in the request payload.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: The service is unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      summary: Accept telemetry EULA.
      tags:
      - Telemetry Setting
      x-ppdm-executable-roles: admin
  /api/v2/exported-copies:
    get:
      description: 'Retrieves all the exported copies. This API request defines which
        copy is already mounted. Exported copies are deleted after use.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getExportedCopies
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available exported copy resources.
          schema:
            $ref: '#/definitions/ExportedCopies'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all exported copies.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
  /api/v2/exported-copies/{id}:
    delete:
      description: 'Deletes an exported copy by parameter ID. This API request defines
        which copy is already mounted.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: deleteExportedCopy
      parameters:
      - description: ID of exported copy.
        in: path
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Successfully initiated deletion of the exported copy.
          schema:
            $ref: '#/definitions/ExportedCopiesDeletionResponse'
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Delete an exported copy by ID.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,export-and-recovery-admin
    get:
      description: 'Retrieves an exported copy by parameter ID. This API request defines
        which copy is already mounted. Exported copies are deleted after use.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getExportedCopy
      parameters:
      - description: ID of copy.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the exported copies.
          schema:
            $ref: '#/definitions/ExportedCopy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested exported copies do not exist.
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get an exported copy by ID.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/external-notifications:
    get:
      description: 'Retrieves all configured external notifications.

        > This endpoint supports execution by the following roles: admin


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getExternalNotifications
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/queryState'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available external notification.
          schema:
            $ref: '#/definitions/ExternalNotifications'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all configured external notifications.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random,serial
    post:
      consumes:
      - application/json
      description: 'Create a new notification configuration.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createExternalNotification
      parameters:
      - description: The external notification request body..
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ExternalNotification'
      produces:
      - application/json
      responses:
        '200':
          description: Resource created.
          schema:
            $ref: '#/definitions/ExternalNotification'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create external notification.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/external-notifications/{id}:
    delete:
      description: 'Deletes an existing notification configuration by UUID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteExternalNotification
      parameters:
      - description: ID of the external notification resource.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully returned with no content.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete an external notification by ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves an external notification by UUID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getExternalNotification
      parameters:
      - description: ID of the external notification resource.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned the event.
          schema:
            $ref: '#/definitions/ExternalNotification'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get an external notification by ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
    put:
      consumes:
      - application/json
      description: 'Updates an external notification by UUID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateExternalNotification
      parameters:
      - description: The external notification resource model.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ExternalNotification'
      - description: ID of the external notification resource.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Resource updated.
          schema:
            $ref: '#/definitions/ExternalNotification'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not authenticated to perform this operation.
        '404':
          description: The requested resource is not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update external notification by ID.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
  /api/v2/file-instances:
    get:
      consumes:
      - application/json
      description: 'Retrieves a paginated list of files and folder documents within
        the protected assets. By default, a list of 10 objects is returned. The specified
        query parameters customize the ordering, pagination, and filtering of the
        result.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getFileInstances
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: The start date from which to show document copies.  Each file
          or folder copy has a copy start date and copy end date that records the
          from-and-to time.  Modifications to that file or folder cause another document
          to be indexed with a different copy start date and copy end date.  This
          filter limits result sets to be greater or equal to a particular copy start
          date.
        format: date-time
        in: query
        name: copyStartDate
        type: string
      - description: The end date up to which to show document copies.  Each file
          or folder copy has a copy start date and copy end date that records the
          from-and-to time.  Modifications to that file or folder cause another document
          to be indexed with a different copy start date and copy end date.  This
          filter limits result sets to be less or equal to a particular copy end date.
        format: date-time
        in: query
        name: copyEndDate
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned the files and folders within the protected
            assets.
          schema:
            $ref: '#/definitions/FileInstances'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Server error prevented the successful completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get files and folders within protected assets.
      tags:
      - Asset Metadata
      x-ppdm-executable-roles: admin
  /api/v2/flr-sessions:
    post:
      description: 'Establishes a File-Level-Restore (FLR) session. An FLR session
        is used to restore individual files or directories as opposed to performing
        an Image-Level-Restore (that is, restoring entire VMs).


        Calling this API mounts the disks of a copy to a target VM. The ID of the
        copy and the ID of the target VM are acquired by browsing the PowerProtect
        Data Manager inventory. The mount operation will make the files present on
        the mounted disk available for selection to be restored. Once the disks are
        mounted onto the target VM, the disk file system (or systems) may be browsed
        directory-by-directory. The caller may select files within each directory
        to be restored.


        The mounting of the disk from the copy is an asynchronous operation, so the
        response from this API contains a PowerProtect Data Manager task ID and a
        hyperlink. The task API can be called to monitor the progress of of the operation.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: mountFLRSession
      parameters:
      - description: This object contains the parameters used to mount the source
          disk data that is associated with a copy (specified by copyId) to the target
          VM (specified by targetVmAssetId).
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/MountParams'
      responses:
        '202':
          description: FLR session create task started.
          schema:
            $ref: '#/definitions/MountResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '412':
          description: The request precondition failed.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a new FLR Session.
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/flr-sessions-batch:
    post:
      description: 'Submit multiple File Level Restore requests in a batch operation.


        Each request is submitted as a separate FLR session and results in a separate
        Job in a JobGroup.  Each Copy is mounted on the TargetVM and the selected
        files are restored, then the Copy is unmounted.


        Jobs may run sequentially or in parallel, depending on the details of the
        request and available resources.'
      operationId: fileLevelRestoreBatch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/RestoredFilesBatchRequest'
      responses:
        '207':
          description: The request was accepted and returned multiple results.
          schema:
            $ref: '#/definitions/RestoredFilesBatchResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Submit multiple File Level Restore requests in a batch operation.
      tags:
      - File Level Restore
  /api/v2/flr-sessions/{flrSessionId}:
    delete:
      description: 'Unmounts the disks from the target VM and deletes the FLR session
        resource. A prerequisite is that an flrSessionId be created by creating a
        new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to browse
        the directories after creating the session, and collect a list (on the client
        side) of the file paths to be restored.


        The final step of the restore files API is to automatically delete the FLR
        session. Calling this API after the restore files API is called is not necessary.


        Deleting the FLR session is typically the last (cleanup) step of the workflow,
        which will release the resources allocated to maintain the FLR browse session.


        Unmounting the disks from the target VM is an asynchronous operation. The
        response from this API contains a PowerProtect Data Manager task API reference.
        The task API can be called to determine the progress of this operation.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: unmountFLRSession
      parameters:
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        type: string
      responses:
        '202':
          description: Unmounted.
          schema:
            $ref: '#/definitions/MountResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete the specified FLR session.
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    get:
      description: 'Returns the current settings (the UpdateBrowseRequest) for the
        specified FLR Session ID.


        A prerequisite is that an flrSessionId be created by creating a new FLR session
        (POST /api/v2/flr-sessions). The usual workflow is to browse the directories
        after creating the session, and collect a list (on the client side) of the
        file paths to be restored (and browsing would be done, in part, by this API).

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getFLRSession
      parameters:
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        type: string
      responses:
        '200':
          description: Get browse session.
          schema:
            $ref: '#/definitions/UpdateBrowseRequest'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get FLR session state.
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Changes the directories on the target or in the backup for the
        specified FLR session ID.


        A prerequisite is that an flrSessionId be created by creating a new FLR session
        (POST /api/v2/flr-sessions).  The usual workflow is to browse the directories
        after creating the session (where changing directories is part of the browsing,
        and would be achieved by calling this API).

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: updateFLRSession
      parameters:
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        type: string
      - description: This object contains the parameters use to update a browse request
          (it is used for input and output).  It contains a boolean browseDest parameter,
          and a string directory parameter, which contains the directory path to browse.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/UpdateBrowseRequest'
      responses:
        '200':
          description: 'The response includes two fields: A flag indicating whether
            the copy or the destination VM is being browsed and the name directory
            currently being browsed.'
          schema:
            $ref: '#/definitions/UpdateBrowseRequest'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: The request could not be completed due to a conflict with the
            current state of the target resource.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Modify FLR session.
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/flr-sessions/{flrSessionId}/files:
    get:
      description: 'Retrieves the directory file list for the specified FLR session
        ID. The file list can be filtered based on the optional filter and paging
        query parameters.


        A prerequisite is that an flrSessionId be created by creating a new FLR session
        (POST /api/v2/flr-sessions). The usual workflow is to browse the directories
        after creating the session, and collect a list (on the client side) of the
        file paths to be restored.


        This API call allows the caller to retrieve the file list corresponding to
        the current directory in the FLR browse session. Finally, the caller calls
        the flr-sessions/{flrSessionId}/tasks API with the desired file list to restore
        those files on the target VM. The FLR session is automatically closed down
        when the restore task API is called. Otherwise, the session is be terminated
        by calling the DELETE API.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getFLRSessionFiles
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        type: string
      responses:
        '200':
          description: The response is a list of files formatted by the filter and
            page information specified in the request.
          schema:
            $ref: '#/definitions/DirectoryFileList'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: The request could not be completed because of a conflict with
            the current state of the target resource.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get directory file list.
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/flr-sessions/{flrSessionId}/tasks:
    post:
      description: 'Restores the files specified in the request body. Once the files
        are restored, the FLR session is deleted. It is not necessary to call the
        DELETE API after calling this API.


        A prerequisite is that an flrSessionId be created by creating a new FLR session
        (POST /api/v2/flr-sessions).  The usual workflow is to then browse the directories
        after creating the session, and collect a list (on the client side) of the
        file paths to be restored, and then call this API to restore the files.


        Restoring the files is an asynchronous operation. The response from this API
        contains a PowerProtect Data Manager task ID and API reference. The task API
        can be called to determine the progress of this operation.


        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: restoreFiles
      parameters:
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        type: string
      - description: This object is contains information used to restore files to
          a target VM.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/RestoreFilesRequest'
      responses:
        '202':
          description: FLR initiated.
          schema:
            $ref: '#/definitions/RestoreFilesResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Restore files picked during the browse.
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/hosts:
    get:
      description: 'Retrieves all **Hosts** including PRIMARY, GROUP, APP_HOST, ESX_HOST,
        ESX_CLUSTER, MSSQL, ORACLE, and Filesystem.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getHosts
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available host.
          schema:
            $ref: '#/definitions/Hosts'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all hosts.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/hosts/{id}:
    get:
      description: 'Retrieves **Hosts** like PRIMARY, GROUP, APP_HOST, ESX_HOST, ESX_CLUSTER,
        MSSQL, ORACLE, Filesystem by ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getHost
      parameters:
      - description: ID of the host.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the host.
          schema:
            $ref: '#/definitions/Host'
        '204':
          description: The requested host does not exist.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a host by ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Update credentail and TNS for host by ID.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: updateHost
      parameters:
      - description: ID of the host.
        in: path
        name: id
        required: true
        type: string
      - description: Request body of updating host.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Host'
      responses:
        '200':
          description: Successfully updated the host.
          schema:
            $ref: '#/definitions/Host'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update host credential and TNS values by ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,export-and-recovery-admin
  /api/v2/identity-sources:
    get:
      description: 'Retrieves all identity sources. When filtering with createdDate,
        if the value contains a plus sign (+), replace it with %2B. Not replacing
        the plus sign can cause an unexpected response.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getIdentitySources
      parameters: []
      responses:
        '200':
          description: Successfully retrieved the list of identity sources.
          schema:
            $ref: '#/definitions/IdentitySources'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token (access token) is either invalid or
            expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all identity sources.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      description: 'Creates an identity source. The identity source provides login
        credentials for LDAP or Windows Active Directory users, after mapping groups
        to roles.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createIdentitySource
      parameters:
      - description: Identity Source
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IdentitySource'
      - default: false
        description: Checks the connection of the identity source with the provided
          credentials.
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '201':
          description: Successfully created the identity source.
          schema:
            $ref: '#/definitions/IdentitySource'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token (access token) is either invalid or
            expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '409':
          description: Conflict.
        '422':
          description: Connection to the identity source timed out.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Create an identity source.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
  /api/v2/identity-sources/{IdSourceId}:
    delete:
      description: 'Deletes an identity source by ID. When the identity source is
        deleted, if any groups are mapped to roles, the users in those groups are
        no longer able to access the system or perform any operations.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteIdentitySource
      parameters:
      - description: Identity source ID.
        format: string
        in: path
        name: IdSourceId
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the identity source.
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '409':
          description: Conflict.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Delete an identity source.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves an identity source by ID. When the identity source is
        retrieved, groups can be mapped to roles to provide access to the system and
        perform operations.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getIdentitySource
      parameters:
      - description: Identity source ID.
        format: string
        in: path
        name: IdSourceId
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the specified identity source.
          schema:
            $ref: '#/definitions/IdentitySource'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The identity source was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get an identity source by ID.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates an identity source by ID. When updated, the identity source
        uses the new information to access the LDAP or Windows Active Directory, including
        the retrieval of groups.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateIdentitySource
      parameters:
      - description: Identity source ID.
        format: string
        in: path
        name: IdSourceId
        required: true
        type: string
      - description: Identity Source
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IdentitySource'
      - description: Checks the connection of the identity source with the provided
          credentials.
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: Successfully updated the identity source.
          schema:
            $ref: '#/definitions/IdentitySource'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The identity source was not found.
        '409':
          description: Conflict. The system may already have an identity source.
        '422':
          description: Connection to the identity source timed out.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Update an identity source.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
  /api/v2/identity-sources/{IdSourceId}/groups:
    get:
      description: 'Retrieves the groups belonging to the identity source. These groups
        can be mapped to roles to provide access to the system and perform operations.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getIdSourceGroups
      parameters:
      - $ref: '#/parameters/filter'
      - description: Identity source ID.
        format: string
        in: path
        name: IdSourceId
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved all identity source group names.
          schema:
            $ref: '#/definitions/IdentitySourceGroups'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get groups belonging to the identity source.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/identity-sources/{IdSourceId}/groups/{groupName}/users:
    get:
      description: 'Retrieves the users belonging to an identity source group. This
        information helps administrators know which users are in each group. The information
        is useful when creating group-to-role mappings.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getIdSourceGroupUsers
      parameters:
      - description: The ID of the identity source.
        format: string
        in: path
        name: IdSourceId
        required: true
        type: string
      - description: The group name of the identity source.
        in: path
        name: groupName
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the usernames within the specified identity
            source group.
          schema:
            $ref: '#/definitions/IdentitySourceGroupUsers'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get users belonging to an identity source group.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/inventory-sources:
    get:
      description: 'Retrieves all inventory sources in the PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getInventorySources
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available inventory sources.
          schema:
            $ref: '#/definitions/InventorySources'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all inventory sources.
      tags:
      - Inventory Source Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      description: 'Creates an inventory source.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: createInventorySource
      parameters:
      - description: The body contains detailed information about the inventory source
          to create.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/InventorySource'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/InventorySource'
        '201':
          description: Successfully created the inventory source.
          schema:
            $ref: '#/definitions/InventorySource'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create an inventory source.
      tags:
      - Inventory Source Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/inventory-sources/{id}:
    delete:
      description: 'Deletes an inventory source by the specified ID.

        These inventory source types are supported: VCENTER, KUBERNETES, DATADOMAINMANAGEMENTCENTER,
        EXTERNALDATADOMAIN, POWERPROTECTSYSTEM

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteInventorySource
      parameters:
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        type: string
      - description: 'With header "Prefer: respond-async", returns HTTP status 202
          with ''activityId'' in response body.'
        enum:
        - respond-async
        in: header
        name: Prefer
        type: string
      responses:
        '202':
          description: 'When request with header "Prefer: respond-async", the delete
            inventory source action runs as an asynchronous operation. The response
            contains the tracking ''activityId''.'
          schema:
            $ref: '#/definitions/DeleteInventorySourceResponse'
        '204':
          description: Successfully deleted the inventory source.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete an inventory source by ID.
      tags:
      - Inventory Source Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves an inventory source by ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getInventorySource
      parameters:
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned requested inventory source.
          schema:
            $ref: '#/definitions/InventorySource'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested inventory source does not exist.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get an inventory source by ID.
      tags:
      - Inventory Source Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates an inventory source by ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateInventorySource
      parameters:
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        type: string
      - description: The body contains detailed information about the inventory source
          to update.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/InventorySource'
      responses:
        '200':
          description: Successfully updated the inventory source.
          schema:
            $ref: '#/definitions/InventorySource'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update an inventory source by ID.
      tags:
      - Inventory Source Management
      x-ppdm-executable-roles: admin
  /api/v2/inventory-sources/{id}/storage-systems:
    get:
      deprecated: true
      description: 'Retrieves all storage systems associated to the inventory source.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getInventorySourceStorageSystems
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned available storage systems.
          schema:
            $ref: '#/definitions/StorageSystem'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all storage systems associated to the inventory source.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
  /api/v2/kubernetes-clusters:
    get:
      description: Retrieves the list of Kubernetes clusters.
      operationId: getKubernetesClusters
      responses:
        '200':
          description: Retrieving list of Kubernetes clusters.
          schema:
            $ref: '#/definitions/K8sClusters'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: Service unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      summary: Get Kubernetes clusters.
      tags:
      - Kubernetes Data Management
  /api/v2/kubernetes-clusters/{cluster-id}/pvc-storage-class-mappings:
    get:
      description: When an alternate storage class is required for restoring to an
        alternate cluster, this request retrieves a list of compatible storage classes
        per PersistentVolumeClaim (PVC) from the specified Kubernetes cluster.
      operationId: getStorageClassMappings
      parameters:
      - description: The ID of the Kubernetes cluster.
        in: path
        name: cluster-id
        required: true
        type: string
      - description: The ID of the copy to be restored.
        in: query
        name: copyId
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved list of compatible storage classes.
          schema:
            $ref: '#/definitions/PvcStorageMappings'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Required string parameter copyId is not present.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '503':
          description: Service unavailable.
          schema:
            $ref: '#/definitions/ErrorMessage'
      summary: Get storage classes from target Kubernetes cluster.
      tags:
      - Kubernetes Data Management
  /api/v2/latest-copies:
    get:
      description: 'This API returns the latest copies of the assets that are specified
        in the filter. One copy for one asset. The filter and the assetId must be
        provided. Examples follow:


        Get latest copies of specified assets

        `GET /api/v2/latest-copies?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894",
        "0e11f488-63b4-4a70-860c-994e5e433b19")`


        Get latest copies that satisfy particular copy characteristics

        `GET /api/v2/latest-copies?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894",
        "0e11f488-63b4-4a70-860c-994e5e433b19") and copyType in ("FULL", "DIFFERENTIAL",
        "INCREMENTAL") and replicatedCopy eq false and location in ("LOCAL", "LOCAL_RECALLED")
        and storageSystemId eq "deaedef1-986a-4a44-a475-80afa3709b1f" and not state
        in ("DELETED", "DELETING", "SOFT_DELETED", "DELETE_FAILED")`


        Get latest copies before a time point

        `GET /api/v2/latest-copies?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894",
        "0e11f488-63b4-4a70-860c-994e5e433b19") and createTime lt "2020-08-24T08:29:00Z"`

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getLatestCopies
      parameters:
      - $ref: '#/parameters/filter'
      responses:
        '200':
          description: Successfully returned latest copies for specified asset.
          schema:
            $ref: '#/definitions/Copies'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requester is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requester is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get latest copies of specified assets.
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/licenses:
    get:
      description: 'Retrieves licenses that are available on the system.

        PowerProtect Data Manager licenses include status details such as capacity
        usage, license Type, license status.

        Type can be CAPACITY, SOCKET, APPLIANCE.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getLicenses
      responses:
        '200':
          description: Located and returned available licenses.
          schema:
            $ref: '#/definitions/Licenses'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all licenses.
      tags:
      - Licenses Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
    post:
      description: 'Creates a new license.

        A license xml file is passed in a key field.


        > This endpoint supports execution by the following roles: admin

        '
      operationId: createLicense
      parameters:
      - description: Creates a new license.
        in: body
        name: elms key
        required: true
        schema:
          $ref: '#/definitions/EntityString'
      responses:
        '200':
          description: The license was validated successfully.
          schema:
            $ref: '#/definitions/License'
        '202':
          description: The license was created successfully.
          schema:
            $ref: '#/definitions/License'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '422':
          description: The submitted license is not valid.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Create new license.
      tags:
      - Licenses Management
      x-ppdm-executable-roles: admin
  /api/v2/licenses/{id}:
    get:
      description: 'Retrieves the license associated with the specified ID.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getLicense
      parameters:
      - default: Unique identifier for license
        description: License ID sent in request.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Found and returned the license with the specified ID.
          schema:
            $ref: '#/definitions/License'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find the license with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get license by ID.
      tags:
      - Licenses Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
    put:
      description: 'Updates the license associated with the specified ID.

        A license xml file is passed in a key field in the REST API body.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateLicense
      parameters:
      - default: Unique identifier for license
        description: License ID sent in request.
        in: path
        name: id
        required: true
        type: string
      - description: Update the license associated with the specified ID.
        in: body
        name: elms key
        required: true
        schema:
          $ref: '#/definitions/EntityString'
      responses:
        '200':
          description: The license update completed successfully.
          schema:
            $ref: '#/definitions/License'
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find license with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '422':
          description: The submitted license is not valid.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Update the license that is associated with the specified ID.
      tags:
      - Licenses Management
      x-ppdm-executable-roles: admin
  /api/v2/locations:
    get:
      description: 'Retrieves all **locations** in the PowerProtect Data Manager.
        **Location** can be set to **Storage System**. For example, set location for
        Data Domain system.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getLocations
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available locations.
          schema:
            $ref: '#/definitions/Locations'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all locations.
      tags:
      - Location Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Creates a **Location** in the PowerProtect Data Manager. **Location**
        can be set to **Storage System**. For example, set location for Data Domain
        system.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createLocation
      parameters:
      - description: Detailed information of location to be created.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Location'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Location'
        '201':
          description: Successfully created the location.
          schema:
            $ref: '#/definitions/Location'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a location.
      tags:
      - Location Management
      x-ppdm-executable-roles: admin
  /api/v2/locations/{id}:
    delete:
      description: 'Deletes a **Location** from PowerProtect Data Manager. **Location**
        can be set to **Storage System**. For example, set location for Data Domain
        system.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteLocation
      parameters:
      - description: ID of the location.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the location.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete location by ID.
      tags:
      - Location Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a **Location** by ID in PowerProtect Data Manager. **Location**
        can be set to **Storage System**. For example, set location for Data Domain
        system.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getLocation
      parameters:
      - description: ID of the location.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the location.
          schema:
            $ref: '#/definitions/Location'
        '204':
          description: The requested location does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a location by ID.
      tags:
      - Location Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/log-bundles:
    get:
      description: 'Retrieves all existing log bundles in the system. Supports filtering.
        The status case is ignored.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getLogBundles
      produces:
      - application/json
      responses:
        '200':
          description: Successfully retrieved and returned available log bundles.
          schema:
            $ref: '#/definitions/LogBundles'
        '400':
          description: The filter string was not parsable.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor did not provide valid authentication credentials.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor does not have required permissions to access
            the resource.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Get all existing log bundles in the system.
      tags:
      - Log Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Creates a new log bundle and returns the log bundle with its ID
        and a status of BUILDING.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createLogBundle
      parameters:
      - description: Must include a bundle start date and a log bundle formula.
        in: body
        name: Log bundle
        required: true
        schema:
          $ref: '#/definitions/LogBundle'
      produces:
      - application/json
      responses:
        '202':
          description: The log bundle was successfully posted and started.
          schema:
            $ref: '#/definitions/LogBundleCreateResponse'
        '400':
          description: The submitted log bundle could not be parsed due to syntax
            errors.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access
            the resource.
        '409':
          description: Another log bundle is currently building.
        '422':
          description: Occurs if the log bundle contains anything other than the bundle
            start date and log bundle formula. Also occurs if the formula provided
            contains an ID and other fields, or other fields and an ID.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Create a new log bundle.
      tags:
      - Log Management
      x-ppdm-executable-roles: admin
  /api/v2/log-bundles/{id}:
    delete:
      description: 'Deletes a completed, cancelled, or failed log bundle.  A building
        log bundle cannot be deleted.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteLogBundle
      parameters:
      - description: UUID for the log bundle.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '202':
          description: The log bundle was successfully set to a DELETING status and
            is purged later on.
          schema:
            $ref: '#/definitions/LogBundleDeleteResponse'
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access
            the resource.
        '404':
          description: If the log bundle with the given ID was not found.
        '409':
          description: If the log bundle is currently in a BUILDING state.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: 'Deletes a completed, cancelled, or failed log bundle. '
      tags:
      - Log Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the log bundle with the specified ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getLogBundle
      parameters:
      - description: UUID for the log bundle.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successfully retrieved and returned the log bundle with the
            specified ID.
          schema:
            $ref: '#/definitions/LogBundle'
        '401':
          description: The requestor did not provide valid authentication credentials.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor does not have required permissions to access
            the resource.
        '404':
          description: No log bundle with that ID was found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Get the log bundle with the specified ID.
      tags:
      - Log Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/log-disk-infos:
    get:
      description: 'Returns the current log disk information.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getLogDiskInfo
      produces:
      - application/json
      responses:
        '200':
          description: Successfully retrieved the log disk information.
          schema:
            $ref: '#/definitions/LogDiskInfos'
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access
            the resource.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Get disk usage information for the partition on which logging resides.
      tags:
      - Log Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/login:
    post:
      description: Logs in with user credentials. Once logged in, the user may perform
        operations granted to the user and defined by the user role.
      operationId: login
      parameters:
      - description: User login credentials.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/LoginCredentials'
      responses:
        '200':
          description: Successfully logged in with the user.
          schema:
            $ref: '#/definitions/AccessToken'
        '302':
          description: The user password is expired. Redirecting the user to change
            the password.
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '423':
          description: The user account is locked.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      summary: Log in to your account.
      tags:
      - Authentication and Authorization
  /api/v2/logout:
    post:
      description: 'Logs out of the user as specified in the access token. When logged
        out, the user that is defined in the access token can no longer run operations.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: logout
      parameters: []
      responses:
        '204':
          description: Successfully logged out of the current user.
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Log out from your account.
      tags:
      - Authentication and Authorization
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/network-requirement:
    get:
      description: 'Required Ip Count per component type, total just sum all up.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: networkRequirement
      parameters:
      - description: The type of server
        enum:
        - V_PROXY
        - SEARCH
        in: query
        name: serverType
        type: string
      - description: The reference id of the server
        in: query
        name: referenceId
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Return the ip needed info.
          schema:
            $ref: '#/definitions/NetworkRequirement'
        '400':
          description: Request contains invalid content.
        '401':
          description: Valid login is required.
        '500':
          description: Internal error.
      security:
      - BearerAuth: []
      summary: Get required IPs.
      tags:
      - Installation
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/networks:
    get:
      description: 'Retrieves all existing networks. Does not return a default network
        if no additional networks are added.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getNetworks
      produces:
      - application/json
      responses:
        '200':
          description: Returns all VLANs.
          schema:
            $ref: '#/definitions/Networks'
        '401':
          description: Valid login is required.
        '500':
          description: Cannot retrieve the networks.
      security:
      - BearerAuth: []
      summary: Get all networks.
      tags:
      - Installation
      x-ppdm-executable-roles: admin, user, export and recovery admin
    post:
      description: 'Creates a network. The operation occurs asynchronously. When successful,
        the request is accepted for processing.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: addNetwork
      parameters:
      - description: Add a new network.
        in: body
        name: body
        schema:
          $ref: '#/definitions/Network'
      produces:
      - application/json
      responses:
        '202':
          description: Add network successfully.
          schema:
            $ref: '#/definitions/Network'
        '400':
          description: Bad request
        '401':
          description: Need login
        '409':
          description: Request contains conflict info with existing info.
        '412':
          description: Internal Center not found.
        '500':
          description: Can't save networks
      security:
      - BearerAuth: []
      summary: Add a network.
      tags:
      - Installation
      x-ppdm-executable-roles: admin
  /api/v2/networks/{id}:
    delete:
      description: 'Need check whether VLAN used by any Asset, if yes, return error.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteNetwork
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: Delete network successfully and ip released.
        '202':
          description: Request is accepted, delete is on going, check result by GET
            and expect 404 for success, otherwise, check status, Changed means on
            going, failed for failed.
        '401':
          description: Need login.
        '404':
          description: Not found.
        '409':
          description: Network used by some assets, can't be delete, remove assign
            first.
        '500':
          description: Error when delete.
      security:
      - BearerAuth: []
      summary: Delete network by id.
      tags:
      - Installation
      x-ppdm-executable-roles: admin
    get:
      description: 'Get the specific network by id.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getNetwork
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: Return network info.
          schema:
            $ref: '#/definitions/Network'
        '401':
          description: Need login.
        '404':
          description: Not found.
        '500':
          description: Cannot retrieve the network.
      security:
      - BearerAuth: []
      summary: Get network by id.
      tags:
      - Installation
      x-ppdm-executable-roles: admin, user, export and recovery admin
    parameters:
    - in: path
      name: id
      required: true
      type: string
    put:
      description: 'Update the specific network by id.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateNetwork
      parameters:
      - description: Modify the network.
        in: body
        name: body
        schema:
          $ref: '#/definitions/Network'
      produces:
      - application/json
      responses:
        '200':
          description: No any changes need apply to all sub systems and would directly
            return success.
          schema:
            $ref: '#/definitions/Network'
        '202':
          description: Request accepted and executing on going.
          schema:
            $ref: '#/definitions/Network'
        '400':
          description: Request contains invalid content.
        '401':
          description: Need login.
        '404':
          description: Not found.
        '409':
          description: 'If update network but some using IP removed, can''t continue.

            If need more IP than passed in, can''t continue.

            '
        '500':
          description: Some error.
      security:
      - BearerAuth: []
      summary: Update whole network.
      tags:
      - Installation
      x-ppdm-executable-roles: admin
  /api/v2/nodes:
    get:
      description: 'Retrieves all nodes on the appliance. Each node has information
        about the appliance status, subcomponents in the appliance, uptime, version,
        and other system details.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getNodes
      produces:
      - application/json
      responses:
        '200':
          description: Located and returned the available nodes successfully.
          schema:
            $ref: '#/definitions/Nodes'
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all nodes.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/nodes/{id}:
    get:
      description: 'Retrieves a node on the appliance with the specified ID. The node
        has information about the appliance status, subcomponents in the appliance,
        uptime, version, and other system details.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getNode
      parameters:
      - description: Node ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned the node with the specified ID.
          schema:
            $ref: '#/definitions/Node'
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a node with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get node by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
    put:
      description: 'Updates the status of the appliance to any of the following states:
        MAINTENANCE, RESTORE, QUIESCE, OPERATIONAL.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateNode
      parameters:
      - description: Node ID sent in request.
        in: path
        name: id
        required: true
        type: string
      - description: 'The user can change the status of the appliance to the following
          states: MAINTENANCE, RESTORE, QUIESCE, OPERATIONAL'
        in: body
        name: Node
        required: false
        schema:
          $ref: '#/definitions/Node'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Node'
        '202':
          description: Accepted and processing the node status request.
        '400':
          description: The submitted node has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The system state change request is not valid.
        '404':
          description: Cannot find a node with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Change the status of the appliance.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
  /api/v2/os-user-password-reset:
    post:
      description: Reset the OS user password. The root password must be active (not
        expired).
      operationId: updateOsUserPassword
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ResetOsUserPasswordRequest'
      responses:
        '204':
          description: No Content
          schema:
            properties: {}
            type: object
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorMessage'
      summary: Reset OS User password.
      tags:
      - Installation
  /api/v2/protection-details:
    get:
      description: 'Retrieves a list of existing protections such as backups and replications.
        If there are too many results, this API request returns the HTTP response
        code 416 (REQUEST RANGE NOT SATISFIABLE). If successful, the API request returns
        the HTTP response code 200 (OK).

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getProtectionDetails
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/queryState'
      responses:
        '200':
          description: Successfully returned available protection details.
          schema:
            $ref: '#/definitions/ProtectionDetails'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '416':
          description: The request is too large to be satisfied.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevent the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a list of protection details.
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random,serial
  /api/v2/protection-engines:
    get:
      description: 'Retrieves all registered protection engines supported by PowerProtect
        Data Manager.  This list is expected to grow, and for the current release
        (and upcoming releases), the supported protection engine is VPE.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionEngines
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available protection engine.
          schema:
            $ref: '#/definitions/ProtectionEngines'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all protection engines.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Registers a protection engine with PowerProtect Data Manager.  This
        list of possible protection engines is expected to grow; however, for the
        current release (and upcoming releases), the supported protection engine is
        VPE.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: registerProtectionEngine
      parameters:
      - description: Optional fields not required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/ProtectionEngine'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ProtectionEngine'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/ProtectionEngine'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Register protection engine.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}:
    delete:
      description: 'Unregisters the protection engine, specified by its ID, from PowerProtect
        Data Manager.  A prerequisite is that the protection engine with the specified
        ID is already registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: unregisterProtectionEngine
      parameters:
      - description: The ID of the protection engine to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the protection engine.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Unregister protection engine.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    get:
      description: 'Retrieves the registered protection engine with the specified
        ID.  A prerequisite is that the protection engine with the specified ID is
        already registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionEngine
      parameters:
      - description: The ID of the protection engine to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the protection engine.
          schema:
            $ref: '#/definitions/ProtectionEngine'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The protection engine ID does not exist.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get protection engine.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates the protection engine with the specified ID. The protection
        engine with the specified ID must already be registered with PowerProtect
        Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: updateProtectionEngine
      parameters:
      - description: The ID of the protection engine to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: All fields required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/ProtectionEngine'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ProtectionEngine'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/ProtectionEngine'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '405':
          description: The requestor is not allowed to perform this operation as it
            is not implemented.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update protection engine.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}/management:
    post:
      description: 'Performs the specified operation (ProtectionManagementResource.operation)
        on the protection engine with the specified ID.  The protection engine with
        the specified ID must already be registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: manageProtectionEngine
      parameters:
      - description: The ID of the protection engine to be managed.
        in: path
        name: id
        required: true
        type: string
      - description: The management request.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/ProtectionEngineManagement'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ProtectionEngineManagement'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/ProtectionEngineManagement'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Manage protection engine.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}/proxies:
    get:
      description: 'Retrieves a list of VPE protection engine proxies for the protection
        engine with the specified ID. The protection engine with the specified ID
        must already be registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionEngineProxies
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned available proxies.
          schema:
            $ref: '#/definitions/VPEProxies'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all protection engine proxies.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Adds a VPE proxy to the protection engine with the specified ID.
        The protection engine with the specified ID must already be registered with
        PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: createProtectionEngineProxy
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: Optional fields not required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/VPEProxy'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/VPEProxy'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/VPEProxy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Add protection engine proxy.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}/proxies/{proxyId}:
    delete:
      description: 'Deletes the VPE proxy with a proxyId that is registered to the
        protection engine with the specified ID.  The protection engine with the specified
        ID must already be registered with PowerProtect Data Manager. The VPE proxy
        with the proxyId must also be registered.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: deleteProtectionEngineProxy
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: The proxy ID of the proxy to be removed.
        in: path
        name: proxyId
        required: true
        type: string
      responses:
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/VPEProxy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete protection engine proxy.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    get:
      description: 'Retrieves the VPE proxy with proxyId that is registered to the
        protection engine with the specified ID.  The protection engine with the specified
        ID must already be registered with PowerProtect Data Manager. The VPE proxy
        with the proxyId must also be registered.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionEngineProxy
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: The proxy ID.
        in: path
        name: proxyId
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned VPE proxy resource.
          schema:
            $ref: '#/definitions/VPEProxy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get protection engine proxy.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Update the VPE proxy with proxyId that is registered to the protection
        engine with the specified ID.  The protection engine with the specified ID
        must already be registered with PowerProtect Data Manager. The VPE proxy with
        the proxyId must also be registered.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: updateProtectionEngineProxy
      parameters:
      - description: The ID of the protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: The proxy ID of the proxy to be updated.
        in: path
        name: proxyId
        required: true
        type: string
      - description: All fields required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/VPEProxy'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/VPEProxy'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/VPEProxy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update protection engine proxy configuration.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}/proxies/{proxyId}/redeploy:
    put:
      description: 'Redeploys the VPE proxy with proxyId that is registered to the
        protection engine with the specified ID.  The protection engine with the specified
        ID must already be registered with PowerProtect Data Manager. The VPE proxy
        with the proxyId must also be registered.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: redeployProtectionEngineProxy
      parameters:
      - description: The ID of the protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: The proxy ID of the proxy to be redeployed.
        in: path
        name: proxyId
        required: true
        type: string
      - description: All fields required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/VPEProxy'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/VPEProxy'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/VPEProxy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Redeploy protection engine proxy.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}/proxy-bundles:
    get:
      description: 'Retrieves all protection engine proxy log bundles.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionEngineProxyLogBundles
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned available proxy bundle sessions.
          schema:
            $ref: '#/definitions/VPEProxyLogBundles'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all protection engine proxy log bundles.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Collects protection engine proxy bundles.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: createProtectionEngineProxyBundles
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: Optional fields not required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/VPEProxyLogBundleRequest'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/VPEProxyLogBundle'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/VPEProxyLogBundle'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Collect protection engine proxy bundles.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}/proxy-bundles/{sessionId}:
    delete:
      description: 'Deletes protection engine proxy bundle session.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: deleteProtectionEngineProxyLogBundle
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: The log bundle session ID.
        in: path
        name: sessionId
        required: true
        type: string
      responses:
        '204':
          description: The request was accepted for processing.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete protection engine proxy bundle session.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    get:
      description: 'Retrieves the protection engine proxy bundle session.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionEngineProxyLogBundle
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: The protection engine proxy bundle session ID.
        in: path
        name: sessionId
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned VPE proxy resource.
          schema:
            $ref: '#/definitions/VPEProxy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get protection engine proxy bundle session.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}/proxy-images:
    get:
      description: 'Retrieves all protection engine proxy images.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionEngineProxyImages
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned available proxy OVA files.
          schema:
            $ref: '#/definitions/SWRepoFiles'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all protection engine proxy images.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-engines/{id}/supported-upgrade:
    post:
      description: 'Retrieves protection engine supported upgrade type.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionEngineSupportedUpgrade
      parameters:
      - description: The ID of the protection engine.
        in: path
        name: id
        required: true
        type: string
      - description: The upgrade request.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/SupportedUpgrade'
      responses:
        '200':
          description: The request completed successfully.
          schema:
            $ref: '#/definitions/SupportedUpgrade'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: The request could not be completed due to a conflict with the
            current state of the target resource.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get protection engine supported upgrade type.
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-policies:
    get:
      description: 'Retrieves all protection policies.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getProtectionPolicies
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available protection policies.
          schema:
            $ref: '#/definitions/ProtectionPolicies'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all protection policies.
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a protection policy.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: createProtectionPolicy
      parameters:
      - description: The body contains detailed information about the protection policy
          to create.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ProtectionPolicy'
      responses:
        '201':
          description: Successfully created the protection policy.
          schema:
            $ref: '#/definitions/ProtectionPolicy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a protection policy.
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,export-and-recovery-admin
  /api/v2/protection-policies/{id}:
    delete:
      description: 'Deletes protection policy by ID.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: deleteProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the protection policy.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete protection policy by ID.
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,export-and-recovery-admin
    get:
      description: 'Retrieves a protection policy by ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the protection policy.
          schema:
            $ref: '#/definitions/ProtectionPolicy'
        '204':
          description: The requested protection policy does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a protection policy by ID.
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates protection policy by ID.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: updateProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        type: string
      - description: The body contains detailed information of the protection policy
          to update.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ProtectionPolicy'
      responses:
        '200':
          description: Successfully updated the protection policy.
          schema:
            $ref: '#/definitions/ProtectionPolicy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update protection policy by ID.
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,export-and-recovery-admin
  /api/v2/protection-policies/{id}/asset-assignments:
    get:
      description: 'Retrieves all assets that are protected with the specified protection
        policy ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getAssetsProtectedByPolicy
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned available assets.
          schema:
            $ref: '#/definitions/ProtectionPolicyAssetAssignments'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all assets protected by protection policy ID.
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Assigns the assets to the protection policy with the specified
        protection policy ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: assignAssetsToProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        type: string
      - description: The body contains a list of asset IDs to be assigned to the protection
          policy.
        in: body
        name: body
        required: false
        schema:
          items:
            type: string
          type: array
      responses:
        '204':
          description: Successfully assign the assets.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Assign assets to the protection policy by protection policy ID.
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-policies/{id}/asset-unassignments:
    post:
      description: 'Unassigns protected assets from the specified protection policy
        ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: unassignAssetsFromProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        type: string
      - description: The body contains a list of assets id protected by the protection
          policy.
        in: body
        name: body
        required: false
        schema:
          items:
            type: string
          type: array
      responses:
        '204':
          description: Successfully unassign the assets.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Unassign assets protected from the protection policy by protection
        policy ID.
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/protection-policies/{id}/backups:
    post:
      deprecated: true
      description: 'Trigger All or Selected assets in one protection policy as manual
        backup.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: triggerBackupOnProtectionPolicy
      parameters:
      - description: The protection policy Id.
        in: path
        name: id
        required: true
        type: string
      - description: 'The body contains below configuration options for current manual
          backup session:

          * Backup level

          * Retention time

          * Boolean flag that indicates whether copies created by manual backup should
          be processed by stages (e.g. promotion, replication, cloudtier, etc.) configured
          in the corresponding protection policy.'
        in: body
        name: body
        schema:
          $ref: '#/definitions/ProtectionPolicyBackupRequest'
      responses:
        '204':
          description: Successfully triggered the adhoc backup process.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Trigger manual backup at protection policy level.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/protection-policies/{id}/protections:
    post:
      description: Manually protect assets at the protection policy level.
      operationId: triggerProtectectionOnPolicy
      parameters:
      - description: Protection request body.
        in: body
        name: body
        schema:
          $ref: '#/definitions/ProtectionPolicyAdhocProtectionRequest'
      - description: ID of the protection policy.
        in: path
        name: id
        required: true
        type: string
      responses:
        '202':
          description: The requested is accepted for processing.
          schema:
            $ref: '#/definitions/ProtectionPolicyAdhocProtectionResponse'
      security:
      - BearerAuth: []
      summary: Manually protect assets by policy.
      tags:
      - Asset Management
  /api/v2/protection-rules:
    get:
      description: 'Retrieves all protection rules

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionRules
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available protection rules.
          schema:
            $ref: '#/definitions/ProtectionRules'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all protection rules.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Create a protection rule.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createProtectionRule
      parameters:
      - description: Detailed information for the protection rule to create.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ProtectionRule'
      responses:
        '200':
          description: 'Successful operation. '
          schema:
            $ref: '#/definitions/ProtectionRule'
        '201':
          description: Successfully created the protection rule.
          schema:
            $ref: '#/definitions/ProtectionRule'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a protection rule.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/protection-rules-execution:
    post:
      description: 'Executes protection rules.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: executeProtectionRules
      parameters:
      - description: Detailed information about running dynamic filters.
        in: body
        name: body
        schema:
          $ref: '#/definitions/ProtectionRuleExecution'
      responses:
        '200':
          description: Successfully triggered the protection rules.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Execute protection rules.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/protection-rules/{id}:
    delete:
      description: 'Deletes protection rule by specified ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteProtectionRule
      parameters:
      - description: ID of the protection rule.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully deleted the protection rule.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete protection rule by ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a protection rule by ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionRule
      parameters:
      - description: ID of the protection rule.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the protection rule.
          schema:
            $ref: '#/definitions/ProtectionRule'
        '204':
          description: The requested protection rule does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a protection rule by ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Update protection rule by ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateProtectionRule
      parameters:
      - description: ID of the protection rule.
        in: path
        name: id
        required: true
        type: string
      - description: Detail information of protection rule to be updated.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ProtectionRule'
      responses:
        '200':
          description: Successfully updated the protection rule.
          schema:
            $ref: '#/definitions/ProtectionRule'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update protection rule by ID.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/protection-storage-metrics:
    get:
      description: 'Retrieves aggregation of all protection storage metrics.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getProtectionStorageMetrics
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available protection storage metrics.
          schema:
            $ref: '#/definitions/StorageMetricsStats'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authenticated to perform this  operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: Any server error that prevented the completion of the request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all protection storage metrics.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/recovery-contexts:
    get:
      description: 'Retrieves all recovery contexts.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getRecoveryContexts
      responses:
        '200':
          description: Successfully returned available recovery contexts.
          schema:
            $ref: '#/definitions/RecoveryContexts'
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/RecoveryContexts'
      security:
      - BearerAuth: []
      summary: Get all recovery contexts.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/remote-services-gateway:
    get:
      deprecated: true
      description: 'Retrieves a list of connections to the remote services gateway.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getRemoteServicesGatewayConnections
      produces:
      - application/json
      responses:
        '200':
          description: Successful.
          schema:
            $ref: '#/definitions/DeviceConnections'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
        '503':
          description: Occurs if component state is RESTORE.
      security:
      - BearerAuth: []
      summary: Get the remote services gateway resource.
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      deprecated: true
      description: 'Registers the PowerProtect Data Manager appliance with a remote
        services gateway.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createRemoteServicesGatewayConnection
      parameters:
      - description: Request body containing Device Connection model, including ESRS
          credentials and gateway information.
        in: body
        name: RemoteServicesGateway
        required: false
        schema:
          $ref: '#/definitions/DeviceConnection'
      produces:
      - application/json
      responses:
        '201':
          description: Registered the device with the remote services gateway.
          schema:
            $ref: '#/definitions/CatalogDeviceConnection'
        '400':
          description: The JSON syntax is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operationr.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: A valid license does not exist for the system.
        '422':
          description: Some fields in the request body are not valid or required fields
            are not supplied.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '424':
          description: Failed to contact the remote services backend or an error occurred
            in the remote services backend.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Register a device for telemetry management.
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
  /api/v2/remote-services-gateway/{id}:
    delete:
      deprecated: true
      description: 'Removes appliance registration from the remote services gateway.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteRemoteServicesGatewayConnection
      parameters:
      - description: The UUID of the Remote Services Gateway connection.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '204':
          description: Unregistered and deleted the device from the remote services
            gateway.
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find a remote services connection with the given ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Unregister the device from the ESRS gateway.
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
    get:
      deprecated: true
      description: 'Retrieves list of connections to the remote services gateway.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getRemoteServicesGatewayConnection
      parameters:
      - description: The UUID of the remote services gateway connection.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful and returned the requested resource.
          schema:
            $ref: '#/definitions/DeviceConnection'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find a remote services connection with the given ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
        '503':
          description: Occurs if component state is RESTORE.
      security:
      - BearerAuth: []
      summary: Get the remote services gateway connections.
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    patch:
      deprecated: true
      description: 'Enables or disables automatic download upgrade package.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateRemoteServiceGatewayConnection
      parameters:
      - description: The UUID of the remote services gateway connection.
        in: path
        name: id
        required: true
        type: string
      - description: Only automaticDownloadUpgradePackage field is needed for PATCH.
        in: body
        name: RemoteServicesGateway
        required: false
        schema:
          $ref: '#/definitions/DeviceConnection'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully updated the remote services connection with the
            new gateway address.
          schema:
            $ref: '#/definitions/DeviceConnection'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find a remote services connection with the given ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '422':
          description: Some fields in the request body are not valid or required fields
            are not supplied.
        '424':
          description: Failed to contact the remote services backend or an error occurred
            in the remote services backend.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Patch an updated value of automatic download upgrade package.
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
  /api/v2/remote-upgrade-packages:
    get:
      description: 'Retrieves list of remote upgrade packages from the database.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getRemoteUpgradePackages
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful and returned the requested resource.
          schema:
            $ref: '#/definitions/RemoteUpgradePackages'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: Cannot find a device connection to the ESRS gateway.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '424':
          description: Failed to contact the remote services backend, or an error
            occurred in the remote services backend.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
        '503':
          description: The Telemetry Manager component is in the RESTORE state.
      security:
      - BearerAuth: []
      summary: Get the list of available upgrade packages.
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
  /api/v2/remote-upgrade-packages/{id}/download:
    get:
      description: 'Starts file download for the remote upgrade package of the specified
        ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: downloadRemoteUpgradePackage
      parameters:
      - description: The UUID of the remote services gateway connection.
        in: path
        name: id
        required: true
        type: string
      produces: []
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/RemoteUpgradePackageDownload'
        '202':
          description: Accepted and processing the download request.
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: Occurs if the state of the upgrade package for the given ID
            is DOWNLOADING, DOWNLOADED, IGNORED; the metadata of the file has been
            changed in the remote services backend; or the downloaded package already
            exists on the appliance.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find a device connection to the remote services gateway
            or the upgrade package with the given ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '424':
          description: An error occurred in the ESRS backend, or the file was not
            found in the backend.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
        '503':
          description: The Telemetry Manager component is in the RESTORE state.
      security:
      - BearerAuth: []
      summary: Download the remote upgrade package that is assigned to the product.
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
  /api/v2/remote-upgrade-packages/{id}/download-status:
    get:
      description: 'Retieves the download progress percentage and package transfer
        rate in MBPS.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getRemoteUpgradePackageDownloadProgress
      parameters:
      - description: The UUID of the remote services gateway connection.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful and returned the requested resource.
          schema:
            $ref: '#/definitions/RemoteUpgradePackageDownloadProgress'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The download for the given file ID has not started or the state
            of the upgrade package for the given ID is DOWNLOADED.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find an upgrade package with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '424':
          description: An error occurred in the remote services backend, or the upgrade
            package was deleted from the appliance while the download was in progress.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
        '503':
          description: The Telemetry Manager component is in the RESTORE state.
      security:
      - BearerAuth: []
      summary: Get remote upgrade package download progress.
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
  /api/v2/restored-copies:
    get:
      description: 'Retrieves all restored copies by parameters. The restored copies
        define which copies of an asset are already restored.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getRestoredCopies
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned available restored copies.
          schema:
            $ref: '#/definitions/RestoredCopies'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all restored copies.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a restored copy by request body. The restored copies define
        which copies of an asset already are restored.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: restoreCopy
      parameters:
      - description: The body contains detail information of restored copy to create.
        in: body
        name: body
        schema:
          $ref: '#/definitions/RestoredCopy'
      responses:
        '201':
          description: Successful operation.
          schema:
            $ref: '#/definitions/RestoredCopy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a restored copy.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,export-and-recovery-admin
  /api/v2/restored-copies/{id}:
    get:
      description: 'Retrieves a restored copy by the specified ID. The restored copies
        define which copies of an asset already are restored. Each restored asset
        corresponds to a restored copy.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: getRestoredCopy
      parameters:
      - description: The restored copy ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the requested restored copy.
          schema:
            $ref: '#/definitions/RestoredCopy'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a restored copy by ID.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,export-and-recovery-admin
  /api/v2/restored-copies/{id}/expiration:
    post:
      description: 'Handles the request to extend, by specifying the number of days,
        the expiration time of the Live VM/Instant Access session.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: extendLiveSessionExpiration
      parameters:
      - description: The exported copy resource ID.
        in: path
        name: id
        required: true
        type: string
      - description: 'VmExpirationRequest - Encapsulates the request to extend Live
          VM/Instant Access session expiration object.  Currently used as a REST API
          request object.

          '
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/VmExpirationRequest'
      responses:
        '200':
          description: Successfully extend the expiration time.
          schema:
            $ref: '#/definitions/ManageMountedCopyResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Extend the expiration time of the Live VM/Instant Access session.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/restored-copies/{id}/remove:
    post:
      description: 'Unmounts the NAS datastore and cleans up the VM proxy restore
        session resource.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: unmountAndDeleteRestoreCopy
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Successfully removed NAS datastore and restored session resource.
          schema:
            $ref: '#/definitions/ManageMountedCopyResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Unmount the NAS datastore and clean up the VM proxy restore session
        resource.
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/restored-copies/{id}/vmotion:
    post:
      description: 'vMotions a VM that is deployed as an instant access restore to
        permanent storage. In an instant access restore, the VM is deployed to an
        NFS share that is attached to a specified ESX host, cluster, or resource pool.
        This API call migrates the VM from the temporary NFS share to permanent storage.


        The VM configuration files and VMDK files can be migrated to different datastores.


        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: vmotion
      parameters:
      - description: The restored copy resource ID.
        in: path
        name: id
        required: true
        type: string
      - description: Vmotion parameter configuration object.  This object is used
          is as a REST request body in API /api/v2/restored-copies/{id}/vmotion, which
          requests a vMotion to relocate a VM and its VMDK files from a Data Domain
          to vCenter datastore.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/VmotionVmConfig'
      responses:
        '202':
          description: Successfully Vmotion the VM files.
          schema:
            $ref: '#/definitions/ManageMountedCopyResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Vmotion a VM from an instant-access restore to permanent storage
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/roles:
    get:
      description: 'Retrieves the list of all the assignable system roles and their
        descriptions. This list contains information about the role privileges.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getRoles
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully retrieved the list of roles.
          schema:
            $ref: '#/definitions/Roles'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all roles.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
  /api/v2/roles/{roleId}:
    get:
      description: 'Retrieves a role by ID. The role information contains the role
        description and role privileges. Each local user is assigned a role.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getRole
      parameters:
      - description: Role ID.
        format: string
        in: path
        name: roleId
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the specified role.
          schema:
            $ref: '#/definitions/Role'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The specified role was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get a role.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/search-clusters:
    get:
      description: 'Retrieves the available search clusters.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getSearchClusters
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully returned all search clusters.
          schema:
            $ref: '#/definitions/SearchClusters'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all search clusters.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}:
    get:
      description: 'Retrieves a search cluster by its ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getSearchCluster
      parameters:
      - description: The ID of the search cluster to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the search cluster.
          schema:
            $ref: '#/definitions/SearchCluster'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The search cluster ID does not exist.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get search cluster by ID.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/config:
    put:
      description: 'Updates the search cluster configuration.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateSearchCluster
      parameters:
      - description: The ID of the search cluster to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: All fields required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/SearchClusterConfig'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SearchClusterConfig'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/SearchClusterConfig'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '405':
          description: The requestor is not allowed to perform this operation as it
            is not implemented.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update search cluster configuration.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/log-bundles:
    post:
      description: 'Collects search cluster log bundles.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createSearchClusterLogBundle
      parameters:
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        type: string
      - description: Optional Fields NOT required
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/SearchClusterLogBundle'
      responses:
        '200':
          description: Successful operation.
          schema:
            items:
              $ref: '#/definitions/SearchClusterLogBundle'
            type: array
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/SearchClusterLogBundle'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Collect search cluster log bundles.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/management:
    post:
      description: 'Runs search cluster management request.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: manageSearchCluster
      parameters:
      - description: The ID of the search cluster to be managed.
        in: path
        name: id
        required: true
        type: string
      - description: The management request.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/SearchClusterManagement'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SearchClusterManagement'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/SearchClusterManagement'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Execute management request.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/nodes:
    get:
      description: 'Retrieves all search cluster nodes.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getSearchClusterNodes
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned available nodes.
          schema:
            items:
              $ref: '#/definitions/SearchNode'
            type: array
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all search cluster nodes.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
    post:
      description: 'Deploys a search cluster node.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createSearchClusterNode
      parameters:
      - description: The id of the search cluster
        in: path
        name: id
        required: true
        type: string
      - description: Optional fields not required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/SearchNode'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SearchNode'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/SearchNode'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Deploy a search cluster node.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/nodes/{nodeId}:
    delete:
      description: 'Removes a search cluster node.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteSearchClusterNode
      parameters:
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        type: string
      - description: The ID of the search cluster node to be removed.
        in: path
        name: nodeId
        required: true
        type: string
      responses:
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/SearchNode'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Remove search cluster node.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a search cluster node by its ID.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: getSearchClusterNode
      parameters:
      - description: The ID of the search cluster node.
        in: path
        name: id
        required: true
        type: string
      - description: The ID of the search cluster node.
        in: path
        name: nodeId
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the search cluster node.
          schema:
            $ref: '#/definitions/SearchNode'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get search cluster node by ID.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/nodes/{nodeId}/management:
    post:
      description: 'Manages the search cluster node.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: manageSearchClusterNode
      parameters:
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        type: string
      - description: The ID of the search cluster node to be managed.
        in: path
        name: nodeId
        required: true
        type: string
      - description: All fields required.
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/SearchNodeManagement'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SearchNodeManagement'
        '202':
          description: The request was accepted for processing.
          schema:
            $ref: '#/definitions/SearchNodeManagement'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Manage search cluster node.
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
  /api/v2/server-disaster-recovery-backups:
    get:
      description: 'Retrieves a list of server disaster recovery backups.

        > This endpoint supports execution by the following roles: admin,user


        > This endpoint supports pagination with types: random

        '
      operationId: getServerDrBackups
      parameters:
      - description: The default is false. If it is true, it  returns all backups,
          including failures.
        in: query
        name: full
        type: boolean
      responses:
        '200':
          description: OK. Retrieves a list of server disaster recovery backups.
          schema:
            $ref: '#/definitions/SdrBackups'
        '400':
          description: Bad request
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all server disaster recovery backups.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
      x-ppdm-pagination: random
    post:
      description: 'Creates the server disaster recovery backup.

        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: createServerDrBackup
      parameters:
      - description: Label for backup.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/SdrBackup'
      - description: Name of the component requesting a backup.
        in: query
        name: name
        type: string
      responses:
        '200':
          description: OK. Creates the server disaster recovery backup.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Create server disaster recovery backup.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
  /api/v2/server-disaster-recovery-backups/{id}:
    delete:
      description: 'Deletes the server DR backup based on the specified ID.

        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: deleteServerDrBackup
      parameters:
      - description: Server backup ID sent in request.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Delete server disaster recovery backup by ID.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
    get:
      description: 'Retrieves the server disaster recovery backup by ID.

        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: getServerDrBackup
      parameters:
      - description: Server DR backup ID sent in request.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK. Retrieves the server disaster recovery backup by ID.
          schema:
            $ref: '#/definitions/SdrBackup'
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get server disaster recovery backup by ID.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
    put:
      description: 'Updates the server disaster recovery backup by ID.

        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: updateServerDrBackup
      parameters:
      - description: Server DR backup ID sent in request.
        in: path
        name: id
        required: true
        type: string
      - description: Server DR backup request.
        in: body
        name: SdrBackup
        required: false
        schema:
          $ref: '#/definitions/SdrBackup'
      responses:
        '200':
          description: OK. Updates the server disaster recovery backup by ID.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '404':
          description: Not found.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Update server disaster recovery backup by ID.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
  /api/v2/server-disaster-recovery-configurations:
    get:
      description: 'Retrieves a list of all server disaster recovery configurations.
        The configurations detail includes the repository filesystem (NFS or BoostFS),
        repository host, repository path, DD Boost credential ID, type, and backupsEnabled
        flag. The configuration contains server disaster recovery type which specifying
        data domain system or integrated storage system supports currently in server
        disaster recovery backup.


        GET /api/v2/server-disaster-recovery-configurations produces new output collected
        from the data model, including some of the defined fields that toggle the
        ability for a component to generate backups. The ability to disable a component''s
        backup will be exposed by the UI and the user can optionally change the value.
        A change of the element bound to the enable/disable backup for the specific
        component should trigger a PUT /api/v2/server-disaster-recovery-configurations
        to update the field in the data model, the change should be reflected to the
        ES index_data_component.

        > This endpoint supports execution by the following roles: admin,user


        > This endpoint supports pagination with types: random

        '
      operationId: getServerDrConfigurations
      responses:
        '200':
          description: OK. Retrieves a list of all server disaster recovery configurations.
            The configurations contain unique id, repository host name, repository
            path, type, and backupsEnabled switch.
          schema:
            $ref: '#/definitions/SdrConfiguration'
        '401':
          description: The requestor is not allowed to perform this operation. Errors
            can be like malformed request syntax, invalid request message parameters,
            or deceptive request routing etc.
        '403':
          description: The request is Forbidden. An error response indicates that
            the client's request is formed correctly, but the REST API refuses to
            honor it, i.e. the user does not have the necessary permissions for the
            resource.
        '500':
          description: The internal server error with this response status code whenever
            they execute some request handler code that raises an exception.
      security:
      - BearerAuth: []
      summary: Get all server disaster recovery configurations.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
      x-ppdm-pagination: random
  /api/v2/server-disaster-recovery-configurations/{id}:
    get:
      description: 'Retrieves the server disaster recovery configuration by its ID.

        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: getServerDrConfiguration
      parameters:
      - default: default
        description: If you specify ID as default, you get the integrated Integrated
          Storage configuration.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK. Retrieves the server disaster recovery configuration by
            its ID.
          schema:
            $ref: '#/definitions/SdrConfiguration'
        '204':
          description: No content.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get server disaster recovery configuration by ID.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
    put:
      description: 'Updates the server disaster recovery configuration by its ID.

        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: updateServerDrConfiguration
      parameters:
      - description: Server DR backup ID sent in request.
        in: path
        name: id
        required: true
        type: string
      - description: Server DR configuration request.
        in: body
        name: SdrConfiguration
        required: false
        schema:
          $ref: '#/definitions/SdrConfiguration'
      responses:
        '200':
          description: OK. Updates the server disaster recovery configuration by its
            ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '404':
          description: Not found.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Update server disaster recovery configuration by ID.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
  /api/v2/server-disaster-recovery-hosts:
    get:
      description: 'Retrieves a list of all the server disaster recovery hosts. The
        host info includes id, node id, host name, and version.

        The nodeID is used to prepare the system for recovery. This API provides a
        list of available servers with DR backups, there could be more than one

        > This endpoint supports execution by the following roles: admin,user


        > This endpoint supports pagination with types: random

        '
      operationId: getServerDrHosts
      responses:
        '200':
          description: OK. Retrieves a list of all the server disaster recovery hosts.
            The host info includes id, node id, host name, and version.
          schema:
            properties:
              content:
                description: Server Disaster Recovery backup host info.
                items:
                  $ref: '#/definitions/SdrHost'
                type: array
              page:
                $ref: '#/definitions/PageInfo'
        '400':
          description: The API request is bad. Errors can be like malformed request
            syntax, invalid request message parameters, or deceptive request routing
            etc.
        '401':
          description: The requestor is not allowed to perform this operation. Errors
            can be like malformed request syntax, invalid request message parameters,
            or deceptive request routing etc.
        '403':
          description: The request is Forbidden. An error response indicates that
            the client's request is formed correctly, but the REST API refuses to
            honor it, i.e. the user does not have the necessary permissions for the
            resource.
        '500':
          description: 'OK. Retrieves a list of all the server disaster recovery hosts.
            The host info includes id, node id, host name, and version.

            '
      security:
      - BearerAuth: []
      summary: Get all server disaster recovery hosts.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
      x-ppdm-pagination: random
  /api/v2/server-disaster-recovery-status:
    get:
      description: 'Retrieves the restore server disaster recovery status. The status
        includes action status like starting time, elapsed seconds, state, error,
        and so on.

        The API is used by the UI to poll and check if restore is complete. Once the
        status is not active, the user is redirected to the login page.


        > This endpoint supports execution by the following roles: admin,user

        '
      operationId: getServerDrStatus
      responses:
        '200':
          description: OK. Retrieves the restore server disaster recovery status.
            The status includes action status like starting time, elapsed seconds,
            state, error ...etc.
          schema:
            $ref: '#/definitions/SdrAction'
        '400':
          description: The API request is bad. Errors can be like malformed request
            syntax, invalid request message parameters, or deceptive request routing
            etc.
        '401':
          description: The requestor is not allowed to perform this operation. Errors
            can be like malformed request syntax, invalid request message parameters,
            or deceptive request routing etc.
        '403':
          description: The request is Forbidden. An error response indicates that
            the client's request is formed correctly, but the REST API refuses to
            honor it, i.e. the user does not have the necessary permissions for the
            resource.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request. The internal server error with this response status code whenever
            they execute some request handler code that raises an exception.
          schema:
            $ref: '#/definitions/SdrAction'
      security:
      - BearerAuth: []
      summary: Get status of server disaster recovery restore.
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin,user
  /api/v2/service-level-agreements:
    get:
      description: 'Retrieves all service level agreements. Each service level agreement
        contains mutliple service level objectives. The service level objective defines
        a compliance check item for data protection.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getServiceLevelAgreements
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - default: 'false'
        description: Including summary calculation
        in: query
        name: includingSummary
        type: boolean
      responses:
        '200':
          description: Successfully returned available service level agreements.
          schema:
            $ref: '#/definitions/ServiceLevelAgreements'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all service level agreements.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      description: 'Creates a service level agreement. The service level agreement
        contains mutliple service level objectives. The service level objective defines
        a compliance check item for data protection.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: createServiceLevelAgreement
      parameters:
      - description: Detailed information about the service level agreement to create.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ServiceLevelAgreement'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/ServiceLevelAgreement'
        '201':
          description: Successfully created the service sevel agreement.
          schema:
            $ref: '#/definitions/ServiceLevelAgreement'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a service level agreement.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,export-and-recovery-admin
  /api/v2/service-level-agreements/{id}:
    delete:
      description: 'Deletes a service level agreement by ID. The service level agreement
        contains mutliple service level objectives. The service level objective defines
        a compliance check item for data protection.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteServiceLevelAgreement
      parameters:
      - description: ID of the service level agreement.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the service level agreement.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete service level agreement by ID.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a service level agreement by ID. The service level agreement
        contains mutliple service level objectives. The service level objective defines
        a compliance check item for data protection.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getServiceLevelAgreement
      parameters:
      - description: ID of the service level agreement.
        in: path
        name: id
        required: true
        type: string
      - default: 'false'
        description: Including summary calculation
        in: query
        name: includingSummary
        type: boolean
      responses:
        '200':
          description: Successfully returned the service level agreement.
          schema:
            $ref: '#/definitions/ServiceLevelAgreement'
        '204':
          description: The requested service level agreement does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a service level agreement by ID.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates a service level agreement by ID. The service level agreement
        contains mutliple service level objectives. The service level objective defines
        a compliance check item for data protection.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateServiceLevelAgreement
      parameters:
      - description: ID of the service level agreement.
        in: path
        name: id
        required: true
        type: string
      - description: Detail information of service level agreement to update.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ServiceLevelAgreement'
      responses:
        '200':
          description: Successfully updated the service level agreement.
          schema:
            $ref: '#/definitions/ServiceLevelAgreement'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update service level agreement by ID.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin
  /api/v2/service-level-objectives:
    get:
      description: 'Retrieves all service level objectives. The each service level
        objective defines one compliance type. The compliance type must follow each
        service service level objective that is required.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getServiceLevelObjectives
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned available service level objectives.
          schema:
            $ref: '#/definitions/ServiceLevelObjectives'
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all service level objectives.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/service-level-objectives/{id}:
    get:
      description: 'Retrieves service level objective by ID. The each service level
        objective defines one compliance type. The compliance type must follow each
        service service level objective that is required.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getServiceLevelObjective
      parameters:
      - description: Service level objective ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the service level objective.
          schema:
            $ref: '#/definitions/ServiceLevelObjective'
        '204':
          description: The requested service level objective does not exist.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get service level objective by ID.
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/sla-metrics:
    get:
      consumes:
      - application/json
      description: Get metrics for Service Level Agreements (SLAs).
      operationId: getSlaMetrics
      parameters:
      - $ref: '#/parameters/filter'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully returned SLA compliance metrics.
          schema:
            $ref: '#/definitions/SlaMetrics'
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get SLA metrics.
      tags:
      - Compliance
  /api/v2/smtp:
    get:
      description: 'Retrieves Simple Mail Transfer Protocol (SMTP) configuration.
        Returns the list of SMTP setup in the appliance.

        Returns only one SMTP configuration.

        Returns ID, mailserver, mailFrom, mailRecipient, and port.


        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getSmtps
      produces:
      - application/json
      responses:
        '200':
          description: Located and returned the available SMTP configuration successfully.
          schema:
            $ref: '#/definitions/Smtps'
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all SMTP configuration information.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
    post:
      description: 'Creates the SMTP configuration, which requires mailserver, mailFrom:admin(email),
        and mailRecipient:email.

        The email setup on the PowerProtect Data Manager System Settings area enables
        you to configure SMTP email server information to send emails for resetting
        local user passwords and customized alert notifications.

        Only one SMTP configuration is allowed.


        > This endpoint supports execution by the following roles: admin

        '
      operationId: createSmtp
      parameters:
      - description: Only one SMTP configuration is allowed.
        in: body
        name: Smtp
        required: false
        schema:
          $ref: '#/definitions/Smtp'
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Smtp'
        '201':
          description: Created new SMTP.
        '400':
          description: The submitted SMTP has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: Only one SMTP is allowed.
        '404':
          description: Cannot find a SMTP with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Create SMTP configuration.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
  /api/v2/smtp/test:
    post:
      description: 'Sends a test email.

        Requires mailRecipient and mailserver. Includes mailFrom: email.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: testSmtp
      parameters:
      - description: Send a test email.
        in: body
        name: Smtp
        required: false
        schema:
          $ref: '#/definitions/SmtpTest'
      produces:
      - application/json
      responses:
        '200':
          description: Test email sent successfully.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Send a test email.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
  /api/v2/smtp/{id}:
    delete:
      description: 'Deletes SMTP configuration by ID.

        No email is sent once SMTP configuration is deleted.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteSmtp
      parameters:
      - description: SMTP configuration ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Smtp'
        '204':
          description: Deleted the SMTP with the specified ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a SMTP configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Delete SMTP configuration by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves SMTP configuration by the specified ID.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getSmtp
      parameters:
      - default: Unique identifier for smtp
        description: SMTP configuration ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned the SMTP configuration with the specified
            ID.
          schema:
            $ref: '#/definitions/Smtp'
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find an SMTP configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get SMTP configuration by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
    put:
      description: 'Updates SMTP configuration by ID.

        You can update the mailserver, mailFrom, and mailRecipient.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateSmtp
      parameters:
      - description: SMTP configuration ID sent in request.
        in: path
        name: id
        required: true
        type: string
      - description: Update SMTP configuration.
        in: body
        name: Smtp
        required: false
        schema:
          $ref: '#/definitions/Smtp'
      produces:
      - application/json
      responses:
        '200':
          description: Successfully updated the SMTP configuration.
          schema:
            $ref: '#/definitions/Smtp'
        '400':
          description: The submitted SMTP configuration has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: Cannot change the SMTP configuration in the current node state.
        '404':
          description: Cannot find an SMTP configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Update SMTP configuration by ID.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
  /api/v2/storage-systems:
    get:
      description: 'Retrieves all **Storage Systems** in the PowerProtect Data Manager
        including Data Domain systems, PowerProtect systems, and other local or external
        storage systems.

        **Storage Systems** are used to store the asset data regarding backing up
        or replicating assets.

        This API request belongs to the storage management API.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getStorageSystems
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: The asset type the returned storage systems could support.
        enum:
        - VMAX_STORAGE_GROUP
        - XTREMIO_CONSISTENCY_GROUP
        - VMWARE_VIRTUAL_MACHINE
        - ORACLE_DATABASE
        - MICROSOFT_SQL_DATABASE
        - FILE_SYSTEM
        - KUBERNETES
        - MICROSOFT_EXCHANGE_DATABASE
        - SAP_HANA_DATABASE
        - NAS_SHARE
        in: query
        name: supportedAssetType
        required: false
        type: string
      responses:
        '200':
          description: Successfully returned available storage systems.
          schema:
            $ref: '#/definitions/StorageSystems'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all storage systems.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/storage-systems/{id}:
    get:
      description: 'Retrieves a storage system by ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getStorageSystem
      parameters:
      - description: ID of the storage system.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully returned the storage system.
          schema:
            $ref: '#/definitions/StorageSystem'
        '204':
          description: The requested storage system does not exist.
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get a storage system by ID.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates storage system location by ID.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: updateStorageSystemLocation
      parameters:
      - description: The storage system ID.
        in: path
        name: id
        required: true
        type: string
      - description: Detail informationof storage system to update.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/StorageSystem'
      responses:
        '200':
          description: Successfully updated the storage system.
          schema:
            $ref: '#/definitions/StorageSystem'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update storage system location by ID.
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/timezones:
    get:
      description: 'Retrieves all supported time zones.

        > This endpoint supports execution by the following roles: admin, user, export
        and recovery admin

        '
      operationId: getTimezones
      produces:
      - application/json
      responses:
        '200':
          description: Located and returned the available time zones successfully.
          schema:
            $ref: '#/definitions/Timezones'
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
      security:
      - BearerAuth: []
      summary: Get all supported time zones.
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin, user, export and recovery admin
  /api/v2/token:
    post:
      description: 'Extends the usage period of the user, as specified by the access
        token, by renewing the token. The grant_type in the request body must be refresh_token.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: refreshAccessToken
      parameters:
      - description: Refresh token.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/RefreshAccessTokenRequest'
      - description: Authorization token.
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: Successfully renewed the authorization token (also known as
            access token).
          schema:
            $ref: '#/definitions/AccessToken'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Renew the access token for extended usage period.
      tags:
      - Authentication and Authorization
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
  /api/v2/upgrade-packages:
    get:
      description: 'Retrieves a list of all upgrade packages. This API call checks
        the upgrade history of the system. If the system has been upgraded multiple
        times, the list includes the installed upgrade packages. At any time, only
        one package that has not been installed can exist.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getUpgradePackages
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      produces:
      - application/json
      responses:
        '200':
          description: Located and returned all upgrade packages successfully.
          schema:
            $ref: '#/definitions/UpgradePackages'
        '400':
          description: The filter syntax is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: The default response when error occurs.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get list of all upgrade packages.
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      consumes:
      - multipart/form-data
      description: 'Uploads only one upgrade package at a time. To upload another,
        install or delete the existing upgrade package.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: uploadUpgradePackage
      parameters:
      - description: Upgrade package file to be uploaded.
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        '202':
          description: The create upgrade package request was accepted and is being
            processed.
          schema:
            $ref: '#/definitions/UpgradePackage'
        '400':
          description: The uploaded upgrade package is invalid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: 'The requestor is not authorized to perform this operation.

            '
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: It is not allowed to upload upgrade package in the current
            state.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '422':
          description: Unable to parse the request body.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: The default response when error occurs.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Upload an upgrade package to the appliance.
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/upgrade-packages/{id}:
    delete:
      description: 'Deletes an upgrade package that is not installing nor has been
        installed. Packages in the processing state cannot be deleted.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteUpgradePackage
      parameters:
      - $ref: '#/parameters/upgradePackageId'
      produces:
      - application/json
      responses:
        '204':
          description: The upgrade package is succesfully deleted.
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find an upgrade package with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: The upgrade package cannot be deleted.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: The default response when an error occurs.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete an uploaded upgrade package by its ID.
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the details of an upgrade package by the specified ID,
        including its state, name, installed date, and so on.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getUpgradePackage
      parameters:
      - $ref: '#/parameters/upgradePackageId'
      produces:
      - application/json
      responses:
        '200':
          description: Found and returned the upgrade package with the specified ID.
          schema:
            $ref: '#/definitions/UpgradePackage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find an upgrade package with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: The default response when an error occurs.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get upgrade package by its ID.
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Installs upgrade package only if the state of the upgrade package
        is AVAILABLE or FAILED. To install the upgrade package, set state=INSTALLED
        in the PUT request body.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateUpgradePackage
      parameters:
      - $ref: '#/parameters/upgradePackageId'
      - description: "First get the available upgrade package and then change the\
          \ following properties as below:\n\"state\": \"INSTALLED\",\n\"lockboxPassphrase\"\
          : \"1234567890abcdef\", \n\"upgradeToken\": \"abcdefghijklmn\", \n\"certificateTrustedByUser\"\
          : true\n\nThen use the upgrade package as the request body to trigger the\
          \ upgrade."
        in: body
        name: UpgradePackage
        required: false
        schema:
          $ref: '#/definitions/UpgradePackage'
      - default: 'true'
        description: Use this query parameter to force upgrade the PowerProtect Data
          Manager.
        in: query
        name: forceUpgrade
        type: string
      produces:
      - application/json
      responses:
        '202':
          description: Request accepted and is upgrading with the upgrade package
            of the specified ID.
          schema:
            $ref: '#/definitions/UpgradePackage'
        '400':
          description: The submitted upgrade package has a syntax error.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find an upgrade package with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: The upgrade package with specified ID is not allowed for upgrade
            in the current state.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '412':
          description: Received when sending PUT request without query parameter "forceUpgrade=true".
            The request was failed in validation process.
          schema:
            $ref: '#/definitions/UpgradePackage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: The default response when error occurs.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Install the upgrade package uploaded to the appliance.
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/upgrade-packages/{id}/precheck:
    post:
      description: 'Enables you to precheck an upgrade package by the specified ID.
        The precheck verifies that all components are ready for upgrade.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: precheckUpgradePackage
      parameters:
      - $ref: '#/parameters/upgradePackageId'
      produces:
      - application/json
      responses:
        '200':
          description: Found and return the information of specific package.
          schema:
            $ref: '#/definitions/UpgradePackage'
        '202':
          description: The precheck upgrade package request was accepted and is being
            processed.
          schema:
            $ref: '#/definitions/UpgradePackage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find an upgrade package with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: The precheck upgrade package is not allowed in the current
            state.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: The default response when an error occurs.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Precheck upgrade package by ID.
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/upgrade-packages/{id}/precheck-cancellation:
    post:
      description: 'Cancel the precheck for an upgrade package by specifying its ID.
        Use this API when the upgrade package is stopped in the PROCESSING state.
        When the cancellation completes, the upgrade package state changes to PRECHECK_FAILED.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: cancelPrecheck
      parameters:
      - $ref: '#/parameters/upgradePackageId'
      produces:
      - application/json
      responses:
        '202':
          description: Precheck cancellation request was accepted and is being processed.
          schema:
            $ref: '#/definitions/UpgradePackage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find an upgrade package with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: Upgrade precheck cancellation request is not allowed in the
            current state.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: The default response when an error occurs.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Cancel the precheck.
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/upgrade-packages/{id}/upgrade-cancellation:
    post:
      description: 'Cancel the upgrade for an upgrade package by specifying its ID.
        Use this API when the upgrade package is stopped in the INSTALLED_CORE state.
        When cancellation is complete, the upgrade package state changes to INSTALLED_WITH_ERRORS.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: cancelUpgrade
      parameters:
      - $ref: '#/parameters/upgradePackageId'
      produces:
      - application/json
      responses:
        '202':
          description: Upgrade cancellation request was accepted and is being processed.
          schema:
            $ref: '#/definitions/UpgradePackage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '404':
          description: Cannot find an upgrade package with the specified ID.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '409':
          description: Upgrade cancellation request is not allowed in the current
            state.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: The default response when an error occurs.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Cancel the upgrade.
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/user-groups:
    get:
      description: 'Retrieves all user groups, which are identity source group-to-role
        mappings. These user groups define who has access to the system and the actions
        they can perform based on their role.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getUserGroups
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: Filter the user groups by role ID or role name.
        in: query
        name: role
        type: string
      responses:
        '200':
          description: Successfully retrieved all the user groups.
          schema:
            $ref: '#/definitions/UserGroups'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all user groups.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a user group, which is an identity source group-to-role
        mapping. These user groups define who has access to the system and the actions
        they can perform based on their role.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createUserGroup
      parameters:
      - description: User Group
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/UserGroup'
      responses:
        '201':
          description: Successfully created the user group.
          schema:
            $ref: '#/definitions/UserGroup'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '409':
          description: Conflict.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Create a user group.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
  /api/v2/user-groups/{userGroupId}:
    delete:
      description: 'Deletes a user group by ID. When the user group is deleted, the
        users that are defined by the user group no longer have access to the system
        and can no longer perform actions.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteUserGroup
      parameters:
      - description: User group ID.
        format: string
        in: path
        name: userGroupId
        required: true
        type: string
      responses:
        '204':
          description: Successfully delete the user group.
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The user group was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Delete a user group.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a user group by ID, which is an identity source group-to-role
        mapping. User groups define who has access to the system and the actions they
        can perform based on their role.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getUserGroup
      parameters:
      - description: User group ID.
        format: string
        in: path
        name: userGroupId
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the specified user group.
          schema:
            $ref: '#/definitions/UserGroup'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The user group was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get user group.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates a user group by ID. When the user group is updated, the
        users that are defined by the user group have updated privileges to perform
        actions that are defined by their role.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateUserGroup
      parameters:
      - description: User group ID.
        format: string
        in: path
        name: userGroupId
        required: true
        type: string
      - description: User Group
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/UserGroup'
      responses:
        '200':
          description: Successfully updated the user group.
          schema:
            $ref: '#/definitions/UserGroup'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The user group was not found.
        '409':
          description: Conflict.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Update a user group.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
  /api/v2/users:
    get:
      description: 'Retrieves the list of all local users. The list of user information
        includes user information such as name, username, and roles.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getUsers
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - description: Filters the user by role ID or role name.
        in: query
        name: role
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of users.
          schema:
            $ref: '#/definitions/Users'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all the local system users.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a user. Once the user is created, the user can access
        the system and perform actions that are defined by the user role.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createUser
      parameters:
      - description: User
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/User'
      responses:
        '201':
          description: Successfully created the user.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Create a local system user.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
  /api/v2/users/{userId}:
    delete:
      description: 'Deletes a user by ID. When the user is deleted, the user can no
        longer access the system or perform any actions.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteUser
      parameters:
      - description: User ID.
        format: string
        in: path
        name: userId
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the specified user.
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The user was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Delete a local system user by ID.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the user that is specified by ID. The list of user information
        includes information such as name, username, and roles.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getUser
      parameters:
      - description: User ID.
        format: string
        in: path
        name: userId
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the specified user.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The user was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get a local system user by ID.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    put:
      description: 'Updates a user by ID. When updated, the user information is available.
        If the role changes, the user can perform only those actions that are defined
        by the role.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateUser
      parameters:
      - description: User ID.
        format: string
        in: path
        name: userId
        required: true
        type: string
      - description: User.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/User'
      - description: Logged in user password to modify sensitive data.
        in: header
        name: x-auth-password
        required: true
        type: string
      responses:
        '200':
          description: Successfully updated the user properties.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: The request body is either invalid or is missing the required
            fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the
            action.
        '404':
          description: The user was not found.
        '409':
          description: Conflict.
        '417':
          description: Expectation failed.
        '422':
          description: Unprocessable entity.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
        '503':
          description: The operation is currently unavailable. The system may currently
            be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Update a local system user.
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin
  /api/v2/vm-agent-installation:
    post:
      description: 'Initiates agent installation on selected VM asset.

        > This endpoint supports execution by the following roles: admin,export-and-recovery-admin

        '
      operationId: initiateAgentInstallationOnVm
      parameters:
      - description: Request payload to initiate agent installation on VM.
        in: body
        name: body
        schema:
          $ref: '#/definitions/VmAgentInstallationRequest'
      responses:
        '202':
          description: Successfully triggered the agent installation process on VM.
          schema:
            $ref: '#/definitions/VmAgentInstallationResponse'
        '400':
          description: The request is not valid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '401':
          description: The requestor is not authorized to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '403':
          description: The requestor is not allowed to perform this operation.
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: An unexpected error prevented the server from fulfilling your
            request.
          schema:
            $ref: '#/definitions/ErrorMessage'
      security:
      - BearerAuth: []
      summary: Initiate agent installation on VM asset.
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,export-and-recovery-admin
  /api/v2/whitelist:
    get:
      description: 'Retrieves all whitelist entries. The whitelist defines which hosts
        are either pending, approved, or rejected for application agent registration.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin


        > This endpoint supports pagination with types: random

        '
      operationId: getWhitelists
      parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/pageSize'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      responses:
        '200':
          description: Successfully retrieved the whitelist entries.
          schema:
            $ref: '#/definitions/Whitelists'
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Get all the whitelist entries.
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
      x-ppdm-pagination: random
    post:
      consumes:
      - application/json
      description: 'Creates a whitelist entry. The whitelist defines which hosts are
        either pending, approved, or rejected for application agent registration.
        Approved hosts can be approved for a user-defined period.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: createWhitelist
      parameters:
      - description: Whitelist
        in: body
        name: body
        schema:
          $ref: '#/definitions/Whitelist'
      responses:
        '200':
          description: Successfully retrieved the whitelist entry.
          schema:
            $ref: '#/definitions/Whitelist'
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Create a whitelist entry.
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin
  /api/v2/whitelist/automatic:
    get:
      description: 'Retrieves the automatic whitelist element, if available. If the
        automatic whitelist is not set, HTTP 404 is returned. If the automatic whitelist
        is set, HTTP 200 is returned with the corresponding automatic whitelist element.
        The ID of the automatic whitelist element is always the same.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getAutomaticWhitelist
      parameters: []
      responses:
        '200':
          description: Successfully retrieved the automatic whitelist entry.
          schema:
            $ref: '#/definitions/Whitelist'
        '401':
          description: The authorization token is either invalid or expired.
        '404':
          description: The automatic whitelist entry was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Get automatic whitelist.
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    post:
      consumes:
      - application/json
      description: 'Enables automatic whitelist by creating whitelist entry. IP address
        must be set to 0.0.0.0 and state must be set to AUTOMATIC in the payload.
        The expiresAt property specifies when the automatic whitelist should expire.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: enableAutomaticWhitelist
      parameters:
      - description: Whitelist Automatic
        in: body
        name: body
        schema:
          $ref: '#/definitions/Whitelist'
      responses:
        '201':
          description: Successfully enabled the automatic whitelist feature.
          schema:
            $ref: '#/definitions/Whitelist'
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Enable automatic whitelisting.
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin
  /api/v2/whitelist/{id}:
    delete:
      description: 'Deletes a whitelist entry by the specified ID. The whitelist defines
        which hosts are either pending, approved, or rejected for application agent
        registration.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: deleteWhitelist
      parameters:
      - description: Whitelist ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully deleted the whitelist entry.
        '401':
          description: The authorization token is either invalid or expired.
        '404':
          description: The whitelist entry was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Delete a whitelist entry.
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a whitelist entry by the specified ID. The whitelist
        defines which hosts are either pending, approved, or rejected for application
        agent registration.

        > This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin

        '
      operationId: getWhitelist
      parameters:
      - description: Whitelist ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the whitelist entry.
          schema:
            $ref: '#/definitions/Whitelist'
        '401':
          description: The authorization token is either invalid or expired.
        '404':
          description: The whitelist entry was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Get a whitelist entry.
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin,user,export-and-recovery-admin
    patch:
      consumes:
      - application/json
      description: 'Updates specific properties in the whitelist by the specified
        ID. The whitelist defines which hosts are either pending, approved, or rejected
        for application agent registration.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: patchWhitelist
      parameters:
      - description: Whitelist ID.
        in: path
        name: id
        required: true
        type: string
      - description: Whitelist
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Whitelist'
      responses:
        '200':
          description: Successfully updated the whitelist entry.
          schema:
            $ref: '#/definitions/Whitelist'
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Patch a whitelist entry.
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin
    put:
      consumes:
      - application/json
      description: 'Updates a whitelist entry by the specified ID. The whitelist defines
        which hosts are either pending, approved, or rejected for application agent
        registration.

        > This endpoint supports execution by the following roles: admin

        '
      operationId: updateWhitelist
      parameters:
      - description: Whitelist ID.
        in: path
        name: id
        required: true
        type: string
      - description: Whitelist.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Whitelist'
      responses:
        '200':
          description: Successfully updated the whitelist entry.
          schema:
            $ref: '#/definitions/Whitelist'
        '401':
          description: The authorization token is either invalid or expired.
        '404':
          description: The whitelist entry was not found.
        '500':
          description: An internal server error occurred. Please contact the system
            administrator.
      security:
      - BearerAuth: []
      summary: Update a whitelist entry.
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin
produces:
- application/json
schemes:
- https
securityDefinitions:
  BearerAuth:
    description: "For accessing the API, a valid JWT token must be passed in all the\
      \ queries in the 'Authorization' header with the 'Bearer' HTTP authorization\
      \ schema: \n\n\t'Authorization: Bearer <JWT_token>'"
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
- name: Appliance Management
- name: Application Data Management
- name: Asset Management
- name: Asset Metadata
- name: Authentication and Authorization
- name: Cloud Disaster Recovery
- name: Compliance
- name: Copy Management
- name: Credentials Management
- name: Discovery
- name: File Level Restore
- name: Installation
- name: Inventory Source Management
- name: Kubernetes Data Management
- name: Licenses Management
- name: Location Management
- name: Log Management
- name: Monitoring
- name: Protection Policies
- name: Recovery and Reuse Management
- name: Remote Service
- name: Search Clusters
- name: Secrets Manager
- name: Server Disaster Recovery
- name: Storage Management
- name: Telemetry Setting
- name: Upgrade
- name: User Security Management
- name: Virtual Machine Data Management
- name: Whitelist Management
x-stoplight:
  docs:
    showModels: false
