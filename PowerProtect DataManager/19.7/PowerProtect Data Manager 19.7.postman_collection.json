{
	"info": {
		"_postman_id": "e24fc21f-1010-4add-bb93-758b84b5467b",
		"name": "PowerProtect Data Manager 19.7",
		"description": "PowerProtect Data Manager Public Restful API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api/v2",
			"item": [
				{
					"name": "account",
					"item": [
						{
							"name": "Update user account login credentials.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newPassword\": \"dolor do anim consequat\",\n    \"password\": \"amet fugiat\",\n    \"username\": \"eiusmod ut aute labore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/account/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"change-password"
									]
								},
								"description": "Updates user account login credentials by providing the username, current password, and a new password. Returns the username and masked new password in the response body in JSON format."
							},
							"response": [
								{
									"name": "The provided credentials are invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"dolor do anim consequat\",\n    \"password\": \"amet fugiat\",\n    \"username\": \"eiusmod ut aute labore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully changed the user password.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"dolor do anim consequat\",\n    \"password\": \"amet fugiat\",\n    \"username\": \"eiusmod ut aute labore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"username\": \"minim l\",\n \"password\": \"in elit labore\"\n}"
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"dolor do anim consequat\",\n    \"password\": \"amet fugiat\",\n    \"username\": \"eiusmod ut aute labore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"dolor do anim consequat\",\n    \"password\": \"amet fugiat\",\n    \"username\": \"eiusmod ut aute labore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"dolor do anim consequat\",\n    \"password\": \"amet fugiat\",\n    \"username\": \"eiusmod ut aute labore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unprocessable entity. An error has occurred when trying to change the user password.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"dolor do anim consequat\",\n    \"password\": \"amet fugiat\",\n    \"username\": \"eiusmod ut aute labore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Send an email to reset a user password.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"consectetur dolor consequat\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/account/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"forgot-password"
									]
								},
								"description": "Resets a user password by providing the username. An email is sent to the user email address with a link to reset the token."
							},
							"response": [
								{
									"name": "If the username exists, an email is sent to the user email address.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"consectetur dolor consequat\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unprocessable entity. An error has occurred when trying to send an email to the user.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"consectetur dolor consequat\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"consectetur dolor consequat\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"consectetur dolor consequat\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"consectetur dolor consequat\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reset user password with temporary reset token.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resetToken\": \"fugiat veniam deserunt\",\n    \"newPassword\": \"labore elit nisi\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/account/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"reset-password"
									]
								},
								"description": "Resets the user password with the temporary reset token. The temporary reset token is contained in the email sent to the user email address, after performing an API call to forgot-password."
							},
							"response": [
								{
									"name": "Successfully changed the user password.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"fugiat veniam deserunt\",\n    \"newPassword\": \"labore elit nisi\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"username\": \"eu esse nisi\"\n}"
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"fugiat veniam deserunt\",\n    \"newPassword\": \"labore elit nisi\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"fugiat veniam deserunt\",\n    \"newPassword\": \"labore elit nisi\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unprocessable entity. An error occurred while trying to send an email to the user.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"fugiat veniam deserunt\",\n    \"newPassword\": \"labore elit nisi\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The reset password token is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"fugiat veniam deserunt\",\n    \"newPassword\": \"labore elit nisi\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"fugiat veniam deserunt\",\n    \"newPassword\": \"labore elit nisi\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "activities",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an activity by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the activity resource."
												}
											]
										},
										"description": "Retrieves an activity resource with matching ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "A server error prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"actions\": {\n  \"cancelable\": false,\n  \"retryable\": false\n },\n \"category\": \"DISCOVER\",\n \"classType\": \"TASK\",\n \"createTime\": \"2019-08-12T20:43:23.713Z\",\n \"duration\": 68757,\n \"endTime\": \"2019-08-12T20:44:33.444Z\",\n \"hasChildren\": false,\n \"hasLogs\": false,\n \"id\": \"078ac5f1-f5ef-4e3f-bef2-b93f4ea539b9\",\n \"name\": \"Discovery task for inventory source \\\"ddve117\\\" with level \\\"DataCopies\\\"\",\n \"progress\": 100,\n \"result\": {\n  \"status\": \"OK\",\n  \"summaries\": [\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: none Sub-Type: DATADOMAINSYSTEM  Total Assets: 1  New Assets: 1\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: TARGETVOLUME  Sub-Type: DDVDISKDEVICE  Total Assets: 0  New Assets: 0\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP Sub-Type: DDVDISKPOOL  Total Assets: 0  New Assets: 0\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP Sub-Type: DDVDISKDEVICEGROUP  Total Assets: 0  New Assets: 0\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP Sub-Type: DDMTREE  Total Assets: 39  New Assets: 39\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: DATACOPY Sub-Type: DDSTATICIMAGE  Total Assets: 0  New Assets: 0\"\n  ]\n },\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"startTime\": \"2019-08-12T20:43:24.687Z\",\n \"state\": \"COMPLETED\",\n \"updateTime\": \"2019-08-12T20:44:33.587Z\"\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities/078ac5f1-f5ef-4e3f-bef2-b93f4ea539b\",\n \"reason\": \"A resource with the specified ID is not found.\",\n \"remediation\": \"Check to ensure that the resource id exists.\",\n \"timestamp\": 1565989310577\n}"
										},
										{
											"name": "The requestor is not authenticated.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"path\": \"/api/v2/activities/078ac5f1-f5ef-4e3f-bef2-b93f4ea539b\",\n \"reason\": \"Invalid authentication token: eyJraWQiOiIwOTRkMmM3Yi1mMWRjLTiMGEtYjk3ZS05NThlN2Q0NTBhOGUiLCJhbGciOiJFUzI1NiJ9.eyJqdGkiOiJkNGQyNGU5Yi1iOTk3LTQwMjktODdjNi1iNWQzNjc0ODFjMGYiLCJpc3MiOiJlQ0RNIEFBQSBTZXJ2aWNlIiwiaWF0IjoxNTY1OTg3MjYzLCJleHAiOjE1NjYwMTYwNjMsImV4dCI6eyJzeXN0ZW0iOnsicm9sZSI6WyJBZG1pbiJdfSwiYXVkaXQiOnsidWlkIjoiMDAwMDAwMDAtMDAwMC00MDAwLWEwMDAtMDAwMDAwMDAwMDAwIn19LCJzdWIiOiJhZG1pbiIsImF1dGhvcml6YXRpb24tdG9rZW4tYml0bWFwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJhdXRoZW50aWNhdGVkIjp0cnVlLCJpZCI6IjAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsInVzZXJUeXBlIjoiTE9DQUwiLCJ0aW1lc3RhbXAiOjAsImNyZWF0aW9uVGltZSI6MCwidGVuYW50U2NvcGUiOiIvMDAwMDAwMDAtMDAwMC00MDAwLWIwMDAtMDAwMDAwMDAwMDAwLzAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsImF1dGhvcml0aWVzIjpbeyJ0ZW5hbnRzIjpbIjAwMDAwMDAwLTAwMDAtNDAwMC1iMDAwLTAwMDAwMDAwMDAwMCJdLCJwcml2aWxlZ2VzIjpbIjE3MTc5ODY5MTgzIl0sInJvbGVzIjpbIjJiYzkwMDIwLTc2NzUtMDEzNi0yOWU5LTViYmQzY2U3MjliMCJdfV19LCJydGkiOiJhNDRkNDY5My1lMGMyLTQyZTktOGE1OC0wZmQ2MzA3N2FhNjcifQ.e5nolI8eHtZIkTNqhopP55c5Z7MtSWli-_AqQds0dWiVmTygn3unPAch88Mx_XH3tu1dXC4rlRt7Kb7M5fy6yw\",\n \"remediation\": \"The token is invalid or expired. Login again to receive a new authentication token.\",\n \"timestamp\": 1565989361531\n}"
										},
										{
											"name": "Successfully returned available activity resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"actions\": {\n  \"cancelable\": false,\n  \"retryable\": true\n },\n \"averageBytesTransferred\": 0,\n \"averageDuration\": 0,\n \"category\": \"PROTECT\",\n \"classType\": \"JOB_GROUP\",\n \"createTime\": \"2019-08-12T22:49:13.844Z\",\n \"duration\": 0,\n \"endTime\": \"2019-08-12T22:49:28.797Z\",\n \"hasChildren\": true,\n \"hasLogs\": false,\n \"id\": \"25a77c3e-eb9c-4976-a2f0-aa5caa2472eb\",\n \"initiatedType\": \"SCHEDULED\",\n \"name\": \"test job1565650132347\",\n \"progress\": 100,\n \"result\": {\n  \"status\": \"FAILED\",\n  \"summaries\": []\n },\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"state\": \"COMPLETED\",\n \"stateSummaries\": {\n  \"canceled\": 0,\n  \"completed\": 2,\n  \"criticalEvent\": 2,\n  \"failed\": 2,\n  \"ok\": 0,\n  \"okWithErrors\": 0,\n  \"pendingCancellation\": 0,\n  \"queued\": 0,\n  \"running\": 0,\n  \"total\": 2\n },\n \"updateTime\": \"2019-08-12T22:49:28.803Z\"\n}"
										},
										{
											"name": "The requestor does not have required permissions.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities/f1801d88-aec1-4dac-861d-9a054e19a801\",\n \"reason\": \"User UserRoleUser does not have proper privileges!\",\n \"remediation\": null,\n \"timestamp\": 1566577855868\n}"
										}
									]
								},
								{
									"name": "Cancel a running activity.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the activity resource."
												}
											]
										},
										"description": "Cancels the selected activity with the specified ID. Activities in running or queued state can be canceled.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is accepted and is processing. The activity transitions to Pending Cancellation state before being Canceled. In some cases, the cancel request may be rejected if the activity is close to completion when the request was issued.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"actions\": {\n  \"cancelable\": true,\n  \"retryable\": false\n },\n \"averageBytesTransferred\": 0,\n \"averageDuration\": 0,\n \"category\": \"PROTECT\",\n \"classType\": \"JOB_GROUP\",\n \"createTime\": \"2019-08-12T22:53:40.880Z\",\n \"duration\": 922624959,\n \"hasChildren\": true,\n \"hasLogs\": false,\n \"id\": \"f9d72a46-a0d7-4020-9a35-ce55b3e5b6d3\",\n \"name\": \"test job1565650420862\",\n \"progress\": 68,\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"startTime\": \"2019-08-12T22:53:58.189Z\",\n \"state\": \"PENDING_CANCELLATION\",\n \"stateSummaries\": {\n  \"canceled\": 0,\n  \"completed\": 0,\n  \"criticalEvent\": 0,\n  \"failed\": 0,\n  \"ok\": 0,\n  \"okWithErrors\": 0,\n  \"pendingCancellation\": 1,\n  \"queued\": 0,\n  \"running\": 0,\n  \"total\": 1\n },\n \"updateTime\": \"2019-08-12T22:54:28.214Z\"\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid. Check request body and/or filters.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 400,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities/e7b5442a-03cb-4635-8431-82363d87d89d/cancel\",\n \"reason\": \"This activity and associated jobs cannot be cancelled.\",\n \"remediation\": \"The state of the activity should be RUNNING or QUEUED and cancelable is true.\",\n \"timestamp\": 1566572848970\n}"
										},
										{
											"name": "A server error prevented the completion of the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 500,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities/7d89bca3-2ab2-4cfe-91da-75d6a1a02b23/cancel\",\n \"reason\": null,\n \"remediation\": null,\n \"timestamp\": 1566572970546\n}"
										},
										{
											"name": "The requestor does not have required permissions.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Retry a failed activity.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retryJobIds\": [\n        \"esse\",\n        \"magna non veniam anim est\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities",
												":id",
												"retry"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the activity resource."
												}
											]
										},
										"description": "Retries one or more failed jobs within a job group for the specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid. Check request body and/or filters.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"ea dolore elit et\",\n        \"consequat in veniam proident\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"ea dolore elit et\",\n        \"consequat in veniam proident\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request has been accepted and is processing. A new job is generated when an existing job is retried. The new job replaces the old one under the job group if the retry operation is successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"ea dolore elit et\",\n        \"consequat in veniam proident\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"retryJobsInitiatedCount\": 2,\n \"retryJobsReceivedCount\": 2,\n \"retryResults\": [\n  {\n   \"newJobId\": \"7f7329a9-6961-466f-b381-cfeb6fc86a08\",\n   \"retryJobId\": \"75969f00-872e-4355-9cec-cdab5fad04ab\"\n  },\n  {\n   \"newJobId\": \"d64131c9-6e74-495f-9802-e7c1637d9550\",\n   \"retryJobId\": \"7fc8059c-2aab-4b9e-8436-1d8465f56d99\"\n  }\n ]\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"ea dolore elit et\",\n        \"consequat in veniam proident\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor does not have required permissions.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"ea dolore elit et\",\n        \"consequat in veniam proident\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "A server error prevented the completion of the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"ea dolore elit et\",\n        \"consequat in veniam proident\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all activities.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activities"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua",
											"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
										},
										{
											"key": "q",
											"value": "aute ut id cillum aliqua",
											"description": "A general search text.\nFor example: q=VM_1\nwhere the following fields will be searched for VM_1.\n\nThe following fields are searched:\n\n    name\n    result.summaries\n    result.error.reason\n    result.error.remediation\n    logInfo.logText\n    asset.name\n    asset.type\n    copy.name\n    copy.type\n    dataTarget.name\n    host.name\n    protectionPolicy.name\n    sourceDataTarget.name\n    serviceLevelAgreement.name\n    owner.name\n    lastUpdateTime\n    createdTime or createTime\n"
										}
									]
								},
								"description": "Retrieves a list of all activities.\n> This endpoint supports execution by the following roles: admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "The requestor does not have required permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities\",\n \"reason\": \"User UserRoleUser does not have proper privileges!\",\n \"remediation\": null,\n \"timestamp\": 1566577855868\n}"
								},
								{
									"name": "The requestor is not authenticated.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"path\": \"/api/v2/activities/078ac5f1-f5ef-4e3f-bef2-b93f4ea539b\",\n \"reason\": \"Invalid authentication token: eyJraWQiOiIwOTRkMmM3Yi1mMWRjLTiMGEtYjk3ZS05NThlN2Q0NTBhOGUiLCJhbGciOiJFUzI1NiJ9.eyJqdGkiOiJkNGQyNGU5Yi1iOTk3LTQwMjktODdjNi1iNWQzNjc0ODFjMGYiLCJpc3MiOiJlQ0RNIEFBQSBTZXJ2aWNlIiwiaWF0IjoxNTY1OTg3MjYzLCJleHAiOjE1NjYwMTYwNjMsImV4dCI6eyJzeXN0ZW0iOnsicm9sZSI6WyJBZG1pbiJdfSwiYXVkaXQiOnsidWlkIjoiMDAwMDAwMDAtMDAwMC00MDAwLWEwMDAtMDAwMDAwMDAwMDAwIn19LCJzdWIiOiJhZG1pbiIsImF1dGhvcml6YXRpb24tdG9rZW4tYml0bWFwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJhdXRoZW50aWNhdGVkIjp0cnVlLCJpZCI6IjAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsInVzZXJUeXBlIjoiTE9DQUwiLCJ0aW1lc3RhbXAiOjAsImNyZWF0aW9uVGltZSI6MCwidGVuYW50U2NvcGUiOiIvMDAwMDAwMDAtMDAwMC00MDAwLWIwMDAtMDAwMDAwMDAwMDAwLzAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsImF1dGhvcml0aWVzIjpbeyJ0ZW5hbnRzIjpbIjAwMDAwMDAwLTAwMDAtNDAwMC1iMDAwLTAwMDAwMDAwMDAwMCJdLCJwcml2aWxlZ2VzIjpbIjE3MTc5ODY5MTgzIl0sInJvbGVzIjpbIjJiYzkwMDIwLTc2NzUtMDEzNi0yOWU5LTViYmQzY2U3MjliMCJdfV19LCJydGkiOiJhNDRkNDY5My1lMGMyLTQyZTktOGE1OC0wZmQ2MzA3N2FhNjcifQ.e5nolI8eHtZIkTNqhopP55c5Z7MtSWli-_AqQds0dWiVmTygn3unPAch88Mx_XH3tu1dXC4rlRt7Kb7M5fy6yw\",\n \"remediation\": \"The token is invalid or expired. Login again to receive a new authentication token.\",\n \"timestamp\": 1565989361531\n}"
								},
								{
									"name": "Successfully returned available activity resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"category\": \"DISCOVER\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T20:43:23.713Z\",\n   \"duration\": 68757,\n   \"endTime\": \"2019-08-12T20:44:33.444Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"078ac5f1-f5ef-4e3f-bef2-b93f4ea539b9\",\n   \"name\": \"Discovery task for inventory source \\\"ddve117\\\" with level \\\"DataCopies\\\"\",\n   \"progress\": 100,\n   \"result\": {\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: none Sub-Type: DATADOMAINSYSTEM  Total Assets: 1  New Assets: 1\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: TARGETVOLUME  Sub-Type: DDVDISKDEVICE  Total Assets: 0 New Assets: 0\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDVDISKPOOL  Total Assets: 0  New Assets: 0\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDVDISKDEVICEGROUP  Total Assets: 0 New Assets: 0\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDMTREE  Total Assets: 39  New Assets: 39\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: DATACOPY  Sub-Type: DDSTATICIMAGE  Total Assets: 0  New Assets: 0\"\n    ]\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T20:43:24.687Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T20:44:33.587Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"category\": \"CONFIG\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T21:11:41.135Z\",\n   \"duration\": 3081,\n   \"endTime\": \"2019-08-12T21:11:44.564Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"a8d1647f-efa2-4619-8adc-5997fe7d5aac\",\n   \"name\": \"Data Domain Policy Configuration Task\",\n   \"parentId\": \"2dc41938-e64a-495c-9da5-ace3a3996d59\",\n   \"progress\": 100,\n   \"result\": {\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:41.483Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:11:44.747Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"category\": \"CONFIG\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T21:11:41.135Z\",\n   \"duration\": 3582,\n   \"endTime\": \"2019-08-12T21:11:45.065Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"a0496ad0-0f4c-4cac-820f-bb4ad3993001\",\n   \"name\": \"Data Domain Policy Configuration Task\",\n   \"parentId\": \"40a252d3-4589-4763-952c-91d0699fdbc4\",\n   \"progress\": 100,\n   \"result\": {\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:41.483Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:11:45.229Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"asset\": {\n    \"type\": \"VMWARE_VIRTUAL_MACHINE\"\n   },\n   \"averageBytesTransferred\": 21474836480,\n   \"averageDuration\": 138076.5,\n   \"category\": \"PROTECT\",\n   \"classType\": \"JOB_GROUP\",\n   \"createTime\": \"2019-08-12T21:11:38.889Z\",\n   \"duration\": 209913,\n   \"endTime\": \"2019-08-12T21:15:34.788Z\",\n   \"hasChildren\": true,\n   \"hasLogs\": false,\n   \"id\": \"6fcbbe35-71a3-4545-80fa-745588a068c4\",\n   \"name\": \"Protecting VM - VM Protection Gold\",\n   \"progress\": 100,\n   \"protectionPolicy\": {\n    \"id\": \"9d91b470-a7ff-4a5f-866f-14d91d22a2ab\",\n    \"name\": \"VM Protection Gold\"\n   },\n   \"result\": {\n    \"bytesTransferred\": 42949672960,\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:12:04.875Z\",\n   \"state\": \"COMPLETED\",\n   \"stateSummaries\": {\n    \"canceled\": 0,\n    \"completed\": 2,\n    \"criticalEvent\": 0,\n    \"failed\": 0,\n    \"ok\": 2,\n    \"okWithErrors\": 0,\n    \"pendingCancellation\": 0,\n    \"queued\": 0,\n    \"running\": 0,\n    \"total\": 2\n   },\n   \"updateTime\": \"2019-08-12T21:15:34.887Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"asset\": {\n    \"id\": \"1fb351f1-e892-5562-83a6-bc58b3a071e2\"\n   },\n   \"category\": \"PROTECT\",\n   \"classType\": \"JOB\",\n   \"createTime\": \"2019-08-12T21:11:39.216Z\",\n   \"duration\": 208593,\n   \"endTime\": \"2019-08-12T21:15:09.213Z\",\n   \"hasChildren\": true,\n   \"hasLogs\": false,\n   \"id\": \"e0fc046f-99da-4971-b586-168eb557bdbb\",\n   \"name\": \"Protecting VM - O_JL_CA_VM15\",\n   \"parentId\": \"6fcbbe35-71a3-4545-80fa-745588a068c4\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 42949672960,\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:40.620Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:15:09.451Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"asset\": {\n    \"id\": \"3832069a-be26-52ab-a7cb-e190e0f1bd3d\"\n   },\n   \"category\": \"PROTECT\",\n   \"classType\": \"JOB\",\n   \"createTime\": \"2019-08-12T21:11:39.366Z\",\n   \"duration\": 67560,\n   \"endTime\": \"2019-08-12T21:12:48.213Z\",\n   \"hasChildren\": true,\n   \"hasLogs\": false,\n   \"id\": \"de395e17-7ac5-48bf-a353-25002a53a2a6\",\n   \"name\": \"Protecting VM - R_JL_CA_VM16\",\n   \"parentId\": \"6fcbbe35-71a3-4545-80fa-745588a068c4\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 0,\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:40.653Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:12:48.478Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"category\": \"CONFIG\",\n   \"classType\": \"JOB\",\n   \"createTime\": \"2019-08-12T21:11:39.217Z\",\n   \"duration\": 7660,\n   \"endTime\": \"2019-08-12T21:11:47.256Z\",\n   \"hasChildren\": true,\n   \"hasLogs\": false,\n   \"id\": \"2dc41938-e64a-495c-9da5-ace3a3996d59\",\n   \"name\": \"Perform Policy Configuration\",\n   \"parentId\": \"7faba409-48f4-43e8-8c43-41a06220e283\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 0,\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:39.596Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:11:47.473Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"category\": \"REPLICATE\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T22:00:48.992Z\",\n   \"duration\": 11049,\n   \"endTime\": \"2019-08-12T22:01:00.643Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"59629494-0003-43e1-9510-dd79e38a1049\",\n   \"name\": \"Replicating asset copies\",\n   \"parentId\": \"daf5c737-efb1-4f60-aeee-9d2d9f62e80a\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 189015852,\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"Replicating copies for asset=[O_JL_CA_VM15] on storage-node=[10.7.65.75] with storage-unit=[VM_Protection_Gold-lava253114-R-3bca7]\",\n     \"replication succeeded for copies:\",\n     \"copySetId=7289172f..., subType=VIRTUALMACHINE, backupLevel=FULL dataConsistency=CRASH_CONSISTENT startTime=2019-08-12T21:11:51Z endTime=2019-08-12T21:14:45Z\",\n     \"Total copies succeeded : 1\"\n    ]\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T22:00:49.594Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T22:01:01.160Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"category\": \"REPLICATE\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T22:00:49.026Z\",\n   \"duration\": 7298,\n   \"endTime\": \"2019-08-12T22:00:56.792Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"a4fa5a74-865a-4c44-bc0f-3057b8ea319f\",\n   \"name\": \"Replicating asset copies\",\n   \"parentId\": \"f7947eda-09e9-4b4c-b3c9-c96fc90b05d7\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 91688,\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"Replicating copies for asset=[R_JL_CA_VM16] on storage-node=[10.7.65.75] with storage-unit=[VM_Protection_Gold-lava253114-R-3bca7]\",\n     \"replication succeeded for copies:\",\n     \"copySetId=73cab8f9..., subType=VIRTUALMACHINE, backupLevel=FULL dataConsistency=CRASH_CONSISTENT startTime=2019-08-12T21:11:51Z endTime=2019-08-12T21:12:05Z\",\n     \"Total copies succeeded : 1\"\n    ]\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T22:00:49.494Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T22:00:57.316Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"category\": \"PROTECT\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T22:00:47.442Z\",\n   \"duration\": 15758,\n   \"endTime\": \"2019-08-12T22:01:38.811Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"c61b52c2-7511-430d-b539-27a3241256df\",\n   \"name\": \"Protecting VM - O_JL_CA_VM15 using VM Proxy\",\n   \"parentId\": \"049317cc-a01a-46d0-86f8-d4f927b0ceeb\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 0,\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"Parameters: {\\n  \\\"asset\\\" : \\\"O_JL_CA_VM15\\\",\\n  \\\"backupType\\\" : \\\"FULL\\\",\\n  \\\"dataConsistency\\\" : \\\"CRASH_CONSISTENT\\\",\\n  \\\"plc\\\" : \\\"VM Protection Gold\\\",\\n  \\\"storage\\\" : \\\"lava66117.vdp.emc.com\\\",\\n  \\\"storageUnit\\\" : \\\"VM_Protection_Gold-lava253114-3b5f2\\\",\\n  \\\"taskId\\\" : \\\"c61b52c2-7511-430d-b539-27a3241256df\\\",\\n  \\\"vcenter\\\" : \\\"vc243150\\\"\\n}\\nResult: {\\n  \\\"sessionId\\\" : \\\"efbfc7a0-1aca-4ee4-b8cf-ab7010e9c234\\\",\\n  \\\"state\\\" : \\\"Success\\\",\\n  \\\"description\\\" : \\\"Backup has SUCCEEDED (Moved: 0.00 Bytes in 8s, Overall: 0 MiB/s, R: 0 MiB/s, W: 0 MiB/s).\\\",\\n  \\\"virtualDiskStatus\\\" : [ {\\n    \\\"label\\\" : \\\"Hard disk 1\\\",\\n    \\\"provisionedBytes\\\" : 42949672960,\\n    \\\"usedBytes\\\" : 42949672960,\\n    \\\"preClientCompBytes\\\" : 0,\\n    \\\"postClientCompBytes\\\" : 0,\\n    \\\"secondsTaken\\\" : 0,\\n    \\\"changedBytes\\\" : 0\\n  } ],\\n  \\\"parallelismUsed\\\" : 1,\\n  \\\"backupLevel\\\" : \\\"FULL_SYNTHETIC\\\",\\n  \\\"vmproxyName\\\" : \\\"localhost\\\"\\n}\"\n    ]\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T22:01:23.053Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T22:01:38.821Z\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 10,\n  \"totalElements\": 74,\n  \"totalPages\": 8\n }\n}"
								},
								{
									"name": "The request is not valid. Check request parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 400,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities\",\n \"reason\": \"Invalid data in the request body.\",\n \"remediation\": null,\n \"timestamp\": 1566575988731\n}"
								},
								{
									"name": "A server error prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "alerts",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an alert message by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the alerts resource."
												}
											]
										},
										"description": "Retrieves an alert message with the specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the alert message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"acknowledgement\": {\n  \"acknowledgeBy\": \"SYSTEM\",\n  \"acknowledgeState\": \"ACKNOWLEDGED\",\n  \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n },\n \"category\": \"SYSTEM\",\n \"detailSummaries\": [],\n \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n \"email\": true,\n \"esrs\": false,\n \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n \"jobId\": null,\n \"message\": \"Failed to register extension with vCenter vc243150.\",\n \"messageArgs\": [\n  \"vc243150\"\n ],\n \"messageID\": \"SYS0016\",\n \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n \"severity\": \"WARNING\",\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"supportDetails\": null,\n \"taskId\": null,\n \"userNote\": null,\n \"visibility\": true\n}"
										},
										{
											"name": "The request is not valid. Verify the ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update message acknowledgement or user note by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"vc243150\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"enim est occaecat tempor\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"labore in\",\n        \"updatedTime\": \"1950-03-24T03:57:11.062Z\",\n        \"username\": \"anim fugiat\"\n    },\n    \"visibility\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the alerts resource."
												}
											]
										},
										"description": "Updates acknowledgement object of a message. Adds or updates userNote object of a message.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"vc243150\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"Lorem enim officia est\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"Duis sed deserunt ex\",\n        \"updatedTime\": \"1978-01-25T23:39:06.875Z\",\n        \"username\": \"ullamco occaecat pariatur laboris\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Resource updated.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"vc243150\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"Lorem enim officia est\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"Duis sed deserunt ex\",\n        \"updatedTime\": \"1978-01-25T23:39:06.875Z\",\n        \"username\": \"ullamco occaecat pariatur laboris\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"vc243150\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"Lorem enim officia est\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"Duis sed deserunt ex\",\n        \"updatedTime\": \"1978-01-25T23:39:06.875Z\",\n        \"username\": \"ullamco occaecat pariatur laboris\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"vc243150\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"Lorem enim officia est\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"Duis sed deserunt ex\",\n        \"updatedTime\": \"1978-01-25T23:39:06.875Z\",\n        \"username\": \"ullamco occaecat pariatur laboris\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"vc243150\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"Lorem enim officia est\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"Duis sed deserunt ex\",\n        \"updatedTime\": \"1978-01-25T23:39:06.875Z\",\n        \"username\": \"ullamco occaecat pariatur laboris\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"vc243150\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"Lorem enim officia est\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"Duis sed deserunt ex\",\n        \"updatedTime\": \"1978-01-25T23:39:06.875Z\",\n        \"username\": \"ullamco occaecat pariatur laboris\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update alert acknowledgement by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"lab\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												":id",
												"acknowledgement"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the alerts resource."
												}
											]
										},
										"description": "Updates acknowledgement object of the specified alert.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"lab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"lab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Resource updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"lab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"acknowledgement\": {\n  \"acknowledgeBy\": \"admin\",\n  \"acknowledgeState\": \"ACKNOWLEDGED\",\n  \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n },\n \"id\": \"ef00e0ef-4110-69e4-fc06-4b8b19574d14\"\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"lab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"lab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"lab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all alerts.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alerts"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua",
											"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
										},
										{
											"key": "q",
											"value": "aute ut id cillum aliqua",
											"description": "The general search text. For example q=VM_1"
										}
									]
								},
								"description": "Retrieves a list of alerts.\n> This endpoint supports execution by the following roles: admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid. Check the request parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available alert resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua&q=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "q",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T03:00:15.012Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"982cb2d5-a9fa-4334-be1c-f61dc151af8c\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T02:48:22.494Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T08:01:15.929Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"56e91fdb-09d2-417f-8b89-c033db741f81\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T08:00:00.611Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T13:02:05.898Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"175157c2-7161-4104-a0a6-5b41b8fb6c95\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T13:00:00.466Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T16:00:06.575Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"b5d01531-8934-4d4f-9c39-913c0c16c22d\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T16:00:00.717Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": null,\n    \"acknowledgeState\": \"UNACKNOWLEDGED\",\n    \"acknowledgeTime\": null\n   },\n   \"category\": \"PROTECTION\",\n   \"detailSummaries\": [\n    {\n     \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n     \"taskId\": \"ecfd3a06-f05a-48a8-bbd1-f7a33e51f4b3\"\n    },\n    {\n     \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n     \"taskId\": \"8a023e87-5670-4295-87e3-a1dc4269561e\"\n    }\n   ],\n   \"detailedDescription\": \"Protection job failed for the virtual machine.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"41a9ca55-bf4c-4b02-8149-19dda1326391\",\n   \"jobId\": \"b99575a7-cc2e-47d8-8cf7-e7bb4e5d594b\",\n   \"message\": \"Protection job failed for the virtual machine. Job: Test Job - 1565724716040\",\n   \"messageArgs\": null,\n   \"messageID\": \"ABV0001\",\n   \"postedTime\": \"2019-08-13T19:31:56.716Z\",\n   \"responseAction\": \"Check the Jobs Monitor for details and/or contact the backup administrator.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": null,\n    \"acknowledgeState\": \"UNACKNOWLEDGED\",\n    \"acknowledgeTime\": null\n   },\n   \"category\": \"PROTECTION\",\n   \"detailSummaries\": [\n    {\n     \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n     \"taskId\": \"92026c81-c1e6-4680-8a52-9989211f829a\"\n    },\n    {\n     \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n     \"taskId\": \"64fa31d7-196f-495e-aeb2-15b91125d651\"\n    }\n   ],\n   \"detailedDescription\": \"Protection job failed for the virtual machine.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"cf91e168-f079-4d26-83f2-77b9bd37358a\",\n   \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n   \"message\": \"Protection job failed for the virtual machine. Job: Test Job - 1565724988384\",\n   \"messageArgs\": null,\n   \"messageID\": \"ABV0001\",\n   \"postedTime\": \"2019-08-13T19:36:29.232Z\",\n   \"responseAction\": \"Check the Jobs Monitor for details and/or contact the backup administrator.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": null,\n    \"acknowledgeState\": \"UNACKNOWLEDGED\",\n    \"acknowledgeTime\": null\n   },\n   \"category\": \"PROTECTION\",\n   \"detailSummaries\": [\n    {\n     \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n     \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n    },\n    {\n     \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n     \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n    }\n   ],\n   \"detailedDescription\": \"Protection job failed for the virtual machine.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"361dacc9-b0cc-4bcf-843d-c8d0bcc854e4\",\n   \"jobId\": \"07121854-5a45-4fdb-94df-ed082b1271c5\",\n   \"message\": \"Protection job failed for the virtual machine. Job: Test Job - 1565724740564\",\n   \"messageArgs\": null,\n   \"messageID\": \"ABV0001\",\n   \"postedTime\": \"2019-08-13T19:32:20.931Z\",\n   \"responseAction\": \"Check the Jobs Monitor for details and/or contact the backup administrator.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": null,\n    \"acknowledgeState\": \"UNACKNOWLEDGED\",\n    \"acknowledgeTime\": null\n   },\n   \"category\": \"PROTECTION_POLICY\",\n   \"detailSummaries\": [\n    {\n     \"summary\": \"plcName: Protection Policy configuration failed.\",\n     \"taskId\": \"98284cb0-a549-4b3d-a83c-6d51e945b035\"\n    }\n   ],\n   \"detailedDescription\": \"Protection policy configuration failed.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"32996b51-014e-44b8-93ba-a95076a9412a\",\n   \"jobId\": \"07121854-5a45-4fdb-94df-ed082b1271c5\",\n   \"message\": \"Protection policy configuration failed. Job: Test Job - 1565724740564\",\n   \"messageArgs\": null,\n   \"messageID\": \"CFG0001\",\n   \"postedTime\": \"2019-08-13T19:32:21.069Z\",\n   \"responseAction\": \"\",\n   \"severity\": \"CRITICAL\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 10,\n  \"totalElements\": 95,\n  \"totalPages\": 10\n }\n}"
								}
							]
						},
						{
							"name": "Update message acknowledgements by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"messageIds\": [\n        \"mollit cupidatat ex ad in\",\n        \"pariatur\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": -61478773,\n    \"acknowledgementReceivedCount\": -62209093,\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": 13920271,\n                \"path\": \"dolore Ut ex\",\n                \"reason\": \"eu amet\",\n                \"remediation\": \"ut ex sunt\",\n                \"timestamp\": 573277\n            },\n            \"id\": \"eu Lorem velit aute\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": 70872953,\n                \"path\": \"mollit non exercitation pro\",\n                \"reason\": \"id\",\n                \"remediation\": \"nulla reprehenderit Duis\",\n                \"timestamp\": 8630251\n            },\n            \"id\": \"consequat ipsum\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alerts",
										"acknowledgements"
									]
								},
								"description": "Updates acknowledgement object of bulk messages.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"sunt adipisicing non\",\n        \"occaecat in Excepteur\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": 73663478,\n    \"acknowledgementReceivedCount\": -17484979,\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -93908620,\n                \"path\": \"velit dolor ea\",\n                \"reason\": \"labore culpa ipsum amet\",\n                \"remediation\": \"proident\",\n                \"timestamp\": 66716327\n            },\n            \"id\": \"dolore tempor laborum des\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -2954092,\n                \"path\": \"et Duis\",\n                \"reason\": \"enim incididunt veniam\",\n                \"remediation\": \"Excepteur\",\n                \"timestamp\": -92483145\n            },\n            \"id\": \"nostrud culpa\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"sunt adipisicing non\",\n        \"occaecat in Excepteur\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": 73663478,\n    \"acknowledgementReceivedCount\": -17484979,\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -93908620,\n                \"path\": \"velit dolor ea\",\n                \"reason\": \"labore culpa ipsum amet\",\n                \"remediation\": \"proident\",\n                \"timestamp\": 66716327\n            },\n            \"id\": \"dolore tempor laborum des\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -2954092,\n                \"path\": \"et Duis\",\n                \"reason\": \"enim incididunt veniam\",\n                \"remediation\": \"Excepteur\",\n                \"timestamp\": -92483145\n            },\n            \"id\": \"nostrud culpa\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requested resources is not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"sunt adipisicing non\",\n        \"occaecat in Excepteur\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": 73663478,\n    \"acknowledgementReceivedCount\": -17484979,\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -93908620,\n                \"path\": \"velit dolor ea\",\n                \"reason\": \"labore culpa ipsum amet\",\n                \"remediation\": \"proident\",\n                \"timestamp\": 66716327\n            },\n            \"id\": \"dolore tempor laborum des\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -2954092,\n                \"path\": \"et Duis\",\n                \"reason\": \"enim incididunt veniam\",\n                \"remediation\": \"Excepteur\",\n                \"timestamp\": -92483145\n            },\n            \"id\": \"nostrud culpa\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"sunt adipisicing non\",\n        \"occaecat in Excepteur\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": 73663478,\n    \"acknowledgementReceivedCount\": -17484979,\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -93908620,\n                \"path\": \"velit dolor ea\",\n                \"reason\": \"labore culpa ipsum amet\",\n                \"remediation\": \"proident\",\n                \"timestamp\": 66716327\n            },\n            \"id\": \"dolore tempor laborum des\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -2954092,\n                \"path\": \"et Duis\",\n                \"reason\": \"enim incididunt veniam\",\n                \"remediation\": \"Excepteur\",\n                \"timestamp\": -92483145\n            },\n            \"id\": \"nostrud culpa\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Resources updated.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"sunt adipisicing non\",\n        \"occaecat in Excepteur\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": 73663478,\n    \"acknowledgementReceivedCount\": -17484979,\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -93908620,\n                \"path\": \"velit dolor ea\",\n                \"reason\": \"labore culpa ipsum amet\",\n                \"remediation\": \"proident\",\n                \"timestamp\": 66716327\n            },\n            \"id\": \"dolore tempor laborum des\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -2954092,\n                \"path\": \"et Duis\",\n                \"reason\": \"enim incididunt veniam\",\n                \"remediation\": \"Excepteur\",\n                \"timestamp\": -92483145\n            },\n            \"id\": \"nostrud culpa\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"acknowledgementCount\": 3,\n \"acknowledgementReceivedCount\": 3,\n \"bulkResults\": [\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"admin\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-10-25T20:07:00.616Z\"\n   },\n   \"id\": \"e0b454c7-e146-400e-b3b3-ebac8a99b6a1\"\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"admin\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-10-25T20:07:00.663Z\"\n   },\n   \"id\": \"59ad4787-6377-4e57-bf0a-00e88ca22af1\"\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"admin\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-10-25T20:07:00.678Z\"\n   },\n   \"id\": \"1f3aa6eb-b765-44f6-899f-f3503c44e52d\"\n  }\n ]\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"sunt adipisicing non\",\n        \"occaecat in Excepteur\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": 73663478,\n    \"acknowledgementReceivedCount\": -17484979,\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -93908620,\n                \"path\": \"velit dolor ea\",\n                \"reason\": \"labore culpa ipsum amet\",\n                \"remediation\": \"proident\",\n                \"timestamp\": 66716327\n            },\n            \"id\": \"dolore tempor laborum des\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": -2954092,\n                \"path\": \"et Duis\",\n                \"reason\": \"enim incididunt veniam\",\n                \"remediation\": \"Excepteur\",\n                \"timestamp\": -92483145\n            },\n            \"id\": \"nostrud culpa\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "assets",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an asset by its ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The asset ID."
												}
											]
										},
										"description": "Retrieves an asset by its ID. Use this API request to get detailed information about the asset.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the asset.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"incididunt cillum ad minim\",\n \"type\": \"FILE_SYSTEM\",\n \"details\": {\n  \"database\": {\n   \"appServerId\": \"consequat\",\n   \"appServerName\": \"nostrud nisi mollit adipisicing\",\n   \"appVersion\": \"irure mollit\",\n   \"asm\": \"eu velit dolor\",\n   \"clusterName\": \"do anim\",\n   \"clusterType\": \"laboris cillum consequat anim\",\n   \"dbId\": \"nulla Lorem veniam\",\n   \"lastBackup\": \"1982-06-16T17:57:32.362Z\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"protectionType\": \"pariatur aliquip\",\n   \"sid\": \"laboris occaecat ea qui\"\n  },\n  \"fileSystem\": {\n   \"fileSystemType\": \"mollit tempor in\",\n   \"guid\": \"mollit cillum voluptate consectetur sed\",\n   \"hostName\": \"officia Excepteur nostrud dolore\",\n   \"hostOS\": \"in sint do consequat\",\n   \"lastBackup\": \"1956-02-22T13:16:12.256Z\",\n   \"protectionType\": \"in reprehenderit\"\n  },\n  \"k8s\": {\n   \"externalCreatedAt\": \"nostrud Excepteur fugiat cillum\",\n   \"inventorySourceId\": \"sint ut eu reprehenderit Lorem\",\n   \"inventorySourceName\": \"nisi adipisicing quis anim elit\",\n   \"lastBackup\": \"1970-08-07T02:18:48.668Z\",\n   \"namespace\": \"aliquip ut enim\",\n   \"persistentVolumeClaim\": {\n    \"accessModes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"excluded\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"storageClassName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"volumeMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"volumeName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"size\": 31889930,\n   \"subType\": \"cupidatat nostrud in consequat enim\",\n   \"uid\": \"dolore est tempor reprehenderit\"\n  },\n  \"nasShare\": {\n   \"fileSystemName\": \"aliqua adipisicing\",\n   \"nasServer\": {\n    \"addresses\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"name\": \"sed ea cupidatat eiusmod\"\n   },\n   \"protocol\": \"NFS\"\n  },\n  \"vm\": {\n   \"clusterName\": \"irure est\",\n   \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n   \"datacenter\": \"consectetur commodo Duis nulla\",\n   \"datastore\": [\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"datastoreName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"datastoreName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"disks\": [\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"eagerlyScrub\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"excluded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"sizeInBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"thinProvisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"usedBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"eagerlyScrub\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"excluded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"sizeInBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"thinProvisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"usedBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"dnsName\": \"in amet\",\n   \"esxName\": \"ut eiusmod laborum enim\",\n   \"externalId\": \"nostrud et in velit\",\n   \"folder\": \"minim consequat irure\",\n   \"guestOS\": \"minim consequat\",\n   \"hostMoref\": \"si\",\n   \"hostName\": \"sint officia\",\n   \"inventoryPath\": \"mollit\",\n   \"inventorySourceId\": \"laborum in proident\",\n   \"inventorySourceName\": \"consectetur\",\n   \"primaryIpAddress\": \"dolor proident minim\",\n   \"protectedApplication\": \"MSSQL\",\n   \"resourcePool\": \"amet minim commodo sint\",\n   \"vApp\": \"id voluptate \",\n   \"vcenterName\": \"consequat proident elit\",\n   \"vmBiosUuid\": \"ulla\",\n   \"vmMoref\": \"elit id aliqua dolor\"\n  },\n  \"vmaxStorageGroup\": {\n   \"configuration\": {\n    \"backupDevice\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backupStorage\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restoreDevice\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restoreStorage\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"coordinatingHostId\": \"ut esse veniam Excepteur\",\n   \"coordinatingHostname\": \"velit adipisicing nulla\"\n  }\n },\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"enim\",\n   \"name\": \"in aliqua esse veni\",\n   \"protectionEngine\": \"amet in sed qui occaecat\",\n   \"type\": \"enim qui\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"reprehenderit consectetur su\",\n   \"name\": \"in aliquip in minim fugiat\",\n   \"protectionEngine\": \"qui adipisicing cupidatat ut\",\n   \"type\": \"consectetur quis e\"\n  },\n  \"storageSystem\": {\n   \"id\": \"magna mollit irure\",\n   \"name\": \"est aliquip\"\n  }\n },\n \"assetGroupId\": \"pariatur ut id ea\",\n \"backupDetails\": [\n  {\n   \"backupType\": \"LOG\",\n   \"parallelism\": -20982885\n  },\n  {\n   \"backupType\": \"INCREMENTAL\",\n   \"parallelism\": 76453345\n  }\n ],\n \"createdAt\": \"1986-10-31T23:07:15.184Z\",\n \"credentialId\": \"velit mollit non laboris\",\n \"credentials\": [\n  {\n   \"extraInfo\": [\n    {\n     \"name\": \"eu in eiusmod nulla\",\n     \"value\": \"deserunt\"\n    },\n    {\n     \"name\": \"Duis magna\",\n     \"value\": \"ex ut occaecat\"\n    }\n   ],\n   \"id\": \"sint proident ullamco mollit\",\n   \"type\": \"eu cillum aliquip\"\n  },\n  {\n   \"extraInfo\": [\n    {\n     \"name\": \"adipisicing irure aliqua\",\n     \"value\": \"proident nisi reprehenderit dolore\"\n    },\n    {\n     \"name\": \"eu ut \",\n     \"value\": \"amet qui in culpa\"\n    }\n   ],\n   \"id\": \"elit ea laboris\",\n   \"type\": \"aute ut\"\n  }\n ],\n \"dataTargetIds\": [\n  \"sed eu des\",\n  \"in in eiusmod dolor\"\n ],\n \"deleted\": false,\n \"filterIds\": [\n  \"amet non mollit sint\",\n  \"Lorem aliquip dolor\"\n ],\n \"id\": \"nostrud dolor fugiat non et\",\n \"lastAvailableCopyTime\": \"1957-07-09T21:37:32.272Z\",\n \"networkLabel\": \"consectetur sed\",\n \"protectable\": true,\n \"protectionCapacity\": {\n  \"size\": -2820233,\n  \"time\": \"2012-07-25T04:42:09.092Z\"\n },\n \"protectionLifeCycleId\": \"et est sunt\",\n \"protectionPolicy\": {\n  \"id\": \"tempor nulla qui cillum\",\n  \"name\": \"Excepteur\",\n  \"protectionEngine\": \"cupidatat ullamco velit id\",\n  \"type\": \"do culpa\"\n },\n \"protectionPolicyId\": \"sed nulla tempor do\",\n \"ruleId\": \"nisi officia exercitation\",\n \"ruleName\": \"laborum Excepteur\",\n \"size\": -67025441,\n \"updatedAt\": \"1970-06-01T11:14:33.615Z\",\n \"userTags\": [\n  \"laborum quis\",\n  \"elit id deserunt consequat proident\"\n ],\n \"vmMoref\": \"cillum Excepteur aute exercitation eiusmod\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested asset does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set disks excluded status of an asset.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": false,\n                    \"key\": 30167446,\n                    \"name\": \"labore\"\n                },\n                {\n                    \"excluded\": true,\n                    \"key\": 51179494,\n                    \"name\": \"Lorem eu sunt magna\"\n                }\n            ]\n        }\n    },\n    \"id\": \"nostrud Duis consectetur est cu\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The asset ID."
												}
											]
										},
										"description": "Sends patch request to set the VM disk excluded status to true or false. Each patch request sets only one asset by the specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": false,\n                    \"key\": -23164413,\n                    \"name\": \"in et labore\"\n                },\n                {\n                    \"excluded\": false,\n                    \"key\": -55897129,\n                    \"name\": \"labore pariatur sint\"\n                }\n            ]\n        }\n    },\n    \"id\": \"magna ipsum in\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The response shows the asset that includes the updated excluded disk status.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": false,\n                    \"key\": -23164413,\n                    \"name\": \"in et labore\"\n                },\n                {\n                    \"excluded\": false,\n                    \"key\": -55897129,\n                    \"name\": \"labore pariatur sint\"\n                }\n            ]\n        }\n    },\n    \"id\": \"magna ipsum in\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"incididunt cillum ad minim\",\n \"type\": \"FILE_SYSTEM\",\n \"details\": {\n  \"database\": {\n   \"appServerId\": \"consequat\",\n   \"appServerName\": \"nostrud nisi mollit adipisicing\",\n   \"appVersion\": \"irure mollit\",\n   \"asm\": \"eu velit dolor\",\n   \"clusterName\": \"do anim\",\n   \"clusterType\": \"laboris cillum consequat anim\",\n   \"dbId\": \"nulla Lorem veniam\",\n   \"lastBackup\": \"1982-06-16T17:57:32.362Z\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"protectionType\": \"pariatur aliquip\",\n   \"sid\": \"laboris occaecat ea qui\"\n  },\n  \"fileSystem\": {\n   \"fileSystemType\": \"mollit tempor in\",\n   \"guid\": \"mollit cillum voluptate consectetur sed\",\n   \"hostName\": \"officia Excepteur nostrud dolore\",\n   \"hostOS\": \"in sint do consequat\",\n   \"lastBackup\": \"1956-02-22T13:16:12.256Z\",\n   \"protectionType\": \"in reprehenderit\"\n  },\n  \"k8s\": {\n   \"externalCreatedAt\": \"nostrud Excepteur fugiat cillum\",\n   \"inventorySourceId\": \"sint ut eu reprehenderit Lorem\",\n   \"inventorySourceName\": \"nisi adipisicing quis anim elit\",\n   \"lastBackup\": \"1970-08-07T02:18:48.668Z\",\n   \"namespace\": \"aliquip ut enim\",\n   \"persistentVolumeClaim\": {\n    \"accessModes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"excluded\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"storageClassName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"volumeMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"volumeName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"size\": 31889930,\n   \"subType\": \"cupidatat nostrud in consequat enim\",\n   \"uid\": \"dolore est tempor reprehenderit\"\n  },\n  \"nasShare\": {\n   \"fileSystemName\": \"aliqua adipisicing\",\n   \"nasServer\": {\n    \"addresses\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"name\": \"sed ea cupidatat eiusmod\"\n   },\n   \"protocol\": \"NFS\"\n  },\n  \"vm\": {\n   \"clusterName\": \"irure est\",\n   \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n   \"datacenter\": \"consectetur commodo Duis nulla\",\n   \"datastore\": [\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"datastoreName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"datastoreName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"disks\": [\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"eagerlyScrub\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"excluded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"sizeInBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"thinProvisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"usedBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"eagerlyScrub\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"excluded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"sizeInBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"thinProvisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"usedBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"dnsName\": \"in amet\",\n   \"esxName\": \"ut eiusmod laborum enim\",\n   \"externalId\": \"nostrud et in velit\",\n   \"folder\": \"minim consequat irure\",\n   \"guestOS\": \"minim consequat\",\n   \"hostMoref\": \"si\",\n   \"hostName\": \"sint officia\",\n   \"inventoryPath\": \"mollit\",\n   \"inventorySourceId\": \"laborum in proident\",\n   \"inventorySourceName\": \"consectetur\",\n   \"primaryIpAddress\": \"dolor proident minim\",\n   \"protectedApplication\": \"MSSQL\",\n   \"resourcePool\": \"amet minim commodo sint\",\n   \"vApp\": \"id voluptate \",\n   \"vcenterName\": \"consequat proident elit\",\n   \"vmBiosUuid\": \"ulla\",\n   \"vmMoref\": \"elit id aliqua dolor\"\n  },\n  \"vmaxStorageGroup\": {\n   \"configuration\": {\n    \"backupDevice\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backupStorage\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restoreDevice\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restoreStorage\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"coordinatingHostId\": \"ut esse veniam Excepteur\",\n   \"coordinatingHostname\": \"velit adipisicing nulla\"\n  }\n },\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"enim\",\n   \"name\": \"in aliqua esse veni\",\n   \"protectionEngine\": \"amet in sed qui occaecat\",\n   \"type\": \"enim qui\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"reprehenderit consectetur su\",\n   \"name\": \"in aliquip in minim fugiat\",\n   \"protectionEngine\": \"qui adipisicing cupidatat ut\",\n   \"type\": \"consectetur quis e\"\n  },\n  \"storageSystem\": {\n   \"id\": \"magna mollit irure\",\n   \"name\": \"est aliquip\"\n  }\n },\n \"assetGroupId\": \"pariatur ut id ea\",\n \"backupDetails\": [\n  {\n   \"backupType\": \"LOG\",\n   \"parallelism\": -20982885\n  },\n  {\n   \"backupType\": \"INCREMENTAL\",\n   \"parallelism\": 76453345\n  }\n ],\n \"createdAt\": \"1986-10-31T23:07:15.184Z\",\n \"credentialId\": \"velit mollit non laboris\",\n \"credentials\": [\n  {\n   \"extraInfo\": [\n    {\n     \"name\": \"eu in eiusmod nulla\",\n     \"value\": \"deserunt\"\n    },\n    {\n     \"name\": \"Duis magna\",\n     \"value\": \"ex ut occaecat\"\n    }\n   ],\n   \"id\": \"sint proident ullamco mollit\",\n   \"type\": \"eu cillum aliquip\"\n  },\n  {\n   \"extraInfo\": [\n    {\n     \"name\": \"adipisicing irure aliqua\",\n     \"value\": \"proident nisi reprehenderit dolore\"\n    },\n    {\n     \"name\": \"eu ut \",\n     \"value\": \"amet qui in culpa\"\n    }\n   ],\n   \"id\": \"elit ea laboris\",\n   \"type\": \"aute ut\"\n  }\n ],\n \"dataTargetIds\": [\n  \"sed eu des\",\n  \"in in eiusmod dolor\"\n ],\n \"deleted\": false,\n \"filterIds\": [\n  \"amet non mollit sint\",\n  \"Lorem aliquip dolor\"\n ],\n \"id\": \"nostrud dolor fugiat non et\",\n \"lastAvailableCopyTime\": \"1957-07-09T21:37:32.272Z\",\n \"networkLabel\": \"consectetur sed\",\n \"protectable\": true,\n \"protectionCapacity\": {\n  \"size\": -2820233,\n  \"time\": \"2012-07-25T04:42:09.092Z\"\n },\n \"protectionLifeCycleId\": \"et est sunt\",\n \"protectionPolicy\": {\n  \"id\": \"tempor nulla qui cillum\",\n  \"name\": \"Excepteur\",\n  \"protectionEngine\": \"cupidatat ullamco velit id\",\n  \"type\": \"do culpa\"\n },\n \"protectionPolicyId\": \"sed nulla tempor do\",\n \"ruleId\": \"nisi officia exercitation\",\n \"ruleName\": \"laborum Excepteur\",\n \"size\": -67025441,\n \"updatedAt\": \"1970-06-01T11:14:33.615Z\",\n \"userTags\": [\n  \"laborum quis\",\n  \"elit id deserunt consequat proident\"\n ],\n \"vmMoref\": \"cillum Excepteur aute exercitation eiusmod\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": false,\n                    \"key\": -23164413,\n                    \"name\": \"in et labore\"\n                },\n                {\n                    \"excluded\": false,\n                    \"key\": -55897129,\n                    \"name\": \"labore pariatur sint\"\n                }\n            ]\n        }\n    },\n    \"id\": \"magna ipsum in\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": false,\n                    \"key\": -23164413,\n                    \"name\": \"in et labore\"\n                },\n                {\n                    \"excluded\": false,\n                    \"key\": -55897129,\n                    \"name\": \"labore pariatur sint\"\n                }\n            ]\n        }\n    },\n    \"id\": \"magna ipsum in\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": false,\n                    \"key\": -23164413,\n                    \"name\": \"in et labore\"\n                },\n                {\n                    \"excluded\": false,\n                    \"key\": -55897129,\n                    \"name\": \"labore pariatur sint\"\n                }\n            ]\n        }\n    },\n    \"id\": \"magna ipsum in\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update asset credential ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"nostrud nisi\",\n    \"type\": \"ORACLE_DATABASE\",\n    \"credentialId\": \"dolore commodo ea Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The asset ID."
												}
											]
										},
										"description": "Updates the only credential ID of the specified asset. \n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"nostrud nisi\",\n    \"type\": \"ORACLE_DATABASE\",\n    \"credentialId\": \"dolore commodo ea Ut\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"nostrud nisi\",\n    \"type\": \"ORACLE_DATABASE\",\n    \"credentialId\": \"dolore commodo ea Ut\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"nostrud nisi\",\n    \"type\": \"ORACLE_DATABASE\",\n    \"credentialId\": \"dolore commodo ea Ut\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the asset.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"nostrud nisi\",\n    \"type\": \"ORACLE_DATABASE\",\n    \"credentialId\": \"dolore commodo ea Ut\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"incididunt cillum ad minim\",\n \"type\": \"FILE_SYSTEM\",\n \"details\": {\n  \"database\": {\n   \"appServerId\": \"consequat\",\n   \"appServerName\": \"nostrud nisi mollit adipisicing\",\n   \"appVersion\": \"irure mollit\",\n   \"asm\": \"eu velit dolor\",\n   \"clusterName\": \"do anim\",\n   \"clusterType\": \"laboris cillum consequat anim\",\n   \"dbId\": \"nulla Lorem veniam\",\n   \"lastBackup\": \"1982-06-16T17:57:32.362Z\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"protectionType\": \"pariatur aliquip\",\n   \"sid\": \"laboris occaecat ea qui\"\n  },\n  \"fileSystem\": {\n   \"fileSystemType\": \"mollit tempor in\",\n   \"guid\": \"mollit cillum voluptate consectetur sed\",\n   \"hostName\": \"officia Excepteur nostrud dolore\",\n   \"hostOS\": \"in sint do consequat\",\n   \"lastBackup\": \"1956-02-22T13:16:12.256Z\",\n   \"protectionType\": \"in reprehenderit\"\n  },\n  \"k8s\": {\n   \"externalCreatedAt\": \"nostrud Excepteur fugiat cillum\",\n   \"inventorySourceId\": \"sint ut eu reprehenderit Lorem\",\n   \"inventorySourceName\": \"nisi adipisicing quis anim elit\",\n   \"lastBackup\": \"1970-08-07T02:18:48.668Z\",\n   \"namespace\": \"aliquip ut enim\",\n   \"persistentVolumeClaim\": {\n    \"accessModes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"excluded\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"storageClassName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"volumeMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"volumeName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"size\": 31889930,\n   \"subType\": \"cupidatat nostrud in consequat enim\",\n   \"uid\": \"dolore est tempor reprehenderit\"\n  },\n  \"nasShare\": {\n   \"fileSystemName\": \"aliqua adipisicing\",\n   \"nasServer\": {\n    \"addresses\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"name\": \"sed ea cupidatat eiusmod\"\n   },\n   \"protocol\": \"NFS\"\n  },\n  \"vm\": {\n   \"clusterName\": \"irure est\",\n   \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n   \"datacenter\": \"consectetur commodo Duis nulla\",\n   \"datastore\": [\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"datastoreName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"datastoreName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"disks\": [\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"eagerlyScrub\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"excluded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"sizeInBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"thinProvisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"usedBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"eagerlyScrub\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"excluded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"sizeInBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"thinProvisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"usedBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"dnsName\": \"in amet\",\n   \"esxName\": \"ut eiusmod laborum enim\",\n   \"externalId\": \"nostrud et in velit\",\n   \"folder\": \"minim consequat irure\",\n   \"guestOS\": \"minim consequat\",\n   \"hostMoref\": \"si\",\n   \"hostName\": \"sint officia\",\n   \"inventoryPath\": \"mollit\",\n   \"inventorySourceId\": \"laborum in proident\",\n   \"inventorySourceName\": \"consectetur\",\n   \"primaryIpAddress\": \"dolor proident minim\",\n   \"protectedApplication\": \"MSSQL\",\n   \"resourcePool\": \"amet minim commodo sint\",\n   \"vApp\": \"id voluptate \",\n   \"vcenterName\": \"consequat proident elit\",\n   \"vmBiosUuid\": \"ulla\",\n   \"vmMoref\": \"elit id aliqua dolor\"\n  },\n  \"vmaxStorageGroup\": {\n   \"configuration\": {\n    \"backupDevice\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backupStorage\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restoreDevice\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restoreStorage\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"coordinatingHostId\": \"ut esse veniam Excepteur\",\n   \"coordinatingHostname\": \"velit adipisicing nulla\"\n  }\n },\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"enim\",\n   \"name\": \"in aliqua esse veni\",\n   \"protectionEngine\": \"amet in sed qui occaecat\",\n   \"type\": \"enim qui\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"reprehenderit consectetur su\",\n   \"name\": \"in aliquip in minim fugiat\",\n   \"protectionEngine\": \"qui adipisicing cupidatat ut\",\n   \"type\": \"consectetur quis e\"\n  },\n  \"storageSystem\": {\n   \"id\": \"magna mollit irure\",\n   \"name\": \"est aliquip\"\n  }\n },\n \"assetGroupId\": \"pariatur ut id ea\",\n \"backupDetails\": [\n  {\n   \"backupType\": \"LOG\",\n   \"parallelism\": -20982885\n  },\n  {\n   \"backupType\": \"INCREMENTAL\",\n   \"parallelism\": 76453345\n  }\n ],\n \"createdAt\": \"1986-10-31T23:07:15.184Z\",\n \"credentialId\": \"velit mollit non laboris\",\n \"credentials\": [\n  {\n   \"extraInfo\": [\n    {\n     \"name\": \"eu in eiusmod nulla\",\n     \"value\": \"deserunt\"\n    },\n    {\n     \"name\": \"Duis magna\",\n     \"value\": \"ex ut occaecat\"\n    }\n   ],\n   \"id\": \"sint proident ullamco mollit\",\n   \"type\": \"eu cillum aliquip\"\n  },\n  {\n   \"extraInfo\": [\n    {\n     \"name\": \"adipisicing irure aliqua\",\n     \"value\": \"proident nisi reprehenderit dolore\"\n    },\n    {\n     \"name\": \"eu ut \",\n     \"value\": \"amet qui in culpa\"\n    }\n   ],\n   \"id\": \"elit ea laboris\",\n   \"type\": \"aute ut\"\n  }\n ],\n \"dataTargetIds\": [\n  \"sed eu des\",\n  \"in in eiusmod dolor\"\n ],\n \"deleted\": false,\n \"filterIds\": [\n  \"amet non mollit sint\",\n  \"Lorem aliquip dolor\"\n ],\n \"id\": \"nostrud dolor fugiat non et\",\n \"lastAvailableCopyTime\": \"1957-07-09T21:37:32.272Z\",\n \"networkLabel\": \"consectetur sed\",\n \"protectable\": true,\n \"protectionCapacity\": {\n  \"size\": -2820233,\n  \"time\": \"2012-07-25T04:42:09.092Z\"\n },\n \"protectionLifeCycleId\": \"et est sunt\",\n \"protectionPolicy\": {\n  \"id\": \"tempor nulla qui cillum\",\n  \"name\": \"Excepteur\",\n  \"protectionEngine\": \"cupidatat ullamco velit id\",\n  \"type\": \"do culpa\"\n },\n \"protectionPolicyId\": \"sed nulla tempor do\",\n \"ruleId\": \"nisi officia exercitation\",\n \"ruleName\": \"laborum Excepteur\",\n \"size\": -67025441,\n \"updatedAt\": \"1970-06-01T11:14:33.615Z\",\n \"userTags\": [\n  \"laborum quis\",\n  \"elit id deserunt consequat proident\"\n ],\n \"vmMoref\": \"cillum Excepteur aute exercitation eiusmod\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"nostrud nisi\",\n    \"type\": \"ORACLE_DATABASE\",\n    \"credentialId\": \"dolore commodo ea Ut\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get all copies by asset ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id",
												"copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "pageSize",
													"value": "100",
													"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua",
													"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua",
													"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The asset ID."
												}
											]
										},
										"description": "Retrieves all copies of the asset by the specified asset ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned available copies.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": [\n  {\n   \"adhocBackup\": true,\n   \"assetId\": \"id dolore voluptate\",\n   \"backupTransactionId\": \"proident magna sit non nostrud\",\n   \"baseCopyId\": \"voluptate velit sed reprehenderit\",\n   \"copyConsistency\": \"CRASH_CONSISTENT\",\n   \"copyType\": \"UNKNOWN\",\n   \"createTime\": \"1975-03-10T19:12:52.463Z\",\n   \"dataTargetIds\": [\n    \"labore minim ad\",\n    \"Lorem\"\n   ],\n   \"details\": {\n    \"k8sBackup\": {\n     \"backupId\": \"tempor am\",\n     \"persistentVolumeClaims\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    \"mssqlBackup\": {\n     \"protectionFlowEngine\": \"VMDIRECT\"\n    },\n    \"nasBackup\": {\n     \"directoryCount\": \"proident amet aliqua minim irure\",\n     \"fileCount\": \"anim voluptate\",\n     \"snapshotMetadata\": {\n      \"id\": \"Duis sit minim sint\",\n      \"name\": \"et cupidatat sed deserunt\",\n      \"path\": \"incididunt veniam do proident ipsum\",\n      \"pathId\": \"proident Lorem consequat et\"\n     }\n    },\n    \"vmBackup\": {\n     \"dataMoverType\": \"SDM\"\n    }\n   },\n   \"endTime\": \"1975-08-31T11:28:54.600Z\",\n   \"exportedCopyCount\": 87250498,\n   \"externalId\": \"velit ipsu\",\n   \"id\": \"Lorem adipisicing ea ut\",\n   \"location\": \"CLOUD\",\n   \"logCount\": \"proident cupidatat\",\n   \"metadataIndexingStatus\": \"PARTIAL_SUCCESS\",\n   \"partialCopy\": true,\n   \"partialCopyDescription\": \"consectetur Lorem nostrud labore\",\n   \"protectionCreated\": false,\n   \"protectionPolicy\": {\n    \"id\": \"commodo laboris ipsum ut\",\n    \"stages\": [\n     {\n      \"id\": \"officia voluptate\",\n      \"ownedTime\": \"1969-03-28T05:21:09.498Z\",\n      \"type\": \"PROTECTION\"\n     },\n     {\n      \"id\": \"anim aliqua exercitation esse ad\",\n      \"ownedTime\": \"1999-02-24T12:00:28.293Z\",\n      \"type\": \"OTHERS\"\n     }\n    ]\n   },\n   \"replicatedCopy\": false,\n   \"restoreTargetCompatibilities\": [\n    {\n     \"compatibilityFailureReason\": \"culpa mollit consectetur id\",\n     \"targetName\": \"ex reprehenderit veniam proident occaecat\",\n     \"type\": \"UNKNOWN\"\n    },\n    {\n     \"compatibilityFailureReason\": \"pariatur amet officia\",\n     \"targetName\": \"adipisicing ea\",\n     \"type\": \"INCOMPATIBLE\"\n    }\n   ],\n   \"retentionLock\": \"PARTIAL_COPIES_LOCKED\",\n   \"retentionTime\": \"2019-02-21T08:50:37.436Z\",\n   \"retierTime\": \"2004-08-16T08:14:21.660Z\",\n   \"size\": -6434839,\n   \"startTime\": \"2011-03-08T23:40:50.539Z\",\n   \"state\": \"DELETED\",\n   \"storageSystemId\": \"in\",\n   \"validationResult\": {\n    \"status\": \"non quis aute\",\n    \"time\": \"1999-12-24T06:13:23.902Z\"\n   }\n  },\n  {\n   \"adhocBackup\": false,\n   \"assetId\": \"laboris sit\",\n   \"backupTransactionId\": \"eiusmod voluptate\",\n   \"baseCopyId\": \"dolor\",\n   \"copyConsistency\": \"CRASH_CONSISTENT\",\n   \"copyType\": \"CUMULATIVE_INCR\",\n   \"createTime\": \"1954-01-06T05:45:39.323Z\",\n   \"dataTargetIds\": [\n    \"irure Excepteur labore\",\n    \"in Excepteur anim\"\n   ],\n   \"details\": {\n    \"k8sBackup\": {\n     \"backupId\": \"Duis magna consequat\",\n     \"persistentVolumeClaims\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    \"mssqlBackup\": {\n     \"protectionFlowEngine\": \"APPDIRECT\"\n    },\n    \"nasBackup\": {\n     \"directoryCount\": \"magna pariatur\",\n     \"fileCount\": \"Lorem eu sint labore\",\n     \"snapshotMetadata\": {\n      \"id\": \"aliquip tempor pariatur\",\n      \"name\": \"occaecat esse\",\n      \"path\": \"consectetur laborum nostrud voluptate in\",\n      \"pathId\": \"quis ut tempor mollit\"\n     }\n    },\n    \"vmBackup\": {\n     \"dataMoverType\": \"SDM\"\n    }\n   },\n   \"endTime\": \"1942-09-08T03:46:48.698Z\",\n   \"exportedCopyCount\": 2549932,\n   \"externalId\": \"dolor irure occaecat\",\n   \"id\": \"mollit\",\n   \"location\": \"CLOUD\",\n   \"logCount\": \"in nostrud Ut\",\n   \"metadataIndexingStatus\": \"PARTIAL_SUCCESS\",\n   \"partialCopy\": true,\n   \"partialCopyDescription\": \"occaecat velit e\",\n   \"protectionCreated\": false,\n   \"protectionPolicy\": {\n    \"id\": \"laborum enim sed sunt reprehenderit\",\n    \"stages\": [\n     {\n      \"id\": \"dolor minim\",\n      \"ownedTime\": \"1999-08-20T12:45:15.235Z\",\n      \"type\": \"PRIMARY\"\n     },\n     {\n      \"id\": \"L\",\n      \"ownedTime\": \"1962-10-20T13:40:03.862Z\",\n      \"type\": \"ALL\"\n     }\n    ]\n   },\n   \"replicatedCopy\": true,\n   \"restoreTargetCompatibilities\": [\n    {\n     \"compatibilityFailureReason\": \"ad est ut\",\n     \"targetName\": \"quis sint dolore nostrud Excepteur\",\n     \"type\": \"COMPATIBLE\"\n    },\n    {\n     \"compatibilityFailureReason\": \"ad elit ut reprehenderit ipsum\",\n     \"targetName\": \"consectetur sunt\",\n     \"type\": \"COMPATIBLE\"\n    }\n   ],\n   \"retentionLock\": \"PARTIAL_COPIES_LOCKED\",\n   \"retentionTime\": \"1953-12-28T05:07:09.209Z\",\n   \"retierTime\": \"1979-03-11T19:38:25.186Z\",\n   \"size\": 18345527,\n   \"startTime\": \"1952-03-21T06:35:58.184Z\",\n   \"state\": \"DELETING\",\n   \"storageSystemId\": \"quis enim officia sed\",\n   \"validationResult\": {\n    \"status\": \"culpa laboris\",\n    \"time\": \"1951-06-23T23:50:37.639Z\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": 5759862,\n  \"queryState\": \"culpa\",\n  \"size\": -4703723,\n  \"totalElements\": -60251570,\n  \"totalPages\": -28391074\n }\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get copy map for an asset.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id",
												"copy-map"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the asset."
												}
											]
										},
										"description": "Retrieves copy map of the specified asset.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned available copy map.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"assetType\": \"KUBERNETES\",\n \"details\": {\n  \"database\": {\n   \"appServerId\": \"aute Ut voluptate incididunt sint\",\n   \"appServerName\": \"labore ex nisi pariatur\",\n   \"appVersion\": \"deserunt\",\n   \"asm\": \"adipisicing cillum aliquip nos\",\n   \"clusterName\": \"ad quis Excepteur\",\n   \"clusterType\": \"aute nostrud reprehenderit labore\",\n   \"dbId\": \"culpa consectetur minim consequat non\",\n   \"lastBackup\": \"1993-06-06T07:52:00.144Z\",\n   \"protectionEngineFlow\": \"APPDIRECT\",\n   \"protectionType\": \"occaecat ut consectetur\",\n   \"sid\": \"Lorem dolore sint\"\n  },\n  \"fileSystem\": {\n   \"fileSystemType\": \"id Ut consectetur ut\",\n   \"guid\": \"ipsum est do nostrud\",\n   \"hostName\": \"labore sunt\",\n   \"hostOS\": \"est nulla\",\n   \"lastBackup\": \"1998-02-21T03:12:57.368Z\",\n   \"protectionType\": \"dolore et magna\"\n  },\n  \"k8s\": {\n   \"externalCreatedAt\": \"laboris\",\n   \"inventorySourceId\": \"sunt laborum aute\",\n   \"inventorySourceName\": \"magna nulla ut irure\",\n   \"lastBackup\": \"1971-10-04T22:24:52.099Z\",\n   \"namespace\": \"pariatur qui Ut ea\",\n   \"persistentVolumeClaim\": {\n    \"accessModes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"excluded\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"storageClassName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"volumeMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"volumeName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"size\": 63586080,\n   \"subType\": \"fugiat eiusmod\",\n   \"uid\": \"elit veniam\"\n  },\n  \"nasShare\": {\n   \"fileSystemName\": \"nulla in mollit\",\n   \"nasServer\": {\n    \"addresses\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"name\": \"occaecat laboris mollit\"\n   },\n   \"protocol\": \"NFS\"\n  },\n  \"vm\": {\n   \"clusterName\": \"et veniam velit\",\n   \"dataMoverType\": \"VADP\",\n   \"datacenter\": \"id ex Excepteur eiusmod irure\",\n   \"datastore\": [\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"datastoreName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"datastoreName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"disks\": [\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"eagerlyScrub\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"excluded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"sizeInBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"thinProvisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"usedBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"datastoreMoref\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"eagerlyScrub\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"excluded\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"sizeInBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"thinProvisioned\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"usedBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"dnsName\": \"anim\",\n   \"esxName\": \"ad incididunt\",\n   \"externalId\": \"culpa laboris exercitation pariatur of\",\n   \"folder\": \"ut dolor non Lorem\",\n   \"guestOS\": \"fugiat Lorem est incididunt\",\n   \"hostMoref\": \"sit ea do voluptate\",\n   \"hostName\": \"nulla Ut nisi\",\n   \"inventoryPath\": \"sunt culpa ex\",\n   \"inventorySourceId\": \"dolor officia in\",\n   \"inventorySourceName\": \"dolor amet voluptate deserunt commodo\",\n   \"primaryIpAddress\": \"adipisicing ipsu\",\n   \"protectedApplication\": \"ORACLE\",\n   \"resourcePool\": \"et pariatur dolore ad\",\n   \"vApp\": \"et mollit reprehenderit\",\n   \"vcenterName\": \"commodo\",\n   \"vmBiosUuid\": \"nisi nulla eiusmod mollit consectetur\",\n   \"vmMoref\": \"labore\"\n  },\n  \"vmaxStorageGroup\": {\n   \"configuration\": {\n    \"backupDevice\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backupStorage\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restoreDevice\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restoreStorage\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"coordinatingHostId\": \"consectetur do aute\",\n   \"coordinatingHostname\": \"amet nostrud consectetur Lorem\"\n  }\n },\n \"id\": \"laborum sint eiusmod ut\",\n \"name\": \"anim irure\",\n \"nodeId\": \"aute do aliqua culpa\",\n \"storageLocations\": [\n  {\n   \"capacityBytes\": \"labo\",\n   \"id\": \"do dolor o\",\n   \"location\": \"Duis mollit ullamco cillum laborum\",\n   \"name\": \"dolor laborum laboris ullamco\",\n   \"nodeId\": \"nisi\",\n   \"quotaBytes\": \"sunt nos\",\n   \"quotaRemainingBytes\": \"veniam exercitation\",\n   \"replication\": false,\n   \"replicationLocations\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n    }\n   ],\n   \"storageSystemType\": \"XTREMIO_STORAGE_SYSTEM\",\n   \"totalCopyCount\": \"mollit enim velit eu\",\n   \"totalSizeBytes\": \"dolore eu\",\n   \"usedBytes\": \"Excepteur id\"\n  },\n  {\n   \"capacityBytes\": \"sint sed Except\",\n   \"id\": \"aute ad mollit\",\n   \"location\": \"tempor proident qui pariatur\",\n   \"name\": \"consequat\",\n   \"nodeId\": \"in tempor aute qui\",\n   \"quotaBytes\": \"occaecat adipisicing\",\n   \"quotaRemainingBytes\": \"in\",\n   \"replication\": true,\n   \"replicationLocations\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n    }\n   ],\n   \"storageSystemType\": \"POWER_PROTECT_SYSTEM\",\n   \"totalCopyCount\": \"occaecat\",\n   \"totalSizeBytes\": \"non incididunt do aliqua velit\",\n   \"usedBytes\": \"sit irure e\"\n  }\n ],\n \"storageSystemName\": \"nostrud occaecat officia\",\n \"totalCopyCount\": \"nisi culpa\",\n \"totalSizeBytes\": \"sunt anim deserunt\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get files and folders within a protected asset.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id",
												"file-instances"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "pageSize",
													"value": "100",
													"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua",
													"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua",
													"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
												},
												{
													"key": "copyStartDate",
													"value": "1952-11-04T20:26:32.559Z",
													"description": "The start date from which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be greater or equal to a particular copy start date."
												},
												{
													"key": "copyEndDate",
													"value": "1952-11-04T20:26:32.559Z",
													"description": "The end date up to which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be less or equal to a particular copy end date."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the protected asset."
												}
											]
										},
										"description": "Retrieves a paginated list of documents that represent files and folders within the specified asset. A number of query parameters can be used to customize the ordering, pagination, and filtering of the result. By default, a list of 10 objects is returned.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the array of files and folders within the specified asset.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "copyStartDate",
															"value": "1952-11-04T20:26:32.559Z"
														},
														{
															"key": "copyEndDate",
															"value": "1952-11-04T20:26:32.559Z"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": [\n  {\n   \"assetId\": \"157765f3-65f9-5b74-8e2b-deba621eb371\",\n   \"assetName\": \"WIN750-13\",\n   \"backupType\": \"Windows VM\",\n   \"copyEndDate\": \"2007-02-18T11:02:41.621Z\",\n   \"copyStartDate\": \"2007-02-18T11:02:41.621Z\",\n   \"createdAt\": \"2007-02-18T11:02:41.621Z\",\n   \"id\": \"cdbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"itemType\": \"file\",\n   \"location\": \"C:/Users/Joe Smith/My Documents\",\n   \"name\": \"MyDocument.pdf\",\n   \"protectionPolicyId\": \"ddbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"size\": 1024,\n   \"sourceServer\": \"src-vso.brsvirtdev.asl.lab.emc.com\",\n   \"type\": \"pdf\",\n   \"updatedAt\": \"2007-02-18T11:02:41.621Z\"\n  },\n  {\n   \"assetId\": \"157765f3-65f9-5b74-8e2b-deba621eb371\",\n   \"assetName\": \"WIN750-13\",\n   \"backupType\": \"Windows VM\",\n   \"copyEndDate\": \"2007-02-18T11:02:41.621Z\",\n   \"copyStartDate\": \"2007-02-18T11:02:41.621Z\",\n   \"createdAt\": \"2007-02-18T11:02:41.621Z\",\n   \"id\": \"e3fca052-8a07-11e9-bc42-526af7764f64\",\n   \"itemType\": \"folder\",\n   \"location\": \"C:/Users/Joe Smith\",\n   \"name\": \"Documents\",\n   \"protectionPolicyId\": \"ddbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"size\": 0,\n   \"sourceServer\": \"src-vso.brsvirtdev.asl.lab.emc.com\",\n   \"type\": \"folder\",\n   \"updatedAt\": \"2007-02-18T11:02:41.621Z\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 10,\n  \"totalElements\": 2,\n  \"totalPages\": 1\n }\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "copyStartDate",
															"value": "1952-11-04T20:26:32.559Z"
														},
														{
															"key": "copyEndDate",
															"value": "1952-11-04T20:26:32.559Z"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "copyStartDate",
															"value": "1952-11-04T20:26:32.559Z"
														},
														{
															"key": "copyEndDate",
															"value": "1952-11-04T20:26:32.559Z"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "copyStartDate",
															"value": "1952-11-04T20:26:32.559Z"
														},
														{
															"key": "copyEndDate",
															"value": "1952-11-04T20:26:32.559Z"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Server error prevented the successful completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "copyStartDate",
															"value": "1952-11-04T20:26:32.559Z"
														},
														{
															"key": "copyEndDate",
															"value": "1952-11-04T20:26:32.559Z"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all assets.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"assets"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all assets that PowerProtect Data Manager manages.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is too large to be retrieved.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Requested Range Not Satisfiable",
									"code": 416,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available asset.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"ea ut et proident\",\n   \"type\": \"VMWARE_VIRTUAL_MACHINE\",\n   \"details\": {\n    \"database\": {\n     \"appServerId\": \"incididunt eu Excepte\",\n     \"appServerName\": \"ea velit i\",\n     \"appVersion\": \"non tempor mollit quis\",\n     \"asm\": \"Lorem laboris cupidatat\",\n     \"clusterName\": \"sint\",\n     \"clusterType\": \"ut adipisicing\",\n     \"dbId\": \"voluptate officia\",\n     \"lastBackup\": \"1973-05-31T17:04:36.197Z\",\n     \"protectionEngineFlow\": \"APPDIRECT\",\n     \"protectionType\": \"dolor dolore deserunt qui\",\n     \"sid\": \"deserunt laboris enim dolore pariatur\"\n    },\n    \"fileSystem\": {\n     \"fileSystemType\": \"voluptate labore\",\n     \"guid\": \"in veniam\",\n     \"hostName\": \"occaecat\",\n     \"hostOS\": \"cillum ex eiusmod\",\n     \"lastBackup\": \"1968-09-28T22:26:40.183Z\",\n     \"protectionType\": \"laboris tempor laborum cupidatat\"\n    },\n    \"k8s\": {\n     \"externalCreatedAt\": \"exercitation pariatur laboris eiusmod nulla\",\n     \"inventorySourceId\": \"fugiat\",\n     \"inventorySourceName\": \"qui\",\n     \"lastBackup\": \"2011-08-06T16:20:37.670Z\",\n     \"namespace\": \"in sit non ut\",\n     \"persistentVolumeClaim\": {\n      \"accessModes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"excluded\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"storageClassName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"volumeMode\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"volumeName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"size\": 60405285,\n     \"subType\": \"Lor\",\n     \"uid\": \"commodo ut\"\n    },\n    \"nasShare\": {\n     \"fileSystemName\": \"et dolore ullamco est\",\n     \"nasServer\": {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"name\": \"veniam officia\"\n     },\n     \"protocol\": \"NFS\"\n    },\n    \"vm\": {\n     \"clusterName\": \"ut ipsum\",\n     \"dataMoverType\": \"VADP\",\n     \"datacenter\": \"adipisicing pariatur elit\",\n     \"datastore\": [\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"datastoreName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"datastoreName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"disks\": [\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"eagerlyScrub\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"excluded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sizeInBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"thinProvisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"usedBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"eagerlyScrub\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"excluded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sizeInBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"thinProvisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"usedBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"dnsName\": \"eiusmod sit in co\",\n     \"esxName\": \"pariatur\",\n     \"externalId\": \"enim aliqua nisi velit\",\n     \"folder\": \"quis officia\",\n     \"guestOS\": \"incididunt Lorem proident exercitation\",\n     \"hostMoref\": \"elit voluptate ea dolor veniam\",\n     \"hostName\": \"velit in dolore ipsum\",\n     \"inventoryPath\": \"voluptate dolore laborum in nulla\",\n     \"inventorySourceId\": \"exercitation ea consequat ipsum\",\n     \"inventorySourceName\": \"Excepteur aliqua in ea amet\",\n     \"primaryIpAddress\": \"officia aliqua elit\",\n     \"protectedApplication\": \"ORACLE\",\n     \"resourcePool\": \"sunt do\",\n     \"vApp\": \"culpa\",\n     \"vcenterName\": \"incididunt ea ut culpa\",\n     \"vmBiosUuid\": \"non minim occaecat\",\n     \"vmMoref\": \"labore consectetur\"\n    },\n    \"vmaxStorageGroup\": {\n     \"configuration\": {\n      \"backupDevice\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"backupStorage\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"restoreDevice\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"restoreStorage\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"coordinatingHostId\": \"nisi cillum ea\",\n     \"coordinatingHostname\": \"Ut pariatur eiusm\"\n    }\n   },\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"eiusmod nisi dolor ea aliqua\",\n     \"name\": \"in aliquip dolore\",\n     \"protectionEngine\": \"consequat amet ad\",\n     \"type\": \"deserunt aliqua esse\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"Excepteur id cillum\",\n     \"name\": \"minim sunt incididunt\",\n     \"protectionEngine\": \"officia fugiat labore sint\",\n     \"type\": \"et qui sunt\"\n    },\n    \"storageSystem\": {\n     \"id\": \"dolore culpa ullamco\",\n     \"name\": \"in consequat\"\n    }\n   },\n   \"assetGroupId\": \"dolor do laboris dolore\",\n   \"backupDetails\": [\n    {\n     \"backupType\": \"LOG\",\n     \"parallelism\": 44677538\n    },\n    {\n     \"backupType\": \"INCREMENTAL\",\n     \"parallelism\": -17984437\n    }\n   ],\n   \"createdAt\": \"1941-04-22T22:45:04.557Z\",\n   \"credentialId\": \"in\",\n   \"credentials\": [\n    {\n     \"extraInfo\": [\n      {\n       \"name\": \"deserunt pariatur ipsum consectetur tempor\",\n       \"value\": \"occaecat aliqua reprehenderit Ut\"\n      },\n      {\n       \"name\": \"aliqua aliquip\",\n       \"value\": \"culpa in dolor dolore velit\"\n      }\n     ],\n     \"id\": \"magna fugiat non in\",\n     \"type\": \"est eu ut nostrud\"\n    },\n    {\n     \"extraInfo\": [\n      {\n       \"name\": \"occaecat\",\n       \"value\": \"adipisicing ullamco laborum Excepteur velit\"\n      },\n      {\n       \"name\": \"ex exercitation adipisicing\",\n       \"value\": \"occaecat minim amet anim\"\n      }\n     ],\n     \"id\": \"eu tempor\",\n     \"type\": \"sunt occaecat quis\"\n    }\n   ],\n   \"dataTargetIds\": [\n    \"Excepteur quis in amet\",\n    \"exercitation incididun\"\n   ],\n   \"deleted\": false,\n   \"filterIds\": [\n    \"Lo\",\n    \"magna labore anim id temp\"\n   ],\n   \"id\": \"adipisicing laborum occaecat\",\n   \"lastAvailableCopyTime\": \"1984-07-10T09:20:59.715Z\",\n   \"networkLabel\": \"deserunt ad dolor sint\",\n   \"protectable\": true,\n   \"protectionCapacity\": {\n    \"size\": 99694034,\n    \"time\": \"1999-04-05T06:42:04.483Z\"\n   },\n   \"protectionLifeCycleId\": \"aliquip sint dolor\",\n   \"protectionPolicy\": {\n    \"id\": \"nostrud\",\n    \"name\": \"sint\",\n    \"protectionEngine\": \"eu\",\n    \"type\": \"ut ut reprehenderit Excepteur\"\n   },\n   \"protectionPolicyId\": \"quis ea occaecat\",\n   \"ruleId\": \"sint dolor elit consequat aliquip\",\n   \"ruleName\": \"sit sunt cupidatat ullamco\",\n   \"size\": -56360378,\n   \"updatedAt\": \"1993-08-22T08:03:23.350Z\",\n   \"userTags\": [\n    \"velit irure\",\n    \"dolore veniam Duis officia\"\n   ],\n   \"vmMoref\": \"ullamco laborum\"\n  },\n  {\n   \"name\": \"dolore enim culpa ullamco ut\",\n   \"type\": \"VMAX_STORAGE_GROUP\",\n   \"details\": {\n    \"database\": {\n     \"appServerId\": \"quis\",\n     \"appServerName\": \"ullamco nostrud anim\",\n     \"appVersion\": \"Lorem dolore Duis consectetur sed\",\n     \"asm\": \"et officia tempor\",\n     \"clusterName\": \"nulla pa\",\n     \"clusterType\": \"pariatur\",\n     \"dbId\": \"cupidatat labore consectetur ullamco\",\n     \"lastBackup\": \"2017-03-23T07:32:00.824Z\",\n     \"protectionEngineFlow\": \"APPDIRECT\",\n     \"protectionType\": \"enim\",\n     \"sid\": \"pariatur occaecat cupidatat Ut\"\n    },\n    \"fileSystem\": {\n     \"fileSystemType\": \"anim exercit\",\n     \"guid\": \"veli\",\n     \"hostName\": \"enim ex esse voluptate\",\n     \"hostOS\": \"consequat veniam\",\n     \"lastBackup\": \"1944-08-24T23:33:36.352Z\",\n     \"protectionType\": \"nostrud et ad adipisic\"\n    },\n    \"k8s\": {\n     \"externalCreatedAt\": \"cillum esse\",\n     \"inventorySourceId\": \"enim aliqua quis\",\n     \"inventorySourceName\": \"velit Excepteur fugiat\",\n     \"lastBackup\": \"1986-11-28T12:11:39.321Z\",\n     \"namespace\": \"irure eu\",\n     \"persistentVolumeClaim\": {\n      \"accessModes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"excluded\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"storageClassName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"volumeMode\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"volumeName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"size\": 69173611,\n     \"subType\": \"ex in\",\n     \"uid\": \"ea voluptate magna officia\"\n    },\n    \"nasShare\": {\n     \"fileSystemName\": \"irure\",\n     \"nasServer\": {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"name\": \"quis proident\"\n     },\n     \"protocol\": \"NFS\"\n    },\n    \"vm\": {\n     \"clusterName\": \"in voluptate\",\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n     \"datacenter\": \"sunt\",\n     \"datastore\": [\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"datastoreName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"datastoreName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"disks\": [\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"eagerlyScrub\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"excluded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sizeInBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"thinProvisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"usedBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"eagerlyScrub\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"excluded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sizeInBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"thinProvisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"usedBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"dnsName\": \"nostrud enim\",\n     \"esxName\": \"eiusmod cillum non culpa\",\n     \"externalId\": \"commodo ullamco \",\n     \"folder\": \"eu veniam ipsum\",\n     \"guestOS\": \"laborum aute\",\n     \"hostMoref\": \"in ullamco commodo aliquip\",\n     \"hostName\": \"dolor qui ex eu minim\",\n     \"inventoryPath\": \"esse amet\",\n     \"inventorySourceId\": \"Excepteur\",\n     \"inventorySourceName\": \"labore Lorem laboris\",\n     \"primaryIpAddress\": \"in in et\",\n     \"protectedApplication\": \"ORACLE\",\n     \"resourcePool\": \"pariatur ad\",\n     \"vApp\": \"Excepteur et\",\n     \"vcenterName\": \"dolore fugiat minim et\",\n     \"vmBiosUuid\": \"Lorem Duis enim\",\n     \"vmMoref\": \"aliqua non\"\n    },\n    \"vmaxStorageGroup\": {\n     \"configuration\": {\n      \"backupDevice\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"backupStorage\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"restoreDevice\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"restoreStorage\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"coordinatingHostId\": \"in dolore ullamco Ut deserunt\",\n     \"coordinatingHostname\": \"dolor proident nisi ut in\"\n    }\n   },\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"tempor enim\",\n     \"name\": \"est enim nulla cupidatat\",\n     \"protectionEngine\": \"deserunt\",\n     \"type\": \"magna\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"dolore aliqua non\",\n     \"name\": \"voluptate proident\",\n     \"protectionEngine\": \"sint est anim\",\n     \"type\": \"minim in qui tempor\"\n    },\n    \"storageSystem\": {\n     \"id\": \"eu quis\",\n     \"name\": \"sit cupidatat\"\n    }\n   },\n   \"assetGroupId\": \"dolore\",\n   \"backupDetails\": [\n    {\n     \"backupType\": \"SYNTHETIC_FULL\",\n     \"parallelism\": 37170891\n    },\n    {\n     \"backupType\": \"DIFFERENTIAL\",\n     \"parallelism\": -19046500\n    }\n   ],\n   \"createdAt\": \"2007-04-04T00:24:15.596Z\",\n   \"credentialId\": \"qui culpa minim consectetur ex\",\n   \"credentials\": [\n    {\n     \"extraInfo\": [\n      {\n       \"name\": \"commodo do mollit \",\n       \"value\": \"minim Lorem\"\n      },\n      {\n       \"name\": \"culpa Lorem non ut eu\",\n       \"value\": \"quis offici\"\n      }\n     ],\n     \"id\": \"ea enim id\",\n     \"type\": \"mollit nostrud ad\"\n    },\n    {\n     \"extraInfo\": [\n      {\n       \"name\": \"ipsum aute fugiat\",\n       \"value\": \"ea laboris sit ullamco\"\n      },\n      {\n       \"name\": \"do\",\n       \"value\": \"anim cupidatat ex sit id\"\n      }\n     ],\n     \"id\": \"Excepteur voluptate veniam labore aliquip\",\n     \"type\": \"dolor do laborum\"\n    }\n   ],\n   \"dataTargetIds\": [\n    \"in irure\",\n    \"id culpa minim labore\"\n   ],\n   \"deleted\": false,\n   \"filterIds\": [\n    \"irure ut pariatur\",\n    \"nulla cupidatat\"\n   ],\n   \"id\": \"deserunt ea\",\n   \"lastAvailableCopyTime\": \"2011-08-03T21:32:01.958Z\",\n   \"networkLabel\": \"anim consectetur do et\",\n   \"protectable\": false,\n   \"protectionCapacity\": {\n    \"size\": 88218209,\n    \"time\": \"1992-06-03T11:07:47.475Z\"\n   },\n   \"protectionLifeCycleId\": \"elit\",\n   \"protectionPolicy\": {\n    \"id\": \"qui dolore\",\n    \"name\": \"eiusmod ut\",\n    \"protectionEngine\": \"reprehenderit ad do ut\",\n    \"type\": \"fugiat qui\"\n   },\n   \"protectionPolicyId\": \"labore ipsum sunt\",\n   \"ruleId\": \"cupidatat sit commodo sint\",\n   \"ruleName\": \"adipisicing dolore cupidatat ea\",\n   \"size\": 69091766,\n   \"updatedAt\": \"1943-07-07T21:56:28.045Z\",\n   \"userTags\": [\n    \"cillum pariatur esse\",\n    \"cillum nulla\"\n   ],\n   \"vmMoref\": \"sed\"\n  }\n ],\n \"page\": {\n  \"number\": -28924240,\n  \"queryState\": \"consequat\",\n  \"size\": -38143773,\n  \"totalElements\": -83177853,\n  \"totalPages\": -43308394\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "audit-logs",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an audit log resource with the given ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the audit log resource."
												}
											]
										},
										"description": "Retrieves the audit log resource that matches the given ID. \n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid. Check if id is valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the audit log.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n \"auditType\": \"SECURITY\",\n \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n \"changeDescription\": \"User admin password has been changed.\",\n \"changedBy\": {\n  \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n  \"username\": \"dotTenantAdmin\"\n },\n \"changedObject\": {\n  \"id\": \"00000000-0000-4000-a000-000000000000\",\n  \"resourceName\": \"admin\",\n  \"resourceType\": \"/users\"\n },\n \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n \"messageArgs\": [\n  \"admin\"\n ],\n \"messageID\": \"ADT0104\",\n \"userNote\": null\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update the AuditLog resource with the given id.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"o\",\n        \"eu dolor\"\n    ],\n    \"userNote\": {\n        \"note\": \"dolor\",\n        \"updatedTime\": \"2016-06-07T09:09:41.410Z\",\n        \"username\": \"in anim dolore\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs",
												":id",
												"notes"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the audit log resource."
												}
											]
										},
										"description": "Updates the audit log resource with the given ID. \n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"adipisicing culpa eiusmod nostrud ad\",\n        \"commodo laborum dolor consequat\"\n    ],\n    \"userNote\": {\n        \"note\": \"esse cupidatat Duis\",\n        \"updatedTime\": \"1973-11-23T18:05:04.816Z\",\n        \"username\": \"Excepteur proident velit consequat\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"adipisicing culpa eiusmod nostrud ad\",\n        \"commodo laborum dolor consequat\"\n    ],\n    \"userNote\": {\n        \"note\": \"esse cupidatat Duis\",\n        \"updatedTime\": \"1973-11-23T18:05:04.816Z\",\n        \"username\": \"Excepteur proident velit consequat\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"adipisicing culpa eiusmod nostrud ad\",\n        \"commodo laborum dolor consequat\"\n    ],\n    \"userNote\": {\n        \"note\": \"esse cupidatat Duis\",\n        \"updatedTime\": \"1973-11-23T18:05:04.816Z\",\n        \"username\": \"Excepteur proident velit consequat\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the audit log.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"adipisicing culpa eiusmod nostrud ad\",\n        \"commodo laborum dolor consequat\"\n    ],\n    \"userNote\": {\n        \"note\": \"esse cupidatat Duis\",\n        \"updatedTime\": \"1973-11-23T18:05:04.816Z\",\n        \"username\": \"Excepteur proident velit consequat\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n \"auditType\": \"SECURITY\",\n \"messageID\": \"SYS0016\",\n \"changeDescription\": \"User admin password has been changed.\",\n \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n \"changedBy\": {\n  \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n  \"username\": \"dotTenantAdmin\"\n },\n \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n \"changedObject\": {\n  \"id\": \"00000000-0000-4000-a000-000000000000\",\n  \"resourceName\": \"admin\",\n  \"resourceType\": \"/users\"\n },\n \"messageArgs\": [\n  \"adipisicing culpa eiusmod nostrud ad\",\n  \"commodo laborum dolor consequat\"\n ],\n \"userNote\": {\n  \"note\": \"esse cupidatat Duis\",\n  \"updatedTime\": \"1973-11-23T18:05:04.816Z\",\n  \"username\": \"Excepteur proident velit consequat\"\n }\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"adipisicing culpa eiusmod nostrud ad\",\n        \"commodo laborum dolor consequat\"\n    ],\n    \"userNote\": {\n        \"note\": \"esse cupidatat Duis\",\n        \"updatedTime\": \"1973-11-23T18:05:04.816Z\",\n        \"username\": \"Excepteur proident velit consequat\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested audit logs does not exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"adipisicing culpa eiusmod nostrud ad\",\n        \"commodo laborum dolor consequat\"\n    ],\n    \"userNote\": {\n        \"note\": \"esse cupidatat Duis\",\n        \"updatedTime\": \"1973-11-23T18:05:04.816Z\",\n        \"username\": \"Excepteur proident velit consequat\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all audit log resources.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit-logs"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua",
											"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
										}
									]
								},
								"description": "Retrieves all audit logs. \n> This endpoint supports execution by the following roles: admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is too large to be satisfied.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Requested Range Not Satisfiable",
									"code": 416,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid. Check the request parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available audit logs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n   \"auditType\": \"SECURITY\",\n   \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n   \"changeDescription\": \"User admin password has been changed.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n    \"username\": \"dotTenantAdmin\"\n   },\n   \"changedObject\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"resourceName\": \"admin\",\n    \"resourceType\": \"/users\"\n   },\n   \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n   \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n   \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n   \"messageArgs\": [\n    \"admin\"\n   ],\n   \"messageID\": \"ADT0104\",\n   \"userNote\": null\n  },\n  {\n   \"after\": \"VM Protection Gold\",\n   \"auditType\": \"PROTECTION_POLICY\",\n   \"before\": \"\",\n   \"changeDescription\": \"Protection Policy 'VM Protection Gold' has been created.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"username\": \"admin\"\n   },\n   \"changedObject\": {\n    \"id\": \"9d91b470-a7ff-4a5f-866f-14d91d22a2ab\",\n    \"resourceName\": \"VM Protection Gold\",\n    \"resourceType\": \"protectionLifeCycles\"\n   },\n   \"changedTime\": \"2019-08-12T21:11:33.569Z\",\n   \"createdAt\": \"2019-08-12T21:11:33.728Z\",\n   \"id\": \"25e58640-f3a4-478f-912b-f8785d609c4e\",\n   \"messageArgs\": [\n    \"'VM Protection Gold'\"\n   ],\n   \"messageID\": \"ADT0201\",\n   \"userNote\": null\n  },\n  {\n   \"after\": \"O_JL_CA_VM15, R_JL_CA_VM16\",\n   \"auditType\": \"PROTECTION_POLICY\",\n   \"before\": \"\",\n   \"changeDescription\": \"2 asset(s) assigned to 'VM Protection Gold'.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"username\": \"admin\"\n   },\n   \"changedObject\": {\n    \"id\": \"9d91b470-a7ff-4a5f-866f-14d91d22a2ab\",\n    \"resourceName\": \"'VM Protection Gold'\",\n    \"resourceType\": \"protectionLifeCycles\"\n   },\n   \"changedTime\": \"2019-08-12T21:11:35.323Z\",\n   \"createdAt\": \"2019-08-12T21:11:35.391Z\",\n   \"id\": \"ebcec0b5-e0f4-4c87-a836-2d6683ae9803\",\n   \"messageArgs\": [\n    \"2\",\n    \"'VM Protection Gold'\"\n   ],\n   \"messageID\": \"ADT0215\",\n   \"userNote\": null\n  },\n  {\n   \"after\": \"Z_JL_CA_VM6\",\n   \"auditType\": \"PROTECTION_POLICY\",\n   \"before\": \"\",\n   \"changeDescription\": \"1 asset(s) assigned to 'VM Protection Gold'.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"username\": \"admin\"\n   },\n   \"changedObject\": {\n    \"id\": \"9d91b470-a7ff-4a5f-866f-14d91d22a2ab\",\n    \"resourceName\": \"'VM Protection Gold'\",\n    \"resourceType\": \"protectionLifeCycles\"\n   },\n   \"changedTime\": \"2019-08-13T15:42:17.741Z\",\n   \"createdAt\": \"2019-08-13T15:42:17.887Z\",\n   \"id\": \"591807d4-3cd9-4d36-a1c0-3bd21794b07a\",\n   \"messageArgs\": [\n    \"1\",\n    \"'VM Protection Gold'\"\n   ],\n   \"messageID\": \"ADT0215\",\n   \"userNote\": null\n  },\n  {\n   \"after\": \"\",\n   \"auditType\": \"PROTECTION\",\n   \"before\": \"\",\n   \"changeDescription\": \"Adhoc backup request received for R_JL_CA_VM16.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"username\": \"admin\"\n   },\n   \"changedObject\": {\n    \"id\": \"3832069a-be26-52ab-a7cb-e190e0f1bd3d\",\n    \"resourceName\": \"R_JL_CA_VM16\",\n    \"resourceType\": \"Asset Resource\"\n   },\n   \"changedTime\": \"2019-08-15T17:34:44.531Z\",\n   \"createdAt\": \"2019-08-15T17:34:44.610Z\",\n   \"id\": \"9a86b2e5-13bd-45c5-808f-4e9c834069a3\",\n   \"messageArgs\": [\n    \"R_JL_CA_VM16\"\n   ],\n   \"messageID\": \"ADT0801\",\n   \"userNote\": null\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 5,\n  \"totalElements\": 5,\n  \"totalPages\": 1\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "certificates",
					"item": [
						{
							"name": "{cert Id}",
							"item": [
								{
									"name": "Delete a certificate by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates/:certId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates",
												":certId"
											],
											"variable": [
												{
													"key": "certId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Certificate ID in UUID format."
												}
											]
										},
										"description": "Deletes an external host TLS certificate that is currently stored in the trust store by using the ID of the certificate.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An issue has occurred on the system. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The certificate was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully deleted the specified certificate.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The Authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a certificate by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates/:certId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates",
												":certId"
											],
											"variable": [
												{
													"key": "certId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Certificate ID in UUID format."
												}
											]
										},
										"description": "Retrieves an external host TLS certificate that is currently stored in the trust store, and lists it in the response body in JSON format.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin \n"
									},
									"response": [
										{
											"name": "The Authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The certificate was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the specified certificate.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"host\": \"incididunt ipsum culpa ullamco\",\n \"port\": \"sed labore aliquip non\",\n \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n \"id\": \"sint\",\n \"issuerName\": \"deserunt exercitation amet\",\n \"notValidAfter\": \"Du\",\n \"notValidBefore\": \"ullamco dolor\",\n \"state\": \"EXPIRED\",\n \"subjectName\": \"aliqua ex sint \",\n \"type\": \"ROOT\"\n}"
										},
										{
											"name": "An issue has occurred on the system. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a certificate by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"host\": \"incididunt ipsum culpa ullamco\",\n    \"port\": \"sed labore aliquip non\",\n    \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n    \"id\": \"sint\",\n    \"issuerName\": \"deserunt exercitation amet\",\n    \"notValidAfter\": \"Du\",\n    \"notValidBefore\": \"ullamco dolor\",\n    \"state\": \"EXPIRED\",\n    \"subjectName\": \"aliqua ex sint \",\n    \"type\": \"ROOT\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates/:certId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates",
												":certId"
											],
											"variable": [
												{
													"key": "certId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Certificate ID in UUID format."
												}
											]
										},
										"description": "Updates an external host TLS certificate that is currently stored in the trust store by using the ID of the certificate, and lists the updated one in the response body in JSON format.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An issue has occurred on the system. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"incididunt ipsum culpa ullamco\",\n    \"port\": \"sed labore aliquip non\",\n    \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n    \"id\": \"sint\",\n    \"issuerName\": \"deserunt exercitation amet\",\n    \"notValidAfter\": \"Du\",\n    \"notValidBefore\": \"ullamco dolor\",\n    \"state\": \"EXPIRED\",\n    \"subjectName\": \"aliqua ex sint \",\n    \"type\": \"ROOT\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The certificate was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"incididunt ipsum culpa ullamco\",\n    \"port\": \"sed labore aliquip non\",\n    \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n    \"id\": \"sint\",\n    \"issuerName\": \"deserunt exercitation amet\",\n    \"notValidAfter\": \"Du\",\n    \"notValidBefore\": \"ullamco dolor\",\n    \"state\": \"EXPIRED\",\n    \"subjectName\": \"aliqua ex sint \",\n    \"type\": \"ROOT\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The Authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"incididunt ipsum culpa ullamco\",\n    \"port\": \"sed labore aliquip non\",\n    \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n    \"id\": \"sint\",\n    \"issuerName\": \"deserunt exercitation amet\",\n    \"notValidAfter\": \"Du\",\n    \"notValidBefore\": \"ullamco dolor\",\n    \"state\": \"EXPIRED\",\n    \"subjectName\": \"aliqua ex sint \",\n    \"type\": \"ROOT\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the specified certificate.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"incididunt ipsum culpa ullamco\",\n    \"port\": \"sed labore aliquip non\",\n    \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n    \"id\": \"sint\",\n    \"issuerName\": \"deserunt exercitation amet\",\n    \"notValidAfter\": \"Du\",\n    \"notValidBefore\": \"ullamco dolor\",\n    \"state\": \"EXPIRED\",\n    \"subjectName\": \"aliqua ex sint \",\n    \"type\": \"ROOT\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"host\": \"incididunt ipsum culpa ullamco\",\n \"port\": \"sed labore aliquip non\",\n \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n \"id\": \"sint\",\n \"issuerName\": \"deserunt exercitation amet\",\n \"notValidAfter\": \"Du\",\n \"notValidBefore\": \"ullamco dolor\",\n \"state\": \"EXPIRED\",\n \"subjectName\": \"aliqua ex sint \",\n \"type\": \"ROOT\"\n}"
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"incididunt ipsum culpa ullamco\",\n    \"port\": \"sed labore aliquip non\",\n    \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n    \"id\": \"sint\",\n    \"issuerName\": \"deserunt exercitation amet\",\n    \"notValidAfter\": \"Du\",\n    \"notValidBefore\": \"ullamco dolor\",\n    \"state\": \"EXPIRED\",\n    \"subjectName\": \"aliqua ex sint \",\n    \"type\": \"ROOT\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"incididunt ipsum culpa ullamco\",\n    \"port\": \"sed labore aliquip non\",\n    \"fingerprint\": \"incididunt deserunt eiusmod dolore\",\n    \"id\": \"sint\",\n    \"issuerName\": \"deserunt exercitation amet\",\n    \"notValidAfter\": \"Du\",\n    \"notValidBefore\": \"ullamco dolor\",\n    \"state\": \"EXPIRED\",\n    \"subjectName\": \"aliqua ex sint \",\n    \"type\": \"ROOT\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all certificates.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates?host=aute ut id cillum aliqua&port=aute ut id cillum aliqua&type=HOST&strict=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates"
									],
									"query": [
										{
											"key": "host",
											"value": "aute ut id cillum aliqua",
											"description": "(Required) Specify the host from which to get the certificate."
										},
										{
											"key": "port",
											"value": "aute ut id cillum aliqua",
											"description": "(Required) Specify the port number from which to get the certificate."
										},
										{
											"key": "type",
											"value": "HOST",
											"description": "Specify the type of certificate to get."
										},
										{
											"key": "strict",
											"value": "false",
											"description": "Check if the host IP or fully qualified domain name (FQDN) used in host is in the certificate's subject alternative name."
										}
									]
								},
								"description": "Retrieves all of the external hosts and root CA TLS certificates that are currently stored in the trust store and has the state of ACCEPTED, and lists them in the response body in JSON format.  Identical to GET /api/v2/certificates/external.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully retrieved all the certificates.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=aute ut id cillum aliqua&port=aute ut id cillum aliqua&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"host\": \"nostrud irure\",\n  \"port\": \"elit sit non Duis laborum\",\n  \"fingerprint\": \"magna voluptate ipsum proid\",\n  \"id\": \"in cillum officia laboris\",\n  \"issuerName\": \"u\",\n  \"notValidAfter\": \"enim\",\n  \"notValidBefore\": \"dolor sunt sint\",\n  \"state\": \"MISMATCHED\",\n  \"subjectName\": \"do est cillum in\",\n  \"type\": \"HOST\"\n },\n {\n  \"host\": \"id in Duis\",\n  \"port\": \"in sunt ullamco aliqua deserunt\",\n  \"fingerprint\": \"commodo\",\n  \"id\": \"ad in sint veniam\",\n  \"issuerName\": \"et magna incididunt nisi quis\",\n  \"notValidAfter\": \"veniam velit\",\n  \"notValidBefore\": \"et\",\n  \"state\": \"MISMATCHED\",\n  \"subjectName\": \"nisi aliqua ut sint\",\n  \"type\": \"HOST\"\n }\n]"
								},
								{
									"name": "An issue has occurred on the system. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=aute ut id cillum aliqua&port=aute ut id cillum aliqua&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=aute ut id cillum aliqua&port=aute ut id cillum aliqua&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"host\": \"nostrud irure\",\n  \"port\": \"elit sit non Duis laborum\",\n  \"fingerprint\": \"magna voluptate ipsum proid\",\n  \"id\": \"in cillum officia laboris\",\n  \"issuerName\": \"u\",\n  \"notValidAfter\": \"enim\",\n  \"notValidBefore\": \"dolor sunt sint\",\n  \"state\": \"MISMATCHED\",\n  \"subjectName\": \"do est cillum in\",\n  \"type\": \"HOST\"\n },\n {\n  \"host\": \"id in Duis\",\n  \"port\": \"in sunt ullamco aliqua deserunt\",\n  \"fingerprint\": \"commodo\",\n  \"id\": \"ad in sint veniam\",\n  \"issuerName\": \"et magna incididunt nisi quis\",\n  \"notValidAfter\": \"veniam velit\",\n  \"notValidBefore\": \"et\",\n  \"state\": \"MISMATCHED\",\n  \"subjectName\": \"nisi aliqua ut sint\",\n  \"type\": \"HOST\"\n }\n]"
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=aute ut id cillum aliqua&port=aute ut id cillum aliqua&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The certificate was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=aute ut id cillum aliqua&port=aute ut id cillum aliqua&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The Authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=aute ut id cillum aliqua&port=aute ut id cillum aliqua&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "cloud-dr-accounts",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "cloud-dr-data-targets",
									"item": [
										{
											"name": "{td Id}",
											"item": [
												{
													"name": "Delete Cloud DR target.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets",
																":tdId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) ID of the Cloud DR account."
																},
																{
																	"key": "tdId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) ID of the Cloud DR target."
																}
															]
														},
														"description": "Deletes Cloud Disaster Recovery target for the specified Cloud DR account.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The requester is not authenticated to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Any server error that prevented the completion of the request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requester is not authorized to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Successfully deleted Cloud DR target.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Get Cloud DR target.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets",
																":tdId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) ID of the Cloud DR account."
																},
																{
																	"key": "tdId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) ID of the Cloud DR target."
																}
															]
														},
														"description": "Retrieves Cloud Disaster Recovery target by its ID.\n> This endpoint supports execution by the following roles: user\n"
													},
													"response": [
														{
															"name": "The requester is not authenticated to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Any server error that prevented the completion of the request.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Successfully returned Cloud DR target.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"copiesStorageContainer\": {\n  \"cloudAccountId\": \"in consequat\",\n  \"id\": \"mollit velit occaecat irure\",\n  \"location\": \"officia\",\n  \"name\": \"do nostrud velit\",\n  \"type\": \"Excepteur in veniam\"\n },\n \"encryptionMethod\": \"deserunt fugiat culpa minim\",\n \"id\": \"fugiat\",\n \"name\": \"consequat\",\n \"state\": \"ACTIVE\"\n}"
														},
														{
															"name": "The requester is not authorized to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get all Cloud DR targets.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id",
														"cloud-dr-data-targets"
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) ID of the Cloud DR account."
														}
													]
												},
												"description": "Retrieves a list of Cloud DR targets for the specified Cloud DR account.\n> This endpoint supports execution by the following roles: user\n"
											},
											"response": [
												{
													"name": "The requester is not authenticated to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requester is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Any server error that prevented the completion of the request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successfully returned Cloud DR targets list.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"copiesStorageContainer\": {\n    \"cloudAccountId\": \"in sunt aute\",\n    \"id\": \"et mollit ullamco in\",\n    \"location\": \"aliqua dolor reprehenderit aliquip magna\",\n    \"name\": \"exercitatio\",\n    \"type\": \"culpa veniam eu ipsum est\"\n   },\n   \"encryptionMethod\": \"c\",\n   \"id\": \"et anim non\",\n   \"name\": \"officia no\",\n   \"state\": \"ACTIVE\"\n  },\n  {\n   \"copiesStorageContainer\": {\n    \"cloudAccountId\": \"et\",\n    \"id\": \"deserunt quis Ut\",\n    \"location\": \"nostrud ea dolor exercitation\",\n    \"name\": \"Excepteur enim aute\",\n    \"type\": \"in\"\n   },\n   \"encryptionMethod\": \"et\",\n   \"id\": \"qui dolore\",\n   \"name\": \"sit in dolor voluptate\",\n   \"state\": \"ACTIVE\"\n  }\n ],\n \"page\": {\n  \"number\": 5032083,\n  \"queryState\": \"tempor proident qui\",\n  \"size\": 55835914,\n  \"totalElements\": 22201831,\n  \"totalPages\": 70583986\n }\n}"
												}
											]
										},
										{
											"name": "Create Cloud DR target.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"in consequat\",\n        \"id\": \"mollit velit occaecat irure\",\n        \"location\": \"officia\",\n        \"name\": \"do nostrud velit\",\n        \"type\": \"Excepteur in veniam\"\n    },\n    \"encryptionMethod\": \"deserunt fugiat culpa minim\",\n    \"id\": \"fugiat\",\n    \"name\": \"consequat\",\n    \"state\": \"ACTIVE\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id",
														"cloud-dr-data-targets"
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) ID of the Cloud DR account."
														}
													]
												},
												"description": "Creates Cloud Disaster Recovery target for the specified Cloud DR account.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The requester is not authenticated to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"in consequat\",\n        \"id\": \"mollit velit occaecat irure\",\n        \"location\": \"officia\",\n        \"name\": \"do nostrud velit\",\n        \"type\": \"Excepteur in veniam\"\n    },\n    \"encryptionMethod\": \"deserunt fugiat culpa minim\",\n    \"id\": \"fugiat\",\n    \"name\": \"consequat\",\n    \"state\": \"ACTIVE\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Any server error that prevented the completion of the request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"in consequat\",\n        \"id\": \"mollit velit occaecat irure\",\n        \"location\": \"officia\",\n        \"name\": \"do nostrud velit\",\n        \"type\": \"Excepteur in veniam\"\n    },\n    \"encryptionMethod\": \"deserunt fugiat culpa minim\",\n    \"id\": \"fugiat\",\n    \"name\": \"consequat\",\n    \"state\": \"ACTIVE\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requester is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"in consequat\",\n        \"id\": \"mollit velit occaecat irure\",\n        \"location\": \"officia\",\n        \"name\": \"do nostrud velit\",\n        \"type\": \"Excepteur in veniam\"\n    },\n    \"encryptionMethod\": \"deserunt fugiat culpa minim\",\n    \"id\": \"fugiat\",\n    \"name\": \"consequat\",\n    \"state\": \"ACTIVE\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Resource created.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"in consequat\",\n        \"id\": \"mollit velit occaecat irure\",\n        \"location\": \"officia\",\n        \"name\": \"do nostrud velit\",\n        \"type\": \"Excepteur in veniam\"\n    },\n    \"encryptionMethod\": \"deserunt fugiat culpa minim\",\n    \"id\": \"fugiat\",\n    \"name\": \"consequat\",\n    \"state\": \"ACTIVE\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"copiesStorageContainer\": {\n  \"cloudAccountId\": \"in consequat\",\n  \"id\": \"mollit velit occaecat irure\",\n  \"location\": \"officia\",\n  \"name\": \"do nostrud velit\",\n  \"type\": \"Excepteur in veniam\"\n },\n \"encryptionMethod\": \"deserunt fugiat culpa minim\",\n \"id\": \"fugiat\",\n \"name\": \"consequat\",\n \"state\": \"ACTIVE\"\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"in consequat\",\n        \"id\": \"mollit velit occaecat irure\",\n        \"location\": \"officia\",\n        \"name\": \"do nostrud velit\",\n        \"type\": \"Excepteur in veniam\"\n    },\n    \"encryptionMethod\": \"deserunt fugiat culpa minim\",\n    \"id\": \"fugiat\",\n    \"name\": \"consequat\",\n    \"state\": \"ACTIVE\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										}
									]
								},
								{
									"name": "cloud-dr-storage-containers",
									"item": [
										{
											"name": "Get Cloud DR storage containers.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id",
														"cloud-dr-storage-containers"
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The ID of storage container. "
														}
													]
												},
												"description": "Retrieves a list of Cloud DR storage containers for the specified Cloud DR account.\n> This endpoint supports execution by the following roles: user\n"
											},
											"response": [
												{
													"name": "Any server error that prevented the completion of the request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successfully returned storage containers.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"cloudAccountId\": \"Ut dolore pa\",\n   \"id\": \"ea dolor non veniam irure\",\n   \"location\": \"officia aute\",\n   \"name\": \"in elit in labore\",\n   \"type\": \"veniam esse\"\n  },\n  {\n   \"cloudAccountId\": \"enim\",\n   \"id\": \"in\",\n   \"location\": \"consectetur dolore consequat\",\n   \"name\": \"ex\",\n   \"type\": \"ad\"\n  }\n ],\n \"page\": {\n  \"number\": -57166674,\n  \"queryState\": \"ut cillum incididunt anim sint\",\n  \"size\": 80549078,\n  \"totalElements\": -94613689,\n  \"totalPages\": -37200981\n }\n}"
												},
												{
													"name": "The requester is not authenticated to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requester is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										},
										{
											"name": "Get Cloud DR storage container.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id",
														"cloud-dr-storage-containers",
														":scId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) ID of the Cloud DR account."
														},
														{
															"key": "scId",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) Storage container ID."
														}
													]
												},
												"description": "Retrieves the specified Cloud Disaster Recovery storage container for the Cloud DR account.\n> This endpoint supports execution by the following roles: user\n"
											},
											"response": [
												{
													"name": "The requester is not authenticated to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Any server error that prevented the completion of the request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successfully returned storage container.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"cloudAccountId\": \"occaecat fugiat mollit\",\n \"id\": \"consectetur sed labore aliquip\",\n \"location\": \"enim aliquip sun\",\n \"name\": \"dolore id non incididunt\",\n \"type\": \"adipisicing in ut\"\n}"
												},
												{
													"name": "The requester is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Cloud DR account by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Cloud DR account ID."
												}
											]
										},
										"description": "Retrieves the specified Cloud Disaster Recovery account by ID.\n> This endpoint supports execution by the following roles: user\n"
									},
									"response": [
										{
											"name": "The requester is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned Cloud DR account.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"connectionStatus\": \"et Lorem\",\n \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n \"id\": \"officia incididunt ea magna sint\",\n \"providerAccountId\": \"ullamco nostrud anim culpa\",\n \"providerName\": \"laboris\",\n \"providerParameters\": [\n  {\n   \"name\": \"pariatur et\",\n   \"value\": \"eu\"\n  },\n  {\n   \"name\": \"fugiat ipsum\",\n   \"value\": \"enim commodo pariatur in ea\"\n  }\n ],\n \"secretKey\": \"occaecat\",\n \"userKey\": \"qui sunt\",\n \"userName\": \"ut minim esse\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requester is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update Cloud DR account.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The Cloud DR account ID."
												}
											]
										},
										"description": "Updates the specified Cloud Disaster Recovery account.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Resource updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"connectionStatus\": \"et Lorem\",\n \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n \"id\": \"officia incididunt ea magna sint\",\n \"providerAccountId\": \"ullamco nostrud anim culpa\",\n \"providerName\": \"laboris\",\n \"providerParameters\": [\n  {\n   \"name\": \"pariatur et\",\n   \"value\": \"eu\"\n  },\n  {\n   \"name\": \"fugiat ipsum\",\n   \"value\": \"enim commodo pariatur in ea\"\n  }\n ],\n \"secretKey\": \"occaecat\",\n \"userKey\": \"qui sunt\",\n \"userName\": \"ut minim esse\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requester is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requester is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Cloud DR accounts.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-accounts"
									]
								},
								"description": "Retrieves a complete listing of the Cloud Disaster Recovery (Cloud DR) accounts in the system. This listing includes the IDs for each Cloud DR account as well as other information such as the name of the provider, user name, connection status, and so on. \n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "Successfully returned Cloud DR accounts list.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"connectionStatus\": \"tempor enim dolor ullamco aute\",\n   \"connectionStatusMessage\": \"eu Ut anim irure\",\n   \"id\": \"sed magna qui\",\n   \"providerAccountId\": \"ad Lorem\",\n   \"providerName\": \"anim commodo\",\n   \"providerParameters\": [\n    {\n     \"name\": \"sit Excepteur\",\n     \"value\": \"ad\"\n    },\n    {\n     \"name\": \"nulla sunt cupidatat\",\n     \"value\": \"Excepteur veniam\"\n    }\n   ],\n   \"secretKey\": \"velit do quis\",\n   \"userKey\": \"dolor Duis sed\",\n   \"userName\": \"ut consequat\"\n  },\n  {\n   \"connectionStatus\": \"laboris sint commodo\",\n   \"connectionStatusMessage\": \"est sit laboris\",\n   \"id\": \"nostrud quis deserunt\",\n   \"providerAccountId\": \"Lorem nisi amet elit\",\n   \"providerName\": \"aliqua adipisicing qui\",\n   \"providerParameters\": [\n    {\n     \"name\": \"labore velit dolor Lorem\",\n     \"value\": \"ad cupidatat elit\"\n    },\n    {\n     \"name\": \"laboris Lorem non voluptate elit\",\n     \"value\": \"eiusmod ipsum aute dolore\"\n    }\n   ],\n   \"secretKey\": \"ipsum Lorem\",\n   \"userKey\": \"in voluptate consequat labo\",\n   \"userName\": \"offic\"\n  }\n ],\n \"page\": {\n  \"number\": -15572442,\n  \"queryState\": \"proident Excepteur Lorem ullamco\",\n  \"size\": -9901156,\n  \"totalElements\": 30070892,\n  \"totalPages\": -61815029\n }\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create Cloud DR accounts.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-accounts"
									]
								},
								"description": "Creates a new Cloud Disaster Recovery account.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Resource created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"connectionStatus\": \"et Lorem\",\n \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n \"id\": \"officia incididunt ea magna sint\",\n \"providerAccountId\": \"ullamco nostrud anim culpa\",\n \"providerName\": \"laboris\",\n \"providerParameters\": [\n  {\n   \"name\": \"pariatur et\",\n   \"value\": \"eu\"\n  },\n  {\n   \"name\": \"fugiat ipsum\",\n   \"value\": \"enim commodo pariatur in ea\"\n  }\n ],\n \"secretKey\": \"occaecat\",\n \"userKey\": \"qui sunt\",\n \"userName\": \"ut minim esse\"\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"et Lorem\",\n    \"connectionStatusMessage\": \"laboris reprehenderit amet quis\",\n    \"id\": \"officia incididunt ea magna sint\",\n    \"providerAccountId\": \"ullamco nostrud anim culpa\",\n    \"providerName\": \"laboris\",\n    \"providerParameters\": [\n        {\n            \"name\": \"pariatur et\",\n            \"value\": \"eu\"\n        },\n        {\n            \"name\": \"fugiat ipsum\",\n            \"value\": \"enim commodo pariatur in ea\"\n        }\n    ],\n    \"secretKey\": \"occaecat\",\n    \"userKey\": \"qui sunt\",\n    \"userName\": \"ut minim esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-dr-configurations",
					"item": [
						{
							"name": "Update Cloud DR configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"a\",\n    \"value\": \"laborum deserunt\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-configurations"
									]
								},
								"description": "Update the Cloud Disaster Recovery configuration. Cloud DR configuration settings are internal and should not be modified without the supervision of Customer Support.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"a\",\n    \"value\": \"laborum deserunt\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Resource has been updated successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"a\",\n    \"value\": \"laborum deserunt\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"cdrsConnectivityState\": {\n  \"CdrsConnectivityStateEnum\": [\n   \"aliqua occaecat\",\n   \"magna\"\n  ]\n },\n \"cidr\": \"d\",\n \"cloudTargetId\": \"ea eiusmod Excepteur\",\n \"connectionIp\": \"dolore sint magna cupidatat amet\",\n \"deploymentCompleted\": true,\n \"email\": \"quis anim enim\",\n \"privateNetwork\": false,\n \"publicDns\": \"sunt labore dolor fugiat\",\n \"region\": \"adipisicing eu ipsum\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"a\",\n    \"value\": \"laborum deserunt\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"a\",\n    \"value\": \"laborum deserunt\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"a\",\n    \"value\": \"laborum deserunt\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Get Cloud DR configuration by key.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-configurations",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) Key of the Cloud DR configuration setting."
										}
									]
								},
								"description": "Retrieves the Cloud Disaster Recovery configuration setting for the specified key. Cloud DR configuration settings are internal and should not be modified without the supervision of Customer Support.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The response body contains the requested Cloud DR configuration setting.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"key\": \"a\",\n \"value\": \"laborum deserunt\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-dr-proxy",
					"item": [
						{
							"name": "Delete Cloud DR proxy configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-proxy"
									]
								},
								"description": "Deletes proxy details from Cloud DR.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request was accepted for processing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-proxy"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Get Cloud DR proxy configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-proxy"
									]
								},
								"description": "Retrieves details about the Cloud DR proxy.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-proxy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"enable\": false,\n  \"enableAuthentication\": false,\n  \"host\": \"qui ipsum exercitation nostrud\",\n  \"port\": 41844949,\n  \"username\": \"aliquip labore comm\"\n },\n {\n  \"enable\": false,\n  \"enableAuthentication\": false,\n  \"host\": \"labore \",\n  \"port\": -56489755,\n  \"username\": \"nulla ut elit sunt cillum\"\n }\n]"
								}
							]
						},
						{
							"name": "Update Cloud DR proxy configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enable\": true,\n    \"enableAuthentication\": true,\n    \"host\": \"enim labore\",\n    \"port\": -9203620,\n    \"username\": \"cupidatat veniam\",\n    \"password\": \"aute cillum sit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-proxy"
									]
								},
								"description": "Updates proxy details in Cloud DR.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request was accepted for processing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enable\": true,\n    \"enableAuthentication\": true,\n    \"host\": \"enim labore\",\n    \"port\": -9203620,\n    \"username\": \"cupidatat veniam\",\n    \"password\": \"aute cillum sit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-proxy"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"enable\": true,\n \"enableAuthentication\": false,\n \"host\": \"id ut dolore dolor\",\n \"port\": 70415567,\n \"username\": \"aliqua est\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-dr-server-configuration",
					"item": [
						{
							"name": "Get CDRS properties.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-configuration"
									]
								},
								"description": "Retrieves the Cloud Disaster Recovery Server (CDRS) properties. CDRS properties include Cloud target ID, CDRS connection IP address and connectivity state, region, whether the deployment completed or not, and so on.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned CDRS properties.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"cdrsConnectivityState\": {\n  \"CdrsConnectivityStateEnum\": [\n   \"reprehenderit laboris aliqua est\",\n   \"consequat cillum quis\"\n  ]\n },\n \"cidr\": \"irure\",\n \"cloudTargetId\": \"enim nisi do Ut\",\n \"connectionIp\": \"laboris\",\n \"deploymentCompleted\": false,\n \"email\": \"ullamco tempor\",\n \"privateNetwork\": false,\n \"publicDns\": \"quis veniam voluptate do\",\n \"region\": \"sint do\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Edit CDRS connection properties.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"in minim ipsum nostrud\",\n    \"privateIp\": \"sunt labore reprehenderit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-configuration"
									]
								},
								"description": "Edit the Cloud Disaster Recovery Server (CDRS) connection properties.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"in minim ipsum nostrud\",\n    \"privateIp\": \"sunt labore reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"in minim ipsum nostrud\",\n    \"privateIp\": \"sunt labore reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"in minim ipsum nostrud\",\n    \"privateIp\": \"sunt labore reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Resource updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"in minim ipsum nostrud\",\n    \"privateIp\": \"sunt labore reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"in minim ipsum nostrud\",\n    \"privateIp\": \"sunt labore reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-dr-server-deployment",
					"item": [
						{
							"name": "Delete CDRS.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"qui nostrud laboris officia culpa\""
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-deployment"
									]
								},
								"description": "Deletes the Cloud Disaster Recovery Server (CDRS).\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"qui nostrud laboris officia culpa\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully deleted CDRS.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"qui nostrud laboris officia culpa\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"qui nostrud laboris officia culpa\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"qui nostrud laboris officia culpa\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"qui nostrud laboris officia culpa\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Get CDRS deployment state.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-deployment"
									]
								},
								"description": "Get the Cloud Disaster Recovery Server (CDRS) deployment state. The deployment state includes job name, deployment state, and deployment stages and their status.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned CDRS deployment state.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"deployStagesStatus\": [\n  {\n   \"deployStage\": \"DEPLOY_CLOUD_INFRASTRUCTURE\",\n   \"status\": \"COMPLETED_SUCCESS\"\n  },\n  {\n   \"deployStage\": \"LAUNCH_INSTANCE\",\n   \"status\": \"COMPLETED_ERROR\"\n  }\n ],\n \"deployState\": \"IN_PROGRESS\",\n \"jobName\": \"in minim nisi\",\n \"message\": \"mollit\"\n}"
								}
							]
						},
						{
							"name": "Deploy a CDRS.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"adminPassword\": \"dolore sunt\",\n    \"cidrBlockIp\": \"irure sed et Excepteur\",\n    \"cloudTargetId\": \"consequat\",\n    \"deleteExisting\": false,\n    \"email\": \"nulla consectetur aliquip veniam aute\",\n    \"monitorPassword\": \"aliqua sunt cupidatat\",\n    \"vpcId\": \"exercitation fugiat ea\",\n    \"workflowTaskId\": \"qui commodo culpa con\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-deployment"
									]
								},
								"description": "Deploys a Cloud Disaster Recovery Server (CDRS).\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"dolore sunt\",\n    \"cidrBlockIp\": \"irure sed et Excepteur\",\n    \"cloudTargetId\": \"consequat\",\n    \"deleteExisting\": false,\n    \"email\": \"nulla consectetur aliquip veniam aute\",\n    \"monitorPassword\": \"aliqua sunt cupidatat\",\n    \"vpcId\": \"exercitation fugiat ea\",\n    \"workflowTaskId\": \"qui commodo culpa con\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Request accepted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"dolore sunt\",\n    \"cidrBlockIp\": \"irure sed et Excepteur\",\n    \"cloudTargetId\": \"consequat\",\n    \"deleteExisting\": false,\n    \"email\": \"nulla consectetur aliquip veniam aute\",\n    \"monitorPassword\": \"aliqua sunt cupidatat\",\n    \"vpcId\": \"exercitation fugiat ea\",\n    \"workflowTaskId\": \"qui commodo culpa con\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"taskId\": \"laboris Ut\"\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"dolore sunt\",\n    \"cidrBlockIp\": \"irure sed et Excepteur\",\n    \"cloudTargetId\": \"consequat\",\n    \"deleteExisting\": false,\n    \"email\": \"nulla consectetur aliquip veniam aute\",\n    \"monitorPassword\": \"aliqua sunt cupidatat\",\n    \"vpcId\": \"exercitation fugiat ea\",\n    \"workflowTaskId\": \"qui commodo culpa con\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"dolore sunt\",\n    \"cidrBlockIp\": \"irure sed et Excepteur\",\n    \"cloudTargetId\": \"consequat\",\n    \"deleteExisting\": false,\n    \"email\": \"nulla consectetur aliquip veniam aute\",\n    \"monitorPassword\": \"aliqua sunt cupidatat\",\n    \"vpcId\": \"exercitation fugiat ea\",\n    \"workflowTaskId\": \"qui commodo culpa con\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"dolore sunt\",\n    \"cidrBlockIp\": \"irure sed et Excepteur\",\n    \"cloudTargetId\": \"consequat\",\n    \"deleteExisting\": false,\n    \"email\": \"nulla consectetur aliquip veniam aute\",\n    \"monitorPassword\": \"aliqua sunt cupidatat\",\n    \"vpcId\": \"exercitation fugiat ea\",\n    \"workflowTaskId\": \"qui commodo culpa con\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-dr-sessions",
					"item": [
						{
							"name": "Get Cloud DR sessions.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-sessions"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves Cloud Disaster Recovery sessions by pagination, order by, and filter.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available Cloud DR sessions resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"assetName\": \"ullamco ut mollit qui\",\n   \"copyTime\": \"2015-05-24T21:20:28.797Z\",\n   \"drType\": \"nisi dolor\",\n   \"id\": \"velit dolore\",\n   \"instanceId\": \"ut\",\n   \"region\": \"pari\",\n   \"status\": \"sit aliquip ad dolore\"\n  },\n  {\n   \"assetName\": \"officia veniam nostrud\",\n   \"copyTime\": \"1942-12-29T14:58:29.660Z\",\n   \"drType\": \"do\",\n   \"id\": \"amet aliqua veniam\",\n   \"instanceId\": \"cillum exercitation consectetur nulla\",\n   \"region\": \"Ut ad ut\",\n   \"status\": \"no\"\n  }\n ],\n \"pageInfo\": {\n  \"number\": 93976137,\n  \"queryState\": \"eiusmod aute reprehenderit pariat\",\n  \"size\": -47192656,\n  \"totalElements\": -56940666,\n  \"totalPages\": -22860116\n }\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "End Cloud DR session.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-sessions",
										":drId"
									],
									"variable": [
										{
											"key": "drId",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) Cloud DR session ID."
										}
									]
								},
								"description": "Ends the Cloud Disaster Recovery session according to the specified session ID. You can get a list of Cloud Disaster Recovery session IDs by using GET /api/v2/cloud-dr-sessions.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully invoked ending of Cloud DR session.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-dr-vcenters",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update vCenter configuration.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"irure incididunt occaecat proident\",\n                \"type\": \"dolor adipisicing nostrud in sed\"\n            },\n            \"name\": \"nostrud ut tempor\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"sunt pariatur laborum sed\",\n                \"type\": \"quis eiusmod\"\n            },\n            \"name\": \"incididunt et\"\n        }\n    ],\n    \"id\": \"dolor do elit Excepteur\",\n    \"isFailoverTarget\": true,\n    \"networks\": [\n        {\n            \"gateway\": \"laborum dolor mollit\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"exercit\",\n                    \"range\": -46221739\n                },\n                {\n                    \"baseIp\": \"ipsum Ut dolore ea voluptate\",\n                    \"range\": -37813036\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"exercitation anim\",\n                \"type\": \"id anim voluptate\"\n            },\n            \"name\": \"officia minim laboris ipsum dolore\",\n            \"netMask\": \"ex dolor esse\"\n        },\n        {\n            \"gateway\": \"aliquip\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"Excepteur cupidatat in culpa\",\n                    \"range\": 26846262\n                },\n                {\n                    \"baseIp\": \"ea Duis sint occaecat qui\",\n                    \"range\": 29177018\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"commodo adipisicing in\",\n                \"type\": \"esse aute ut\"\n            },\n            \"name\": \"deserunt\",\n            \"netMask\": \"ea sunt officia\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters",
												":id",
												"configuration"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The vCenter Server ID."
												}
											]
										},
										"description": "Updates the vCenter configuration for the specified vCenter Server.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requester is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"irure incididunt occaecat proident\",\n                \"type\": \"dolor adipisicing nostrud in sed\"\n            },\n            \"name\": \"nostrud ut tempor\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"sunt pariatur laborum sed\",\n                \"type\": \"quis eiusmod\"\n            },\n            \"name\": \"incididunt et\"\n        }\n    ],\n    \"id\": \"dolor do elit Excepteur\",\n    \"isFailoverTarget\": true,\n    \"networks\": [\n        {\n            \"gateway\": \"laborum dolor mollit\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"exercit\",\n                    \"range\": -46221739\n                },\n                {\n                    \"baseIp\": \"ipsum Ut dolore ea voluptate\",\n                    \"range\": -37813036\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"exercitation anim\",\n                \"type\": \"id anim voluptate\"\n            },\n            \"name\": \"officia minim laboris ipsum dolore\",\n            \"netMask\": \"ex dolor esse\"\n        },\n        {\n            \"gateway\": \"aliquip\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"Excepteur cupidatat in culpa\",\n                    \"range\": 26846262\n                },\n                {\n                    \"baseIp\": \"ea Duis sint occaecat qui\",\n                    \"range\": 29177018\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"commodo adipisicing in\",\n                \"type\": \"esse aute ut\"\n            },\n            \"name\": \"deserunt\",\n            \"netMask\": \"ea sunt officia\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"irure incididunt occaecat proident\",\n                \"type\": \"dolor adipisicing nostrud in sed\"\n            },\n            \"name\": \"nostrud ut tempor\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"sunt pariatur laborum sed\",\n                \"type\": \"quis eiusmod\"\n            },\n            \"name\": \"incididunt et\"\n        }\n    ],\n    \"id\": \"dolor do elit Excepteur\",\n    \"isFailoverTarget\": true,\n    \"networks\": [\n        {\n            \"gateway\": \"laborum dolor mollit\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"exercit\",\n                    \"range\": -46221739\n                },\n                {\n                    \"baseIp\": \"ipsum Ut dolore ea voluptate\",\n                    \"range\": -37813036\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"exercitation anim\",\n                \"type\": \"id anim voluptate\"\n            },\n            \"name\": \"officia minim laboris ipsum dolore\",\n            \"netMask\": \"ex dolor esse\"\n        },\n        {\n            \"gateway\": \"aliquip\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"Excepteur cupidatat in culpa\",\n                    \"range\": 26846262\n                },\n                {\n                    \"baseIp\": \"ea Duis sint occaecat qui\",\n                    \"range\": 29177018\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"commodo adipisicing in\",\n                \"type\": \"esse aute ut\"\n            },\n            \"name\": \"deserunt\",\n            \"netMask\": \"ea sunt officia\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated vCenter configuration.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"irure incididunt occaecat proident\",\n                \"type\": \"dolor adipisicing nostrud in sed\"\n            },\n            \"name\": \"nostrud ut tempor\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"sunt pariatur laborum sed\",\n                \"type\": \"quis eiusmod\"\n            },\n            \"name\": \"incididunt et\"\n        }\n    ],\n    \"id\": \"dolor do elit Excepteur\",\n    \"isFailoverTarget\": true,\n    \"networks\": [\n        {\n            \"gateway\": \"laborum dolor mollit\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"exercit\",\n                    \"range\": -46221739\n                },\n                {\n                    \"baseIp\": \"ipsum Ut dolore ea voluptate\",\n                    \"range\": -37813036\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"exercitation anim\",\n                \"type\": \"id anim voluptate\"\n            },\n            \"name\": \"officia minim laboris ipsum dolore\",\n            \"netMask\": \"ex dolor esse\"\n        },\n        {\n            \"gateway\": \"aliquip\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"Excepteur cupidatat in culpa\",\n                    \"range\": 26846262\n                },\n                {\n                    \"baseIp\": \"ea Duis sint occaecat qui\",\n                    \"range\": 29177018\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"commodo adipisicing in\",\n                \"type\": \"esse aute ut\"\n            },\n            \"name\": \"deserunt\",\n            \"netMask\": \"ea sunt officia\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "The vCenter id in the request is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"irure incididunt occaecat proident\",\n                \"type\": \"dolor adipisicing nostrud in sed\"\n            },\n            \"name\": \"nostrud ut tempor\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"sunt pariatur laborum sed\",\n                \"type\": \"quis eiusmod\"\n            },\n            \"name\": \"incididunt et\"\n        }\n    ],\n    \"id\": \"dolor do elit Excepteur\",\n    \"isFailoverTarget\": true,\n    \"networks\": [\n        {\n            \"gateway\": \"laborum dolor mollit\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"exercit\",\n                    \"range\": -46221739\n                },\n                {\n                    \"baseIp\": \"ipsum Ut dolore ea voluptate\",\n                    \"range\": -37813036\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"exercitation anim\",\n                \"type\": \"id anim voluptate\"\n            },\n            \"name\": \"officia minim laboris ipsum dolore\",\n            \"netMask\": \"ex dolor esse\"\n        },\n        {\n            \"gateway\": \"aliquip\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"Excepteur cupidatat in culpa\",\n                    \"range\": 26846262\n                },\n                {\n                    \"baseIp\": \"ea Duis sint occaecat qui\",\n                    \"range\": 29177018\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"commodo adipisicing in\",\n                \"type\": \"esse aute ut\"\n            },\n            \"name\": \"deserunt\",\n            \"netMask\": \"ea sunt officia\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requester is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"irure incididunt occaecat proident\",\n                \"type\": \"dolor adipisicing nostrud in sed\"\n            },\n            \"name\": \"nostrud ut tempor\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"sunt pariatur laborum sed\",\n                \"type\": \"quis eiusmod\"\n            },\n            \"name\": \"incididunt et\"\n        }\n    ],\n    \"id\": \"dolor do elit Excepteur\",\n    \"isFailoverTarget\": true,\n    \"networks\": [\n        {\n            \"gateway\": \"laborum dolor mollit\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"exercit\",\n                    \"range\": -46221739\n                },\n                {\n                    \"baseIp\": \"ipsum Ut dolore ea voluptate\",\n                    \"range\": -37813036\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"exercitation anim\",\n                \"type\": \"id anim voluptate\"\n            },\n            \"name\": \"officia minim laboris ipsum dolore\",\n            \"netMask\": \"ex dolor esse\"\n        },\n        {\n            \"gateway\": \"aliquip\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"Excepteur cupidatat in culpa\",\n                    \"range\": 26846262\n                },\n                {\n                    \"baseIp\": \"ea Duis sint occaecat qui\",\n                    \"range\": 29177018\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"commodo adipisicing in\",\n                \"type\": \"esse aute ut\"\n            },\n            \"name\": \"deserunt\",\n            \"netMask\": \"ea sunt officia\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"irure incididunt occaecat proident\",\n                \"type\": \"dolor adipisicing nostrud in sed\"\n            },\n            \"name\": \"nostrud ut tempor\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"sunt pariatur laborum sed\",\n                \"type\": \"quis eiusmod\"\n            },\n            \"name\": \"incididunt et\"\n        }\n    ],\n    \"id\": \"dolor do elit Excepteur\",\n    \"isFailoverTarget\": true,\n    \"networks\": [\n        {\n            \"gateway\": \"laborum dolor mollit\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"exercit\",\n                    \"range\": -46221739\n                },\n                {\n                    \"baseIp\": \"ipsum Ut dolore ea voluptate\",\n                    \"range\": -37813036\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"exercitation anim\",\n                \"type\": \"id anim voluptate\"\n            },\n            \"name\": \"officia minim laboris ipsum dolore\",\n            \"netMask\": \"ex dolor esse\"\n        },\n        {\n            \"gateway\": \"aliquip\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"Excepteur cupidatat in culpa\",\n                    \"range\": 26846262\n                },\n                {\n                    \"baseIp\": \"ea Duis sint occaecat qui\",\n                    \"range\": 29177018\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"commodo adipisicing in\",\n                \"type\": \"esse aute ut\"\n            },\n            \"name\": \"deserunt\",\n            \"netMask\": \"ea sunt officia\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get vCenter inventory.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters",
												":id",
												"inventory"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The vCenter Server ID."
												}
											]
										},
										"description": "Retrieves vCenter inventory for the specified vCenter Server ID.\n> This endpoint supports execution by the following roles: user\n"
									},
									"response": [
										{
											"name": "The requester is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned vCenter inventory.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"dataCenters\": [\n  {\n   \"dataStores\": [\n    {\n     \"availableNetworks\": [\n      {\n       \"morefId\": \"veniam pariatur mollit\",\n       \"type\": \"adipisicing ipsum magna sint\"\n      },\n      {\n       \"morefId\": \"dolore consectetur\",\n       \"type\": \"id aliquip cupidatat\"\n      }\n     ],\n     \"moref\": {\n      \"morefId\": \"quis consectetur sit\",\n      \"type\": \"anim dolor\"\n     },\n     \"name\": \"Ut cillum\"\n    },\n    {\n     \"availableNetworks\": [\n      {\n       \"morefId\": \"deserunt irure reprehenderit laboris\",\n       \"type\": \"id aute in dolor eu\"\n      },\n      {\n       \"morefId\": \"aliqua ipsum\",\n       \"type\": \"elit aliqua in sunt\"\n      }\n     ],\n     \"moref\": {\n      \"morefId\": \"cillum sed id lab\",\n      \"type\": \"elit quis laboris esse\"\n     },\n     \"name\": \"nulla id esse mollit\"\n    }\n   ],\n   \"moref\": {\n    \"morefId\": \"ad cillum pariatur velit Duis\",\n    \"type\": \"qui ea ullamco esse consectetur\"\n   },\n   \"name\": \"ea\",\n   \"networks\": [\n    {\n     \"moref\": {\n      \"morefId\": \"est minim\",\n      \"type\": \"in proident ut\"\n     },\n     \"name\": \"qui dolo\"\n    },\n    {\n     \"moref\": {\n      \"morefId\": \"in exercitation enim eiusmod esse\",\n      \"type\": \"proident aute laborum eiusmod sint\"\n     },\n     \"name\": \"velit\"\n    }\n   ]\n  },\n  {\n   \"dataStores\": [\n    {\n     \"availableNetworks\": [\n      {\n       \"morefId\": \"labore nisi\",\n       \"type\": \"sint dolore ex\"\n      },\n      {\n       \"morefId\": \"velit\",\n       \"type\": \"cillum in dolor ut\"\n      }\n     ],\n     \"moref\": {\n      \"morefId\": \"\",\n      \"type\": \"est aliquip veniam nostrud\"\n     },\n     \"name\": \"cupidatat sit in\"\n    },\n    {\n     \"availableNetworks\": [\n      {\n       \"morefId\": \"qui Excepteur tempor labore sint\",\n       \"type\": \"ex nisi labore\"\n      },\n      {\n       \"morefId\": \"Excepteur et velit\",\n       \"type\": \"eiusmod\"\n      }\n     ],\n     \"moref\": {\n      \"morefId\": \"s\",\n      \"type\": \"in sint ut aliqua dolore\"\n     },\n     \"name\": \"culpa reprehenderit in dolor aliquip\"\n    }\n   ],\n   \"moref\": {\n    \"morefId\": \"ea veniam occaecat tempor\",\n    \"type\": \"quis culpa consequat pariatur\"\n   },\n   \"name\": \"ipsum in\",\n   \"networks\": [\n    {\n     \"moref\": {\n      \"morefId\": \"commodo aliqua aliquip qui\",\n      \"type\": \"nisi consectetur sit\"\n     },\n     \"name\": \"in ullamco enim\"\n    },\n    {\n     \"moref\": {\n      \"morefId\": \"adipisicing dolore\",\n      \"type\": \"eiusmod Except\"\n     },\n     \"name\": \"commodo in ipsum elit labore\"\n    }\n   ]\n  }\n ],\n \"id\": \"dolore ullamco\"\n}"
										},
										{
											"name": "The vCenter id in the request is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requester is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Cloud DR vCenters list.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-vcenters"
									]
								},
								"description": "Retrieves a list of Cloud Disaster Recovery vCenter Servers. The list includes the vCenter Server IDs, which you can use to update the vCenter Server configuration or get the vCenter Server inventory of the specified vCenter Server.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned vCenter Servers list.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"cdrVcConfiguration\": {\n    \"dataStores\": [\n     {\n      \"moref\": {\n       \"morefId\": \"laborum incididunt irure\",\n       \"type\": \"aliqua enim dolore\"\n      },\n      \"name\": \"deserunt dolor quis in\"\n     },\n     {\n      \"moref\": {\n       \"morefId\": \"sunt labore\",\n       \"type\": \"nostrud incididunt\"\n      },\n      \"name\": \"amet veniam consectetur ut\"\n     }\n    ],\n    \"id\": \"ut\",\n    \"isFailoverTarget\": false,\n    \"networks\": [\n     {\n      \"gateway\": \"cillum\",\n      \"ipRanges\": [\n       {\n        \"baseIp\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"range\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       {\n        \"baseIp\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"range\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       }\n      ],\n      \"moref\": {\n       \"morefId\": \"ipsum in incididunt\",\n       \"type\": \"in proident dolor Lorem culpa\"\n      },\n      \"name\": \"nulla dolore dolor\",\n      \"netMask\": \"magna aliqua irure esse Lorem\"\n     },\n     {\n      \"gateway\": \"eiusmod id\",\n      \"ipRanges\": [\n       {\n        \"baseIp\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"range\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       {\n        \"baseIp\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"range\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       }\n      ],\n      \"moref\": {\n       \"morefId\": \"enim elit irure\",\n       \"type\": \"ut amet ullamco veniam\"\n      },\n      \"name\": \"in anim irure \",\n      \"netMask\": \"in\"\n     }\n    ]\n   },\n   \"id\": \"amet in\",\n   \"isPartial\": true,\n   \"location\": {\n    \"LocationEnum\": [\n     \"enim deserunt\",\n     \"enim\"\n    ]\n   },\n   \"model\": \"aliquip\",\n   \"serialId\": \"sunt adipisicing officia commodo\",\n   \"serverParams\": {\n    \"address\": \"esse ut velit et\",\n    \"credentials\": {\n     \"certificate\": \"officia fugiat\",\n     \"password\": \"aliquip\",\n     \"username\": \"laborum sunt quis ex\"\n    },\n    \"ipv6Configured\": false,\n    \"mtreeId\": \"ullamco esse elit\",\n    \"port\": -41062875\n   },\n   \"type\": {\n    \"RemoteServerType\": [\n     \"esse sunt\",\n     \"sint eu commodo\"\n    ]\n   },\n   \"version\": \"mo\"\n  },\n  {\n   \"cdrVcConfiguration\": {\n    \"dataStores\": [\n     {\n      \"moref\": {\n       \"morefId\": \"in ut\",\n       \"type\": \"laborum in eu dolore ex\"\n      },\n      \"name\": \"quis laboris ipsum enim qui\"\n     },\n     {\n      \"moref\": {\n       \"morefId\": \"ut elit nostrud esse\",\n       \"type\": \"Excepteur\"\n      },\n      \"name\": \"exercitation proident Duis pariatur\"\n     }\n    ],\n    \"id\": \"Excepteur cillum dolore et aliquip\",\n    \"isFailoverTarget\": true,\n    \"networks\": [\n     {\n      \"gateway\": \"eu et ea\",\n      \"ipRanges\": [\n       {\n        \"baseIp\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"range\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       {\n        \"baseIp\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"range\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       }\n      ],\n      \"moref\": {\n       \"morefId\": \"anim ut\",\n       \"type\": \"voluptate mollit qui\"\n      },\n      \"name\": \"aute laborum eu est proident\",\n      \"netMask\": \"non sunt anim\"\n     },\n     {\n      \"gateway\": \"labore sint consectetur\",\n      \"ipRanges\": [\n       {\n        \"baseIp\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"range\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       {\n        \"baseIp\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"range\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       }\n      ],\n      \"moref\": {\n       \"morefId\": \"ullamc\",\n       \"type\": \"elit laborum Duis\"\n      },\n      \"name\": \"fugiat cillum sed\",\n      \"netMask\": \"aliqua eiusmod of\"\n     }\n    ]\n   },\n   \"id\": \"dolore ullamco in enim\",\n   \"isPartial\": true,\n   \"location\": {\n    \"LocationEnum\": [\n     \"proident cillum\",\n     \"Duis sunt anim\"\n    ]\n   },\n   \"model\": \"mollit esse dolor occaecat\",\n   \"serialId\": \"commodo\",\n   \"serverParams\": {\n    \"address\": \"elit id\",\n    \"credentials\": {\n     \"certificate\": \"cillum aute cupidata\",\n     \"password\": \"occaecat sunt amet proident ad\",\n     \"username\": \"do laborum\"\n    },\n    \"ipv6Configured\": false,\n    \"mtreeId\": \"voluptate consequat in\",\n    \"port\": -77581405\n   },\n   \"type\": {\n    \"RemoteServerType\": [\n     \"ipsum labore elit\",\n     \"incididunt aliqua aute veniam\"\n    ]\n   },\n   \"version\": \"cupidatat eu pariatur\"\n  }\n ],\n \"page\": {\n  \"number\": 94166619,\n  \"queryState\": \"voluptate dolore ut esse\",\n  \"size\": -10749147,\n  \"totalElements\": -5307412,\n  \"totalPages\": 82053839\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-recalled-copies",
					"item": [
						{
							"name": "Recall a copy from the cloud.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"deserunt minim esse veniam\",\n    \"retierRetentionTime\": \"2000-09-25T01:38:08.625Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-recalled-copies"
									]
								},
								"description": "Runs a process to move back a copy set from the cloud to the active tier based on the specified protection copy set ID and retier retention time.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"deserunt minim esse veniam\",\n    \"retierRetentionTime\": \"2000-09-25T01:38:08.625Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"deserunt minim esse veniam\",\n    \"retierRetentionTime\": \"2000-09-25T01:38:08.625Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Asset has been moved back to Data Domain. ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"deserunt minim esse veniam\",\n    \"retierRetentionTime\": \"2000-09-25T01:38:08.625Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"taskId\": \"consectetur eiusmod nostrud\"\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"deserunt minim esse veniam\",\n    \"retierRetentionTime\": \"2000-09-25T01:38:08.625Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"deserunt minim esse veniam\",\n    \"retierRetentionTime\": \"2000-09-25T01:38:08.625Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a copy set retier time to the cloud.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"retierRetentionTime\": \"1971-02-01T22:40:38.605Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-recalled-copies",
										":copySetId"
									],
									"variable": [
										{
											"key": "copySetId",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) The asset ID of a copy on the Data Domain."
										}
									]
								},
								"description": "Updates the retier retention time for a specified copy set on a Data Domain based on the copy set ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"1971-02-01T22:40:38.605Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"1971-02-01T22:40:38.605Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Resource updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"1971-02-01T22:40:38.605Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"taskId\": \"consectetur eiusmod nostrud\"\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"1971-02-01T22:40:38.605Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"1971-02-01T22:40:38.605Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "common-settings",
					"item": [
						{
							"name": "ASSET SETTING",
							"item": [
								{
									"name": "Get asset settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"ASSET_SETTING"
											]
										},
										"description": "Get asset settings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the asset settings.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Modify asset settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"ASSET_SETTING"
											]
										},
										"description": "Modify the current asset settings.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Invalid request to update Dynamic Filter setting.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the asset settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "DYNAMIC FILTER SETTING",
							"item": [
								{
									"name": "Get dynamic filter settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"DYNAMIC_FILTER_SETTING"
											]
										},
										"description": "Retrieves dynamic filter settings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update dynamic filter settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"DYNAMIC_FILTER_SETTING"
											]
										},
										"description": "Updates the dynamic filter settings (known as protection rules in the PowerProtect Data Manager UI).\n\nPowerProtect Data Manager supports migrating any assets across protection policies by default. If you want to migrate only *unprotected* assets across protection policies, remove the \"value\" from the supportMoveAssetsAcrossProtectionPolicy property when forming the request. Using the \"VMWARE_VIRTUAL_MACHINE\" value as an example, if you want to enable migrating only *unprotected* VMs across protection policies, remove the value \"VMWARE_VIRTUAL_MACHINE.\"\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Invalid request to update the dynamic filter setting.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the dynamic filter settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "TELEMETRY SETTING",
							"item": [
								{
									"name": "Get telemetry settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"TELEMETRY_SETTING"
											]
										},
										"description": "Retrieves the current telemetry settings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Found and returned the telemetry settings.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Modify telemetry settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"TELEMETRY_SETTING"
											]
										},
										"description": "Updates the current telemetry settings.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Required fields are missing in the request payload.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the telemetry settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										},
										{
											"name": "The submitted settings payload has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "VM BACKUP SETTING",
							"item": [
								{
									"name": "Get VM backup settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"VM_BACKUP_SETTING"
											]
										},
										"description": "Retrieves VM backup settings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the VM backup settings.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update VM backup settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"VM_BACKUP_SETTING"
											]
										},
										"description": "Updates the current VM backup settings.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Invalid request to update VM backup setting.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the VM backup settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get common settings by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) \tCommon settings ID."
												}
											]
										},
										"description": "Retrieves common settings by ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Found and returned all the settings with the specified common settings ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										},
										{
											"name": "Cannot find settings with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Modify the settings by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Common settings ID sent in request."
												}
											]
										},
										"description": "Modifies settings by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find settings with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"properties\": [\n  {\n   \"name\": \"eu id\",\n   \"type\": \"ut reprehenderit laborum\",\n   \"value\": \"eiusmod in deserunt in voluptate\"\n  },\n  {\n   \"name\": \"voluptate\",\n   \"type\": \"sunt ipsum deserunt\",\n   \"value\": \"mollit\"\n  }\n ],\n \"id\": \"anim exercitation aliquip\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The submitted settings payload has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Occurs when the required fields are missing in the request payload.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"properties\": [\n        {\n            \"name\": \"eu id\",\n            \"type\": \"ut reprehenderit laborum\",\n            \"value\": \"eiusmod in deserunt in voluptate\"\n        },\n        {\n            \"name\": \"voluptate\",\n            \"type\": \"sunt ipsum deserunt\",\n            \"value\": \"mollit\"\n        }\n    ],\n    \"id\": \"anim exercitation aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all settings.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/common-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"common-settings"
									]
								},
								"description": "Retrieves all common settings.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Located and returned the available settings successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"properties\": [\n    {\n     \"name\": \"Ut\",\n     \"type\": \"aute veniam dolore fugiat nulla\",\n     \"value\": \"do proide\"\n    },\n    {\n     \"name\": \"reprehenderit\",\n     \"type\": \"ullamco Duis\",\n     \"value\": \"reprehenderit ea minim\"\n    }\n   ],\n   \"id\": \"ullamco do in fugiat\"\n  },\n  {\n   \"properties\": [\n    {\n     \"name\": \"in aliqua non\",\n     \"type\": \"officia incididunt aliqua culpa\",\n     \"value\": \"sit officia\"\n    },\n    {\n     \"name\": \"proident Excepteur non magna sit\",\n     \"type\": \"aliquip reprehenderit nisi\",\n     \"value\": \"Ut exercitation enim\"\n    }\n   ],\n   \"id\": \"ut ipsum officia sunt\"\n  }\n ],\n \"page\": {\n  \"number\": 75185810,\n  \"queryState\": \"cupidatat exercitation\",\n  \"size\": 25562852,\n  \"totalElements\": 47321556,\n  \"totalPages\": -56159659\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "compliance-results",
					"item": [
						{
							"name": "Get all compliance results.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-results"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves the compliance results. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available compliance result.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"completionTime\": \"1980-03-23T01:56:44.946Z\",\n   \"id\": \"qui veniam irure\",\n   \"nextStartTime\": \"1992-10-03T06:42:23.307Z\",\n   \"startTime\": \"2002-07-21T05:45:12.656Z\",\n   \"state\": \"WAITING\",\n   \"status\": \"SUCCESS\",\n   \"verifiedObjectives\": [\n    {\n     \"copyType\": \"proident cupidatat consequat non labore\",\n     \"endTime\": \"2020-08-29T01:02:03.083Z\",\n     \"failure\": {\n      \"reason\": \"Duis irure consequat officia\",\n      \"remediation\": \"consectetur ad pariatur nulla\"\n     },\n     \"name\": \"do irure veniam\",\n     \"slaId\": \"qui aute elit\",\n     \"stageId\": \"volupt\",\n     \"startTime\": \"2003-02-27T09:42:54.717Z\",\n     \"status\": \"FAILED\",\n     \"success\": false\n    },\n    {\n     \"copyType\": \"non proident aliquip amet\",\n     \"endTime\": \"1954-10-10T07:06:54.252Z\",\n     \"failure\": {\n      \"reason\": \"ut dolor proident\",\n      \"remediation\": \"veniam et est do sit\"\n     },\n     \"name\": \"eiusmod amet elit dolore\",\n     \"slaId\": \"ad amet est dolore\",\n     \"stageId\": \"anim dolor irure nisi\",\n     \"startTime\": \"1962-03-30T21:01:16.003Z\",\n     \"status\": \"SKIPPED\",\n     \"success\": false\n    }\n   ],\n   \"windowEndTime\": \"2006-02-28T10:20:52.327Z\"\n  },\n  {\n   \"completionTime\": \"2000-10-30T10:19:47.220Z\",\n   \"id\": \"deserunt dolore mollit\",\n   \"nextStartTime\": \"1980-02-27T01:13:42.325Z\",\n   \"startTime\": \"1958-01-14T02:08:29.819Z\",\n   \"state\": \"WAITING\",\n   \"status\": \"FAILED\",\n   \"verifiedObjectives\": [\n    {\n     \"copyType\": \"consectetur\",\n     \"endTime\": \"1991-11-29T23:10:02.049Z\",\n     \"failure\": {\n      \"reason\": \"officia velit aliqua\",\n      \"remediation\": \"sunt Duis amet nostrud in\"\n     },\n     \"name\": \"aute quis\",\n     \"slaId\": \"amet exercitation nostrud\",\n     \"stageId\": \"dolor\",\n     \"startTime\": \"1998-12-31T07:10:59.037Z\",\n     \"status\": \"SUCCEEDED\",\n     \"success\": false\n    },\n    {\n     \"copyType\": \"ipsum\",\n     \"endTime\": \"2020-10-02T06:54:59.613Z\",\n     \"failure\": {\n      \"reason\": \"exercita\",\n      \"remediation\": \"adipisicing ex Duis in\"\n     },\n     \"name\": \"incididunt ad\",\n     \"slaId\": \"pariatur incididunt\",\n     \"stageId\": \"elit commodo magna Ut do\",\n     \"startTime\": \"2016-11-28T12:22:18.281Z\",\n     \"status\": \"FAILED\",\n     \"success\": true\n    }\n   ],\n   \"windowEndTime\": \"2015-03-25T07:04:36.431Z\"\n  }\n ],\n \"page\": {\n  \"number\": 26514610,\n  \"queryState\": \"id\",\n  \"size\": -15613733,\n  \"totalElements\": -14865240,\n  \"totalPages\": -82368828\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Get  compliance results by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-results",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) ID of the compliance result."
										}
									]
								},
								"description": "Retrieves the compliance result with the specified ID. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned the compliance result.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"completionTime\": \"1974-12-17T02:44:37.091Z\",\n \"id\": \"in dolore in in anim\",\n \"nextStartTime\": \"1985-05-20T11:32:17.360Z\",\n \"startTime\": \"1948-07-03T00:14:30.452Z\",\n \"state\": \"COMPLETED\",\n \"status\": \"UNKNOWN\",\n \"verifiedObjectives\": [\n  {\n   \"copyType\": \"consectetur mollit sint\",\n   \"endTime\": \"1967-06-06T20:30:16.623Z\",\n   \"failure\": {\n    \"reason\": \"aute amet\",\n    \"remediation\": \"culpa anim pariatur ex\"\n   },\n   \"name\": \"fugiat minim\",\n   \"slaId\": \"Duis cupidatat sint\",\n   \"stageId\": \"irure do an\",\n   \"startTime\": \"2004-08-26T06:28:50.733Z\",\n   \"status\": \"SKIPPED\",\n   \"success\": false\n  },\n  {\n   \"copyType\": \"dolore in aliquip incididunt\",\n   \"endTime\": \"1983-09-10T18:15:52.946Z\",\n   \"failure\": {\n    \"reason\": \"labore culpa magna\",\n    \"remediation\": \"est\"\n   },\n   \"name\": \"id consectetur sit\",\n   \"slaId\": \"in irure proident\",\n   \"stageId\": \"nisi et mollit id\",\n   \"startTime\": \"1983-02-21T15:34:04.002Z\",\n   \"status\": \"SUCCEEDED\",\n   \"success\": true\n  }\n ],\n \"windowEndTime\": \"1958-09-03T15:14:01.229Z\"\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requested compliance result does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "components",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get component by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Component ID."
												}
											]
										},
										"description": "Retrieves component by ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Found and returned the component with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"componentDisplayName\": \"aute enim\",\n \"componentServiceName\": \"dolor\",\n \"componentType\": \"pariatur ut esse eu\",\n \"id\": \"voluptate dolore do\",\n \"logging\": {\n  \"configurable\": true,\n  \"logLocation\": \"\"\n },\n \"monitored\": true,\n \"status\": \"DOWN\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a component with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update component by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Component ID."
												}
											]
										},
										"description": "Updates a component by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a component with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The update operation is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"componentDisplayName\": \"aute enim\",\n \"componentServiceName\": \"dolor\",\n \"componentType\": \"pariatur ut esse eu\",\n \"id\": \"voluptate dolore do\",\n \"logging\": {\n  \"configurable\": true,\n  \"logLocation\": \"\"\n },\n \"monitored\": true,\n \"status\": \"DOWN\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Manage CDRA component.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"esse in non anim\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/components/:id/management",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components",
												":id",
												"management"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID"
												}
											]
										},
										"description": "Manages the Cloud Disaster Recovery Appliance (CDRA) component.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The POST operation is successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a component with the specified ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"esse in non anim\""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all components.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/components",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"components"
									]
								},
								"description": "Retrieves all components.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully returned available resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"componentDisplayName\": \"esse tempor\",\n   \"componentServiceName\": \"ad sint officia\",\n   \"componentType\": \"ullamco ut proident\",\n   \"id\": \"elit culpa officia ea\",\n   \"logging\": {\n    \"configurable\": true,\n    \"logLocation\": \"quis\"\n   },\n   \"monitored\": true,\n   \"status\": \"QUIESCE\"\n  },\n  {\n   \"componentDisplayName\": \"ut incididunt Ut consequat\",\n   \"componentServiceName\": \"ex dolor incididunt\",\n   \"componentType\": \"nostrud officia\",\n   \"id\": \"deserunt sed incididunt\",\n   \"logging\": {\n    \"configurable\": false,\n    \"logLocation\": \"ea aliquip dolor\"\n   },\n   \"monitored\": true,\n   \"status\": \"RESTORE\"\n  }\n ],\n \"page\": {\n  \"number\": 66539702,\n  \"queryState\": \"officia sunt\",\n  \"size\": 13012386,\n  \"totalElements\": -27537277,\n  \"totalPages\": -54001023\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "configurations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) id"
												}
											]
										},
										"description": "Retrieves a PowerProtect Data Manager appliance configuration by its ID. Running GET on this API returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a configuration with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Found and returned the configuration with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"Duis id adipisicing eiusmod\",\n \"applicationUserPassword\": \"ut est aute\",\n \"timeZone\": \"nisi\",\n \"lockbox\": {\n  \"newPassphrase\": \"mollit nulla pariatur\",\n  \"passphrase\": \"Excepteur eu et consequat\",\n  \"lastUpdatedTime\": \"officia minim labore\",\n  \"name\": \"adipisicing irure laboris nulla\"\n },\n \"osUsers\": [\n  {\n   \"newPassword\": \"laboris minim\",\n   \"password\": \"do\",\n   \"userName\": \"do dolor\",\n   \"description\": \"commodo\",\n   \"numberOfDaysToExpire\": 3159225\n  },\n  {\n   \"newPassword\": \"ea\",\n   \"password\": \"magna ut\",\n   \"userName\": \"Duis laboris in\",\n   \"description\": \"ut id irure dolor\",\n   \"numberOfDaysToExpire\": 50507959\n  }\n ],\n \"autoSupport\": false,\n \"configType\": \"eu ut\",\n \"deployedPlatform\": \"GCP\",\n \"firewall\": {\n  \"outbounds\": [\n   {\n    \"usedBy\": \"consectetur\",\n    \"destination\": \"pariatur eiusmod id\",\n    \"port\": \"commodo ut\",\n    \"rule\": \"ACCEPT\"\n   },\n   {\n    \"usedBy\": \"ullamco minim\",\n    \"destination\": \"labore adipisicing dolore\",\n    \"port\": \"mollit id\",\n    \"rule\": \"ACCEPT\"\n   }\n  ]\n },\n \"gettingStartedCompleted\": true,\n \"integratedStorageSecuritySetupCompleted\": false,\n \"networks\": [\n  {\n   \"dnsServers\": [\n    \"proident in veniam\",\n    \"ex sit dolor nostrud\"\n   ],\n   \"fqdn\": \"tempor ullamco nulla irure\",\n   \"gateway\": \"ex\",\n   \"interfaceName\": \"et qui velit in adipisicing\",\n   \"ipAddress\": [\n    \"minim dolore laboris\",\n    \"dolor est commodo do anim\"\n   ],\n   \"ipAddressFamily\": \"sit d\",\n   \"netMask\": \"minim\",\n   \"nslookupSuccess\": false,\n   \"prefix\": \"aute Ut commodo incididunt\"\n  },\n  {\n   \"dnsServers\": [\n    \"adipisicing nostrud\",\n    \"i\"\n   ],\n   \"fqdn\": \"minim proident\",\n   \"gateway\": \"adipisicing\",\n   \"interfaceName\": \"dolor ea et\",\n   \"ipAddress\": [\n    \"mollit fugiat enim\",\n    \"sed consequat deserunt\"\n   ],\n   \"ipAddressFamily\": \"enim id\",\n   \"netMask\": \"id ut sint pariatur nostrud\",\n   \"nslookupSuccess\": true,\n   \"prefix\": \"minim\"\n  }\n ],\n \"nodeId\": \"ea aliquip in\",\n \"ntpServers\": [\n  \"est id Duis\",\n  \"nostrud laborum\"\n ]\n}"
										}
									]
								},
								{
									"name": "Start the initial configuration.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"Duis id adipisicing eiusmod\",\n    \"applicationUserPassword\": \"ut est aute\",\n    \"timeZone\": \"nisi\",\n    \"lockbox\": {\n        \"newPassphrase\": \"mollit nulla pariatur\",\n        \"passphrase\": \"Excepteur eu et consequat\",\n        \"lastUpdatedTime\": \"officia minim labore\",\n        \"name\": \"adipisicing irure laboris nulla\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"laboris minim\",\n            \"password\": \"do\",\n            \"userName\": \"do dolor\",\n            \"description\": \"commodo\",\n            \"numberOfDaysToExpire\": 3159225\n        },\n        {\n            \"newPassword\": \"ea\",\n            \"password\": \"magna ut\",\n            \"userName\": \"Duis laboris in\",\n            \"description\": \"ut id irure dolor\",\n            \"numberOfDaysToExpire\": 50507959\n        }\n    ],\n    \"autoSupport\": false,\n    \"configType\": \"eu ut\",\n    \"deployedPlatform\": \"GCP\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"consectetur\",\n                \"destination\": \"pariatur eiusmod id\",\n                \"port\": \"commodo ut\",\n                \"rule\": \"ACCEPT\"\n            },\n            {\n                \"usedBy\": \"ullamco minim\",\n                \"destination\": \"labore adipisicing dolore\",\n                \"port\": \"mollit id\",\n                \"rule\": \"ACCEPT\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": true,\n    \"integratedStorageSecuritySetupCompleted\": false,\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"proident in veniam\",\n                \"ex sit dolor nostrud\"\n            ],\n            \"fqdn\": \"tempor ullamco nulla irure\",\n            \"gateway\": \"ex\",\n            \"interfaceName\": \"et qui velit in adipisicing\",\n            \"ipAddress\": [\n                \"minim dolore laboris\",\n                \"dolor est commodo do anim\"\n            ],\n            \"ipAddressFamily\": \"sit d\",\n            \"netMask\": \"minim\",\n            \"nslookupSuccess\": false,\n            \"prefix\": \"aute Ut commodo incididunt\"\n        },\n        {\n            \"dnsServers\": [\n                \"adipisicing nostrud\",\n                \"i\"\n            ],\n            \"fqdn\": \"minim proident\",\n            \"gateway\": \"adipisicing\",\n            \"interfaceName\": \"dolor ea et\",\n            \"ipAddress\": [\n                \"mollit fugiat enim\",\n                \"sed consequat deserunt\"\n            ],\n            \"ipAddressFamily\": \"enim id\",\n            \"netMask\": \"id ut sint pariatur nostrud\",\n            \"nslookupSuccess\": true,\n            \"prefix\": \"minim\"\n        }\n    ],\n    \"nodeId\": \"ea aliquip in\",\n    \"ntpServers\": [\n        \"est id Duis\",\n        \"nostrud laborum\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Configuration ID sent in request."
												}
											]
										},
										"description": "The initial configuration request is allowed only when the appliance state is PENDING or RESTORE. You can only perform the request once.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Cannot find a configuration with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"Duis id adipisicing eiusmod\",\n    \"applicationUserPassword\": \"ut est aute\",\n    \"timeZone\": \"nisi\",\n    \"lockbox\": {\n        \"newPassphrase\": \"mollit nulla pariatur\",\n        \"passphrase\": \"Excepteur eu et consequat\",\n        \"lastUpdatedTime\": \"officia minim labore\",\n        \"name\": \"adipisicing irure laboris nulla\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"laboris minim\",\n            \"password\": \"do\",\n            \"userName\": \"do dolor\",\n            \"description\": \"commodo\",\n            \"numberOfDaysToExpire\": 3159225\n        },\n        {\n            \"newPassword\": \"ea\",\n            \"password\": \"magna ut\",\n            \"userName\": \"Duis laboris in\",\n            \"description\": \"ut id irure dolor\",\n            \"numberOfDaysToExpire\": 50507959\n        }\n    ],\n    \"autoSupport\": false,\n    \"configType\": \"eu ut\",\n    \"deployedPlatform\": \"GCP\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"consectetur\",\n                \"destination\": \"pariatur eiusmod id\",\n                \"port\": \"commodo ut\",\n                \"rule\": \"ACCEPT\"\n            },\n            {\n                \"usedBy\": \"ullamco minim\",\n                \"destination\": \"labore adipisicing dolore\",\n                \"port\": \"mollit id\",\n                \"rule\": \"ACCEPT\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": true,\n    \"integratedStorageSecuritySetupCompleted\": false,\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"proident in veniam\",\n                \"ex sit dolor nostrud\"\n            ],\n            \"fqdn\": \"tempor ullamco nulla irure\",\n            \"gateway\": \"ex\",\n            \"interfaceName\": \"et qui velit in adipisicing\",\n            \"ipAddress\": [\n                \"minim dolore laboris\",\n                \"dolor est commodo do anim\"\n            ],\n            \"ipAddressFamily\": \"sit d\",\n            \"netMask\": \"minim\",\n            \"nslookupSuccess\": false,\n            \"prefix\": \"aute Ut commodo incididunt\"\n        },\n        {\n            \"dnsServers\": [\n                \"adipisicing nostrud\",\n                \"i\"\n            ],\n            \"fqdn\": \"minim proident\",\n            \"gateway\": \"adipisicing\",\n            \"interfaceName\": \"dolor ea et\",\n            \"ipAddress\": [\n                \"mollit fugiat enim\",\n                \"sed consequat deserunt\"\n            ],\n            \"ipAddressFamily\": \"enim id\",\n            \"netMask\": \"id ut sint pariatur nostrud\",\n            \"nslookupSuccess\": true,\n            \"prefix\": \"minim\"\n        }\n    ],\n    \"nodeId\": \"ea aliquip in\",\n    \"ntpServers\": [\n        \"est id Duis\",\n        \"nostrud laborum\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"Duis id adipisicing eiusmod\",\n    \"applicationUserPassword\": \"ut est aute\",\n    \"timeZone\": \"nisi\",\n    \"lockbox\": {\n        \"newPassphrase\": \"mollit nulla pariatur\",\n        \"passphrase\": \"Excepteur eu et consequat\",\n        \"lastUpdatedTime\": \"officia minim labore\",\n        \"name\": \"adipisicing irure laboris nulla\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"laboris minim\",\n            \"password\": \"do\",\n            \"userName\": \"do dolor\",\n            \"description\": \"commodo\",\n            \"numberOfDaysToExpire\": 3159225\n        },\n        {\n            \"newPassword\": \"ea\",\n            \"password\": \"magna ut\",\n            \"userName\": \"Duis laboris in\",\n            \"description\": \"ut id irure dolor\",\n            \"numberOfDaysToExpire\": 50507959\n        }\n    ],\n    \"autoSupport\": false,\n    \"configType\": \"eu ut\",\n    \"deployedPlatform\": \"GCP\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"consectetur\",\n                \"destination\": \"pariatur eiusmod id\",\n                \"port\": \"commodo ut\",\n                \"rule\": \"ACCEPT\"\n            },\n            {\n                \"usedBy\": \"ullamco minim\",\n                \"destination\": \"labore adipisicing dolore\",\n                \"port\": \"mollit id\",\n                \"rule\": \"ACCEPT\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": true,\n    \"integratedStorageSecuritySetupCompleted\": false,\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"proident in veniam\",\n                \"ex sit dolor nostrud\"\n            ],\n            \"fqdn\": \"tempor ullamco nulla irure\",\n            \"gateway\": \"ex\",\n            \"interfaceName\": \"et qui velit in adipisicing\",\n            \"ipAddress\": [\n                \"minim dolore laboris\",\n                \"dolor est commodo do anim\"\n            ],\n            \"ipAddressFamily\": \"sit d\",\n            \"netMask\": \"minim\",\n            \"nslookupSuccess\": false,\n            \"prefix\": \"aute Ut commodo incididunt\"\n        },\n        {\n            \"dnsServers\": [\n                \"adipisicing nostrud\",\n                \"i\"\n            ],\n            \"fqdn\": \"minim proident\",\n            \"gateway\": \"adipisicing\",\n            \"interfaceName\": \"dolor ea et\",\n            \"ipAddress\": [\n                \"mollit fugiat enim\",\n                \"sed consequat deserunt\"\n            ],\n            \"ipAddressFamily\": \"enim id\",\n            \"netMask\": \"id ut sint pariatur nostrud\",\n            \"nslookupSuccess\": true,\n            \"prefix\": \"minim\"\n        }\n    ],\n    \"nodeId\": \"ea aliquip in\",\n    \"ntpServers\": [\n        \"est id Duis\",\n        \"nostrud laborum\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"Duis id adipisicing eiusmod\",\n \"applicationUserPassword\": \"ut est aute\",\n \"timeZone\": \"nisi\",\n \"lockbox\": {\n  \"newPassphrase\": \"mollit nulla pariatur\",\n  \"passphrase\": \"Excepteur eu et consequat\",\n  \"lastUpdatedTime\": \"officia minim labore\",\n  \"name\": \"adipisicing irure laboris nulla\"\n },\n \"osUsers\": [\n  {\n   \"newPassword\": \"laboris minim\",\n   \"password\": \"do\",\n   \"userName\": \"do dolor\",\n   \"description\": \"commodo\",\n   \"numberOfDaysToExpire\": 3159225\n  },\n  {\n   \"newPassword\": \"ea\",\n   \"password\": \"magna ut\",\n   \"userName\": \"Duis laboris in\",\n   \"description\": \"ut id irure dolor\",\n   \"numberOfDaysToExpire\": 50507959\n  }\n ],\n \"autoSupport\": false,\n \"configType\": \"eu ut\",\n \"deployedPlatform\": \"GCP\",\n \"firewall\": {\n  \"outbounds\": [\n   {\n    \"usedBy\": \"consectetur\",\n    \"destination\": \"pariatur eiusmod id\",\n    \"port\": \"commodo ut\",\n    \"rule\": \"ACCEPT\"\n   },\n   {\n    \"usedBy\": \"ullamco minim\",\n    \"destination\": \"labore adipisicing dolore\",\n    \"port\": \"mollit id\",\n    \"rule\": \"ACCEPT\"\n   }\n  ]\n },\n \"gettingStartedCompleted\": true,\n \"integratedStorageSecuritySetupCompleted\": false,\n \"networks\": [\n  {\n   \"dnsServers\": [\n    \"proident in veniam\",\n    \"ex sit dolor nostrud\"\n   ],\n   \"fqdn\": \"tempor ullamco nulla irure\",\n   \"gateway\": \"ex\",\n   \"interfaceName\": \"et qui velit in adipisicing\",\n   \"ipAddress\": [\n    \"minim dolore laboris\",\n    \"dolor est commodo do anim\"\n   ],\n   \"ipAddressFamily\": \"sit d\",\n   \"netMask\": \"minim\",\n   \"nslookupSuccess\": false,\n   \"prefix\": \"aute Ut commodo incididunt\"\n  },\n  {\n   \"dnsServers\": [\n    \"adipisicing nostrud\",\n    \"i\"\n   ],\n   \"fqdn\": \"minim proident\",\n   \"gateway\": \"adipisicing\",\n   \"interfaceName\": \"dolor ea et\",\n   \"ipAddress\": [\n    \"mollit fugiat enim\",\n    \"sed consequat deserunt\"\n   ],\n   \"ipAddressFamily\": \"enim id\",\n   \"netMask\": \"id ut sint pariatur nostrud\",\n   \"nslookupSuccess\": true,\n   \"prefix\": \"minim\"\n  }\n ],\n \"nodeId\": \"ea aliquip in\",\n \"ntpServers\": [\n  \"est id Duis\",\n  \"nostrud laborum\"\n ]\n}"
										},
										{
											"name": "The submitted configuration has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"Duis id adipisicing eiusmod\",\n    \"applicationUserPassword\": \"ut est aute\",\n    \"timeZone\": \"nisi\",\n    \"lockbox\": {\n        \"newPassphrase\": \"mollit nulla pariatur\",\n        \"passphrase\": \"Excepteur eu et consequat\",\n        \"lastUpdatedTime\": \"officia minim labore\",\n        \"name\": \"adipisicing irure laboris nulla\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"laboris minim\",\n            \"password\": \"do\",\n            \"userName\": \"do dolor\",\n            \"description\": \"commodo\",\n            \"numberOfDaysToExpire\": 3159225\n        },\n        {\n            \"newPassword\": \"ea\",\n            \"password\": \"magna ut\",\n            \"userName\": \"Duis laboris in\",\n            \"description\": \"ut id irure dolor\",\n            \"numberOfDaysToExpire\": 50507959\n        }\n    ],\n    \"autoSupport\": false,\n    \"configType\": \"eu ut\",\n    \"deployedPlatform\": \"GCP\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"consectetur\",\n                \"destination\": \"pariatur eiusmod id\",\n                \"port\": \"commodo ut\",\n                \"rule\": \"ACCEPT\"\n            },\n            {\n                \"usedBy\": \"ullamco minim\",\n                \"destination\": \"labore adipisicing dolore\",\n                \"port\": \"mollit id\",\n                \"rule\": \"ACCEPT\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": true,\n    \"integratedStorageSecuritySetupCompleted\": false,\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"proident in veniam\",\n                \"ex sit dolor nostrud\"\n            ],\n            \"fqdn\": \"tempor ullamco nulla irure\",\n            \"gateway\": \"ex\",\n            \"interfaceName\": \"et qui velit in adipisicing\",\n            \"ipAddress\": [\n                \"minim dolore laboris\",\n                \"dolor est commodo do anim\"\n            ],\n            \"ipAddressFamily\": \"sit d\",\n            \"netMask\": \"minim\",\n            \"nslookupSuccess\": false,\n            \"prefix\": \"aute Ut commodo incididunt\"\n        },\n        {\n            \"dnsServers\": [\n                \"adipisicing nostrud\",\n                \"i\"\n            ],\n            \"fqdn\": \"minim proident\",\n            \"gateway\": \"adipisicing\",\n            \"interfaceName\": \"dolor ea et\",\n            \"ipAddress\": [\n                \"mollit fugiat enim\",\n                \"sed consequat deserunt\"\n            ],\n            \"ipAddressFamily\": \"enim id\",\n            \"netMask\": \"id ut sint pariatur nostrud\",\n            \"nslookupSuccess\": true,\n            \"prefix\": \"minim\"\n        }\n    ],\n    \"nodeId\": \"ea aliquip in\",\n    \"ntpServers\": [\n        \"est id Duis\",\n        \"nostrud laborum\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"Duis id adipisicing eiusmod\",\n    \"applicationUserPassword\": \"ut est aute\",\n    \"timeZone\": \"nisi\",\n    \"lockbox\": {\n        \"newPassphrase\": \"mollit nulla pariatur\",\n        \"passphrase\": \"Excepteur eu et consequat\",\n        \"lastUpdatedTime\": \"officia minim labore\",\n        \"name\": \"adipisicing irure laboris nulla\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"laboris minim\",\n            \"password\": \"do\",\n            \"userName\": \"do dolor\",\n            \"description\": \"commodo\",\n            \"numberOfDaysToExpire\": 3159225\n        },\n        {\n            \"newPassword\": \"ea\",\n            \"password\": \"magna ut\",\n            \"userName\": \"Duis laboris in\",\n            \"description\": \"ut id irure dolor\",\n            \"numberOfDaysToExpire\": 50507959\n        }\n    ],\n    \"autoSupport\": false,\n    \"configType\": \"eu ut\",\n    \"deployedPlatform\": \"GCP\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"consectetur\",\n                \"destination\": \"pariatur eiusmod id\",\n                \"port\": \"commodo ut\",\n                \"rule\": \"ACCEPT\"\n            },\n            {\n                \"usedBy\": \"ullamco minim\",\n                \"destination\": \"labore adipisicing dolore\",\n                \"port\": \"mollit id\",\n                \"rule\": \"ACCEPT\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": true,\n    \"integratedStorageSecuritySetupCompleted\": false,\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"proident in veniam\",\n                \"ex sit dolor nostrud\"\n            ],\n            \"fqdn\": \"tempor ullamco nulla irure\",\n            \"gateway\": \"ex\",\n            \"interfaceName\": \"et qui velit in adipisicing\",\n            \"ipAddress\": [\n                \"minim dolore laboris\",\n                \"dolor est commodo do anim\"\n            ],\n            \"ipAddressFamily\": \"sit d\",\n            \"netMask\": \"minim\",\n            \"nslookupSuccess\": false,\n            \"prefix\": \"aute Ut commodo incididunt\"\n        },\n        {\n            \"dnsServers\": [\n                \"adipisicing nostrud\",\n                \"i\"\n            ],\n            \"fqdn\": \"minim proident\",\n            \"gateway\": \"adipisicing\",\n            \"interfaceName\": \"dolor ea et\",\n            \"ipAddress\": [\n                \"mollit fugiat enim\",\n                \"sed consequat deserunt\"\n            ],\n            \"ipAddressFamily\": \"enim id\",\n            \"netMask\": \"id ut sint pariatur nostrud\",\n            \"nslookupSuccess\": true,\n            \"prefix\": \"minim\"\n        }\n    ],\n    \"nodeId\": \"ea aliquip in\",\n    \"ntpServers\": [\n        \"est id Duis\",\n        \"nostrud laborum\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot change the configuration in the current node state.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"Duis id adipisicing eiusmod\",\n    \"applicationUserPassword\": \"ut est aute\",\n    \"timeZone\": \"nisi\",\n    \"lockbox\": {\n        \"newPassphrase\": \"mollit nulla pariatur\",\n        \"passphrase\": \"Excepteur eu et consequat\",\n        \"lastUpdatedTime\": \"officia minim labore\",\n        \"name\": \"adipisicing irure laboris nulla\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"laboris minim\",\n            \"password\": \"do\",\n            \"userName\": \"do dolor\",\n            \"description\": \"commodo\",\n            \"numberOfDaysToExpire\": 3159225\n        },\n        {\n            \"newPassword\": \"ea\",\n            \"password\": \"magna ut\",\n            \"userName\": \"Duis laboris in\",\n            \"description\": \"ut id irure dolor\",\n            \"numberOfDaysToExpire\": 50507959\n        }\n    ],\n    \"autoSupport\": false,\n    \"configType\": \"eu ut\",\n    \"deployedPlatform\": \"GCP\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"consectetur\",\n                \"destination\": \"pariatur eiusmod id\",\n                \"port\": \"commodo ut\",\n                \"rule\": \"ACCEPT\"\n            },\n            {\n                \"usedBy\": \"ullamco minim\",\n                \"destination\": \"labore adipisicing dolore\",\n                \"port\": \"mollit id\",\n                \"rule\": \"ACCEPT\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": true,\n    \"integratedStorageSecuritySetupCompleted\": false,\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"proident in veniam\",\n                \"ex sit dolor nostrud\"\n            ],\n            \"fqdn\": \"tempor ullamco nulla irure\",\n            \"gateway\": \"ex\",\n            \"interfaceName\": \"et qui velit in adipisicing\",\n            \"ipAddress\": [\n                \"minim dolore laboris\",\n                \"dolor est commodo do anim\"\n            ],\n            \"ipAddressFamily\": \"sit d\",\n            \"netMask\": \"minim\",\n            \"nslookupSuccess\": false,\n            \"prefix\": \"aute Ut commodo incididunt\"\n        },\n        {\n            \"dnsServers\": [\n                \"adipisicing nostrud\",\n                \"i\"\n            ],\n            \"fqdn\": \"minim proident\",\n            \"gateway\": \"adipisicing\",\n            \"interfaceName\": \"dolor ea et\",\n            \"ipAddress\": [\n                \"mollit fugiat enim\",\n                \"sed consequat deserunt\"\n            ],\n            \"ipAddressFamily\": \"enim id\",\n            \"netMask\": \"id ut sint pariatur nostrud\",\n            \"nslookupSuccess\": true,\n            \"prefix\": \"minim\"\n        }\n    ],\n    \"nodeId\": \"ea aliquip in\",\n    \"ntpServers\": [\n        \"est id Duis\",\n        \"nostrud laborum\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Accepted and processing the initial configuration request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"Duis id adipisicing eiusmod\",\n    \"applicationUserPassword\": \"ut est aute\",\n    \"timeZone\": \"nisi\",\n    \"lockbox\": {\n        \"newPassphrase\": \"mollit nulla pariatur\",\n        \"passphrase\": \"Excepteur eu et consequat\",\n        \"lastUpdatedTime\": \"officia minim labore\",\n        \"name\": \"adipisicing irure laboris nulla\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"laboris minim\",\n            \"password\": \"do\",\n            \"userName\": \"do dolor\",\n            \"description\": \"commodo\",\n            \"numberOfDaysToExpire\": 3159225\n        },\n        {\n            \"newPassword\": \"ea\",\n            \"password\": \"magna ut\",\n            \"userName\": \"Duis laboris in\",\n            \"description\": \"ut id irure dolor\",\n            \"numberOfDaysToExpire\": 50507959\n        }\n    ],\n    \"autoSupport\": false,\n    \"configType\": \"eu ut\",\n    \"deployedPlatform\": \"GCP\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"consectetur\",\n                \"destination\": \"pariatur eiusmod id\",\n                \"port\": \"commodo ut\",\n                \"rule\": \"ACCEPT\"\n            },\n            {\n                \"usedBy\": \"ullamco minim\",\n                \"destination\": \"labore adipisicing dolore\",\n                \"port\": \"mollit id\",\n                \"rule\": \"ACCEPT\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": true,\n    \"integratedStorageSecuritySetupCompleted\": false,\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"proident in veniam\",\n                \"ex sit dolor nostrud\"\n            ],\n            \"fqdn\": \"tempor ullamco nulla irure\",\n            \"gateway\": \"ex\",\n            \"interfaceName\": \"et qui velit in adipisicing\",\n            \"ipAddress\": [\n                \"minim dolore laboris\",\n                \"dolor est commodo do anim\"\n            ],\n            \"ipAddressFamily\": \"sit d\",\n            \"netMask\": \"minim\",\n            \"nslookupSuccess\": false,\n            \"prefix\": \"aute Ut commodo incididunt\"\n        },\n        {\n            \"dnsServers\": [\n                \"adipisicing nostrud\",\n                \"i\"\n            ],\n            \"fqdn\": \"minim proident\",\n            \"gateway\": \"adipisicing\",\n            \"interfaceName\": \"dolor ea et\",\n            \"ipAddress\": [\n                \"mollit fugiat enim\",\n                \"sed consequat deserunt\"\n            ],\n            \"ipAddressFamily\": \"enim id\",\n            \"netMask\": \"id ut sint pariatur nostrud\",\n            \"nslookupSuccess\": true,\n            \"prefix\": \"minim\"\n        }\n    ],\n    \"nodeId\": \"ea aliquip in\",\n    \"ntpServers\": [\n        \"est id Duis\",\n        \"nostrud laborum\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"Duis id adipisicing eiusmod\",\n    \"applicationUserPassword\": \"ut est aute\",\n    \"timeZone\": \"nisi\",\n    \"lockbox\": {\n        \"newPassphrase\": \"mollit nulla pariatur\",\n        \"passphrase\": \"Excepteur eu et consequat\",\n        \"lastUpdatedTime\": \"officia minim labore\",\n        \"name\": \"adipisicing irure laboris nulla\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"laboris minim\",\n            \"password\": \"do\",\n            \"userName\": \"do dolor\",\n            \"description\": \"commodo\",\n            \"numberOfDaysToExpire\": 3159225\n        },\n        {\n            \"newPassword\": \"ea\",\n            \"password\": \"magna ut\",\n            \"userName\": \"Duis laboris in\",\n            \"description\": \"ut id irure dolor\",\n            \"numberOfDaysToExpire\": 50507959\n        }\n    ],\n    \"autoSupport\": false,\n    \"configType\": \"eu ut\",\n    \"deployedPlatform\": \"GCP\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"consectetur\",\n                \"destination\": \"pariatur eiusmod id\",\n                \"port\": \"commodo ut\",\n                \"rule\": \"ACCEPT\"\n            },\n            {\n                \"usedBy\": \"ullamco minim\",\n                \"destination\": \"labore adipisicing dolore\",\n                \"port\": \"mollit id\",\n                \"rule\": \"ACCEPT\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": true,\n    \"integratedStorageSecuritySetupCompleted\": false,\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"proident in veniam\",\n                \"ex sit dolor nostrud\"\n            ],\n            \"fqdn\": \"tempor ullamco nulla irure\",\n            \"gateway\": \"ex\",\n            \"interfaceName\": \"et qui velit in adipisicing\",\n            \"ipAddress\": [\n                \"minim dolore laboris\",\n                \"dolor est commodo do anim\"\n            ],\n            \"ipAddressFamily\": \"sit d\",\n            \"netMask\": \"minim\",\n            \"nslookupSuccess\": false,\n            \"prefix\": \"aute Ut commodo incididunt\"\n        },\n        {\n            \"dnsServers\": [\n                \"adipisicing nostrud\",\n                \"i\"\n            ],\n            \"fqdn\": \"minim proident\",\n            \"gateway\": \"adipisicing\",\n            \"interfaceName\": \"dolor ea et\",\n            \"ipAddress\": [\n                \"mollit fugiat enim\",\n                \"sed consequat deserunt\"\n            ],\n            \"ipAddressFamily\": \"enim id\",\n            \"netMask\": \"id ut sint pariatur nostrud\",\n            \"nslookupSuccess\": true,\n            \"prefix\": \"minim\"\n        }\n    ],\n    \"nodeId\": \"ea aliquip in\",\n    \"ntpServers\": [\n        \"est id Duis\",\n        \"nostrud laborum\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all configurations.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"configurations"
									]
								},
								"description": "Retrieves all PowerProtect Data Manager appliance configurations. Running GET on this API endpoint returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"eu dolor\",\n   \"applicationUserPassword\": \"mollit esse voluptate laboris\",\n   \"timeZone\": \"sunt Duis officia consequat\",\n   \"lockbox\": {\n    \"newPassphrase\": \"tempor exercitation occaecat ullamco\",\n    \"passphrase\": \"id culpa dolore\",\n    \"lastUpdatedTime\": \"sed ullamco\",\n    \"name\": \"dolore\"\n   },\n   \"osUsers\": [\n    {\n     \"newPassword\": \"dolor tempor\",\n     \"password\": \"ut ea do\",\n     \"userName\": \"sit occaecat ut labore nostrud\",\n     \"description\": \"cupidatat laboris irure ut Lorem\",\n     \"numberOfDaysToExpire\": 5558036\n    },\n    {\n     \"newPassword\": \"nostrud laboris eiusmod commodo\",\n     \"password\": \"occaecat dolore enim reprehenderit\",\n     \"userName\": \"deserunt nostrud amet dolore\",\n     \"description\": \"magna \",\n     \"numberOfDaysToExpire\": -29345509\n    }\n   ],\n   \"autoSupport\": true,\n   \"configType\": \"in est in nulla nisi\",\n   \"deployedPlatform\": \"VMC\",\n   \"firewall\": {\n    \"outbounds\": [\n     {\n      \"usedBy\": \"mollit Ut\",\n      \"destination\": \"ullamco pariatur\",\n      \"port\": \"voluptate mollit nostrud occaecat\",\n      \"rule\": \"ACCEPT\"\n     },\n     {\n      \"usedBy\": \"laborum mollit ullamco\",\n      \"destination\": \"consectetur non\",\n      \"port\": \"quis\",\n      \"rule\": \"ACCEPT\"\n     }\n    ]\n   },\n   \"gettingStartedCompleted\": false,\n   \"integratedStorageSecuritySetupCompleted\": true,\n   \"networks\": [\n    {\n     \"dnsServers\": [\n      \"proident\",\n      \"laborum aliquip\"\n     ],\n     \"fqdn\": \"proident consectetur\",\n     \"gateway\": \"exercitation commodo nostrud Excepteur culpa\",\n     \"interfaceName\": \"ea incididunt\",\n     \"ipAddress\": [\n      \"mollit deserunt\",\n      \"eu quis velit esse aliquip\"\n     ],\n     \"ipAddressFamily\": \"enim dolor irure\",\n     \"netMask\": \"labore\",\n     \"nslookupSuccess\": true,\n     \"prefix\": \"ullamco Ut sint do cupidatat\"\n    },\n    {\n     \"dnsServers\": [\n      \"consequat labore\",\n      \"est eu\"\n     ],\n     \"fqdn\": \"nostrud sit\",\n     \"gateway\": \"amet do Duis\",\n     \"interfaceName\": \"aute in aliquip\",\n     \"ipAddress\": [\n      \"ipsum Duis nostrud\",\n      \"dolor incididunt \"\n     ],\n     \"ipAddressFamily\": \"elit dolor cillum deserunt\",\n     \"netMask\": \"laborum Duis\",\n     \"nslookupSuccess\": true,\n     \"prefix\": \"commodo nostrud\"\n    }\n   ],\n   \"nodeId\": \"qui est culpa eiusmod\",\n   \"ntpServers\": [\n    \"aliquip labore ea\",\n    \"enim Duis irure laborum\"\n   ]\n  },\n  {\n   \"id\": \"commo\",\n   \"applicationUserPassword\": \"adipisicing do occaecat\",\n   \"timeZone\": \"sed \",\n   \"lockbox\": {\n    \"newPassphrase\": \"eu exercitation est consectetur ullamco\",\n    \"passphrase\": \"commodo in cillum\",\n    \"lastUpdatedTime\": \"sed\",\n    \"name\": \"proident do\"\n   },\n   \"osUsers\": [\n    {\n     \"newPassword\": \"sunt dolor in esse ex\",\n     \"password\": \"in irure\",\n     \"userName\": \"occaecat Excepteur ex consequat\",\n     \"description\": \"dolor\",\n     \"numberOfDaysToExpire\": -2935764\n    },\n    {\n     \"newPassword\": \"in dolor officia\",\n     \"password\": \"nisi sint anim\",\n     \"userName\": \"commodo\",\n     \"description\": \"ullamco et\",\n     \"numberOfDaysToExpire\": -67885338\n    }\n   ],\n   \"autoSupport\": false,\n   \"configType\": \"pariatur cillum elit ipsum incididunt\",\n   \"deployedPlatform\": \"AWS\",\n   \"firewall\": {\n    \"outbounds\": [\n     {\n      \"usedBy\": \"Lorem aute laborum dolor\",\n      \"destination\": \"sint officia est dolor\",\n      \"port\": \"mollit\",\n      \"rule\": \"ACCEPT\"\n     },\n     {\n      \"usedBy\": \"esse fugiat minim dolore ullamco\",\n      \"destination\": \"reprehenderit deserunt ea\",\n      \"port\": \"qui laboris\",\n      \"rule\": \"ACCEPT\"\n     }\n    ]\n   },\n   \"gettingStartedCompleted\": false,\n   \"integratedStorageSecuritySetupCompleted\": true,\n   \"networks\": [\n    {\n     \"dnsServers\": [\n      \"dolore fugiat\",\n      \"sed ut laboris amet\"\n     ],\n     \"fqdn\": \"sunt\",\n     \"gateway\": \"laborum\",\n     \"interfaceName\": \"esse eiusm\",\n     \"ipAddress\": [\n      \"dolore dolor\",\n      \"ullamco laboris esse\"\n     ],\n     \"ipAddressFamily\": \"eu fugiat\",\n     \"netMask\": \"tempor\",\n     \"nslookupSuccess\": true,\n     \"prefix\": \"laboris non cupidatat\"\n    },\n    {\n     \"dnsServers\": [\n      \"officia\",\n      \"cillum aliquip\"\n     ],\n     \"fqdn\": \"sint do elit ipsum et\",\n     \"gateway\": \"ali\",\n     \"interfaceName\": \"deserunt Duis magna sunt veniam\",\n     \"ipAddress\": [\n      \"deserunt non pariatur sit\",\n      \"in\"\n     ],\n     \"ipAddressFamily\": \"aute amet et\",\n     \"netMask\": \"mollit minim\",\n     \"nslookupSuccess\": true,\n     \"prefix\": \"do mollit aliquip dolor\"\n    }\n   ],\n   \"nodeId\": \"pariatur enim\",\n   \"ntpServers\": [\n    \"culpa aute est exercitation\",\n    \"ut\"\n   ]\n  }\n ],\n \"page\": {\n  \"number\": -25467253,\n  \"queryState\": \"eiusmod ullamco aliqua labo\",\n  \"size\": -27794374,\n  \"totalElements\": 84021718,\n  \"totalPages\": 21852735\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the progress of initial configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"configurations",
										":configurationId",
										"config-status"
									],
									"variable": [
										{
											"key": "configurationId",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) Configuration ID."
										}
									]
								},
								"description": "Retrieves the progress of the initial configuration. The configuration ID must first be obtained by running GET on the configurations API, which returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot find a configuration status with the given ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Located and returned the available configuration status successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"completedStage\": [\n   {\n    \"description\": \"aliquip ex\",\n    \"endTime\": \"1967-08-26T15:22:04.905Z\",\n    \"startTime\": \"1979-03-22T11:11:35.291Z\",\n    \"status\": \"PROGRESS\"\n   },\n   {\n    \"description\": \"do incididunt et exercitation\",\n    \"endTime\": \"1973-02-18T11:48:05.877Z\",\n    \"startTime\": \"1975-05-21T19:00:58.422Z\",\n    \"status\": \"FAILED\"\n   }\n  ],\n  \"currentStage\": {\n   \"description\": \"nisi deserunt ex\",\n   \"endTime\": \"2012-04-23T06:11:15.361Z\",\n   \"startTime\": \"1955-08-03T17:46:21.779Z\",\n   \"status\": \"SUCCESS\"\n  },\n  \"endTime\": \"esse non et\",\n  \"percentageCompleted\": -73050479,\n  \"startTime\": \"consequat labore\",\n  \"status\": \"PROGRESS\"\n },\n {\n  \"completedStage\": [\n   {\n    \"description\": \"ea adipisicing\",\n    \"endTime\": \"2014-01-09T06:51:38.721Z\",\n    \"startTime\": \"2012-12-05T06:43:44.932Z\",\n    \"status\": \"FAILED\"\n   },\n   {\n    \"description\": \"eius\",\n    \"endTime\": \"1980-02-03T12:53:32.569Z\",\n    \"startTime\": \"1976-12-01T23:05:19.651Z\",\n    \"status\": \"PROGRESS\"\n   }\n  ],\n  \"currentStage\": {\n   \"description\": \"reprehenderit sed exercitation\",\n   \"endTime\": \"1994-08-06T16:39:47.148Z\",\n   \"startTime\": \"1978-12-19T02:57:54.814Z\",\n   \"status\": \"FAILED\"\n  },\n  \"endTime\": \"Lorem dol\",\n  \"percentageCompleted\": 46570592,\n  \"startTime\": \"nisi culpa quis tempor\",\n  \"status\": \"PROGRESS\"\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "copies/{id}",
					"item": [
						{
							"name": "cloud",
							"item": [
								{
									"name": "Recall and retier a copy from cloud.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"RETIER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"cloud"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the copy."
												}
											]
										},
										"description": "Recall and retier a copy from cloud. The header should contain a valid authentication token. Retier and retention time is required.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully create the copy.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"RECALL\",\n \"retierRetentionTime\": \"labore dolor\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update recall and retier a copy retier time from cloud.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"RETIER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"cloud"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the copy."
												}
											]
										},
										"description": "Update recall and retier a copy retier time from cloud. Only retier retention time can be updated. Retier retention time is required.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the copy.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"RECALL\",\n \"retierRetentionTime\": \"labore dolor\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete copy by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies",
										":id"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false",
											"description": "For asset type without dependency, this option makes no difference. For asset type with dependency between copies:\n- cascadeDelete=true deletes all copies in the dependency chain.\n- cascadeDelete=false does not delete any copy with HTTP status code of 409 (Conflict).\n- By default, when cascadeDelete is not specified, it operates as if cascadeDelete is false."
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false",
											"description": "- removeConfigurationOnly=true only deletes metadata from PowerProtect Data Manager without physically deleting from storage or application agent.\n- removeConfigurationOnly=false deletes copy from storage and application agent (if any). If successfully deleted from storage and application agent, then it deletes metadata from PowerProtect Data Manager.\n- By default, when removeConfigurationOnly is not specified, it operates as if removeConfigurationOnly is false."
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false",
											"description": "- forceRemoveLatestBackup=true enables deleting the latest backup. It may break the later chain, or for VM CBT backup, it may break the in-progress backup.\n- forceRemoveLatestBackup=false, if the specified copy is the latest backup, produces HTTP error 409 (Conflict).\n- By default, when forceRemoveLatestBackup is not specified, it operates as if removeConfigurationOnly is false."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) ID of the copy."
										}
									]
								},
								"description": "Deletes copy by ID.\n> This endpoint supports execution by the following roles: user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The copy could not be deleted because of a dependency issue. Examples of dependency issues include retention lock, dependency copies could not be deleted, restoring, or cloud tiering, or cloud recalling.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Success.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"copyIds\": [\n  \"cillu\",\n  \"Lorem Duis aliquip\"\n ],\n \"activityId\": \"sit enim\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The copy to be deleted is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Get copy by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) ID of the copy."
										}
									]
								},
								"description": "Retrieves a copy by its ID. The copy defines asset backup. Each copy is assigned to an asset. A asset can correspond to many copies.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned copy.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"adhocBackup\": false,\n \"assetId\": \"deserunt anim\",\n \"backupTransactionId\": \"cupidatat Duis irure aliquip\",\n \"baseCopyId\": \"nisi commodo ut\",\n \"copyConsistency\": \"CRASH_CONSISTENT\",\n \"copyType\": \"SPFILE\",\n \"createTime\": \"1970-11-12T00:12:12.616Z\",\n \"dataTargetIds\": [\n  \"dolore nulla\",\n  \"velit consequat et d\"\n ],\n \"details\": {\n  \"k8sBackup\": {\n   \"backupId\": \"tempor pariatur ut\",\n   \"persistentVolumeClaims\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  \"mssqlBackup\": {\n   \"protectionFlowEngine\": \"VMDIRECT\"\n  },\n  \"nasBackup\": {\n   \"directoryCount\": \"exercitation aliqua amet fugiat\",\n   \"fileCount\": \"dolore\",\n   \"snapshotMetadata\": {\n    \"id\": \"irure qui consectetur v\",\n    \"name\": \"officia fugiat velit labore enim\",\n    \"path\": \"Excepteur ipsum ullamco occaecat\",\n    \"pathId\": \"deserunt dolore veniam\"\n   }\n  },\n  \"vmBackup\": {\n   \"dataMoverType\": \"VADP\"\n  }\n },\n \"endTime\": \"1998-01-07T15:39:38.929Z\",\n \"exportedCopyCount\": 18439821,\n \"externalId\": \"consectetur dolore voluptate officia\",\n \"id\": \"sint officia Excepteur commodo\",\n \"location\": \"CLOUD\",\n \"logCount\": \"amet in enim\",\n \"metadataIndexingStatus\": \"PARTIAL_SUCCESS\",\n \"partialCopy\": false,\n \"partialCopyDescription\": \"\",\n \"protectionCreated\": false,\n \"protectionPolicy\": {\n  \"id\": \"culpa Duis non\",\n  \"stages\": [\n   {\n    \"id\": \"ullamco officia\",\n    \"ownedTime\": \"1976-08-23T15:48:58.842Z\",\n    \"type\": \"ALL\"\n   },\n   {\n    \"id\": \"pariatur in sunt\",\n    \"ownedTime\": \"1989-02-25T07:32:41.914Z\",\n    \"type\": \"REPLICATION\"\n   }\n  ]\n },\n \"replicatedCopy\": false,\n \"restoreTargetCompatibilities\": [\n  {\n   \"compatibilityFailureReason\": \"aliquip sunt\",\n   \"targetName\": \"commodo enim dolore qui\",\n   \"type\": \"INCOMPATIBLE\"\n  },\n  {\n   \"compatibilityFailureReason\": \"irure amet laboris ullamco\",\n   \"targetName\": \"esse Duis Lorem exercita\",\n   \"type\": \"COMPATIBLE\"\n  }\n ],\n \"retentionLock\": \"ALL_COPIES_LOCKED\",\n \"retentionTime\": \"1966-03-13T05:44:26.758Z\",\n \"retierTime\": \"2020-09-24T17:06:10.512Z\",\n \"size\": 76312823,\n \"startTime\": \"1989-03-09T04:26:09.085Z\",\n \"state\": \"READY_FOR_CLOUD_TIERING\",\n \"storageSystemId\": \"anim mollit\",\n \"validationResult\": {\n  \"status\": \"eiusmod non n\",\n  \"time\": \"2004-08-07T00:34:03.066Z\"\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Get copy logs by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies",
										":id",
										"logs"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) ID of the copy."
										}
									]
								},
								"description": "Retrieves copy logs by ID. The parameter ID is the ID of a full copy. It returns BAD_REQUEST if parameter ID is invalid.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned copy logs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"date\": \"1997-10-21T08:15:37.870Z\",\n   \"id\": \"dolor anim\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"voluptate commodo magna dolor\",\n   \"sizeBytes\": 29422491\n  },\n  {\n   \"date\": \"1994-02-28T18:20:58.400Z\",\n   \"id\": \"irure culpa ea tempor\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"labore occaecat tempor in\",\n   \"sizeBytes\": -78194312\n  }\n ],\n \"page\": {\n  \"number\": 60175271,\n  \"queryState\": \"qui amet Lorem deserun\",\n  \"size\": -92063147,\n  \"totalElements\": 93747280,\n  \"totalPages\": 22140032\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "credentials",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete credential by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the credential."
												}
											]
										},
										"description": "Deletes a **Credential** by ID from PowerProtect Data Manager. The deleted **Credential** is removed from PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully deleted the credential.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get a credential by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the credential."
												}
											]
										},
										"description": "Retrieves a **Credential** by ID. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the credential.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"ex \",\n \"username\": \"deserunt dolore adipisicing aliquip\",\n \"password\": \"pariatur in Du\",\n \"type\": \"SMISSERVER\",\n \"id\": \"dolor nost\",\n \"internal\": true,\n \"method\": \"TOKEN\",\n \"secretId\": \"ullamco eiusmod laboris\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested credential does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update credential by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the credential."
												}
											]
										},
										"description": "Updates a **Credential** by ID. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the credential.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"ex \",\n \"username\": \"deserunt dolore adipisicing aliquip\",\n \"password\": \"pariatur in Du\",\n \"type\": \"SMISSERVER\",\n \"id\": \"dolor nost\",\n \"internal\": true,\n \"method\": \"TOKEN\",\n \"secretId\": \"ullamco eiusmod laboris\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all credentials.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all **Credentials** in PowerProtect Data Manager. **Credentials** contains username and password or token. The password is securely stored in the lockbox of PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available credentials.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"eiusmod Ut et officia\",\n   \"username\": \"qui ex proident ad\",\n   \"password\": \"Ut\",\n   \"type\": \"DBUSER\",\n   \"id\": \"dolor Duis amet\",\n   \"internal\": true,\n   \"method\": \"CONFIG\",\n   \"secretId\": \"elit veniam labore\"\n  },\n  {\n   \"name\": \"laboris enim id aliquip commodo\",\n   \"username\": \"Ut occaecat ut dolore\",\n   \"password\": \"dolore dolore ullamco e\",\n   \"type\": \"DATADOMAIN\",\n   \"id\": \"enim labore\",\n   \"internal\": true,\n   \"method\": \"BASIC\",\n   \"secretId\": \"tempor Ut sed in\"\n  }\n ],\n \"page\": {\n  \"number\": 66602683,\n  \"queryState\": \"exercitation velit Duis veniam\",\n  \"size\": -97874050,\n  \"totalElements\": -31112213,\n  \"totalPages\": -62034026\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create a credential.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials"
									]
								},
								"description": "Creates a **Credential** in PowerProtect Data Manager. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully created the credential.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"ex \",\n \"username\": \"deserunt dolore adipisicing aliquip\",\n \"password\": \"pariatur in Du\",\n \"type\": \"SMISSERVER\",\n \"id\": \"dolor nost\",\n \"internal\": true,\n \"method\": \"TOKEN\",\n \"secretId\": \"ullamco eiusmod laboris\"\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"ex \",\n \"username\": \"deserunt dolore adipisicing aliquip\",\n \"password\": \"pariatur in Du\",\n \"type\": \"SMISSERVER\",\n \"id\": \"dolor nost\",\n \"internal\": true,\n \"method\": \"TOKEN\",\n \"secretId\": \"ullamco eiusmod laboris\"\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"dolore\",\n    \"username\": \"dolore eiusmod dolor\",\n    \"password\": \"incididunt laboris\",\n    \"type\": \"SMISSERVER\",\n    \"id\": \"labore aliquip dolore\",\n    \"internal\": true,\n    \"method\": \"CONFIG\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "data-targets",
					"item": [
						{
							"name": "Get all data targets.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"data-targets"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all data targets. These data targets are automatically generated by storage systems. This API request returns a list of data targets.  An empty list is returned if there are no data sources. Filtering is supported for asterisked properties. Paging is supported.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": {\n  \"replica\": false\n },\n \"externalId\": \"consectetur sit pariatur\",\n \"id\": \"Ut dolore consequat\",\n \"lastDiscovered\": \"1997-08-16T10:35:38.909Z\",\n \"lastDiscoveryStatus\": \"DETECTED\",\n \"name\": \"et reprehenderit eu\",\n \"storageArrayId\": \"elit ullamco sunt\",\n \"subtype\": \"CDR_CONTAINER\",\n \"type\": \"GROUP\",\n \"vendor\": \"VMAX\"\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Get a data target by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/data-targets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"data-targets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) id of the data target"
										}
									]
								},
								"description": "Retrieves a data target by its ID. This API request returns a data target. If the data target ID does not exist, 404 is returned.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": {\n  \"replica\": false\n },\n \"externalId\": \"consectetur sit pariatur\",\n \"id\": \"Ut dolore consequat\",\n \"lastDiscovered\": \"1997-08-16T10:35:38.909Z\",\n \"lastDiscoveryStatus\": \"DETECTED\",\n \"name\": \"et reprehenderit eu\",\n \"storageArrayId\": \"elit ullamco sunt\",\n \"subtype\": \"CDR_CONTAINER\",\n \"type\": \"GROUP\",\n \"vendor\": \"VMAX\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requested resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "datadomain-ddboost-encryption-settings",
					"item": [
						{
							"name": "Get Data Domain system encryption setting.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=aute ut id cillum aliqua&port=2638346&type=aute ut id cillum aliqua&credentialId=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-ddboost-encryption-settings"
									],
									"query": [
										{
											"key": "hostname",
											"value": "aute ut id cillum aliqua",
											"description": "(Required) The hostname."
										},
										{
											"key": "port",
											"value": "2638346",
											"description": "(Required) The port number."
										},
										{
											"key": "type",
											"value": "aute ut id cillum aliqua",
											"description": "(Required) The encrytion type."
										},
										{
											"key": "credentialId",
											"value": "aute ut id cillum aliqua",
											"description": "(Required) The credential ID."
										}
									]
								},
								"description": "Retrieves Data Domain system encryption setting information of the specified Data Domain system or PowerProtect Data Manager. The result contains the authentication mode and the encryption strength information.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=aute ut id cillum aliqua&port=2638346&type=aute ut id cillum aliqua&credentialId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "2638346"
												},
												{
													"key": "type",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "credentialId",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=aute ut id cillum aliqua&port=2638346&type=aute ut id cillum aliqua&credentialId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "2638346"
												},
												{
													"key": "type",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "credentialId",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=aute ut id cillum aliqua&port=2638346&type=aute ut id cillum aliqua&credentialId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "2638346"
												},
												{
													"key": "type",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "credentialId",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=aute ut id cillum aliqua&port=2638346&type=aute ut id cillum aliqua&credentialId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "2638346"
												},
												{
													"key": "type",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "credentialId",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"ddboostOptions\": {\n  \"globalAuthenticationMode\": \"magna Ut esse est et\",\n  \"globalEncryptionStrength\": \"aliqua mollit eu\"\n },\n \"hostname\": \"cillum\",\n \"replicationOptions\": {\n  \"authenticationMode\": \"eiusmod laborum eu Duis\",\n  \"encryption\": \"s\"\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=aute ut id cillum aliqua&port=2638346&type=aute ut id cillum aliqua&credentialId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "port",
													"value": "2638346"
												},
												{
													"key": "type",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "credentialId",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Data Domain system encryption setting.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"magna Ut esse est et\",\n        \"globalEncryptionStrength\": \"aliqua mollit eu\"\n    },\n    \"hostname\": \"cillum\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"eiusmod laborum eu Duis\",\n        \"encryption\": \"s\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-ddboost-encryption-settings"
									]
								},
								"description": "Updates Data Domain system encryption setting of the local PowerProtect Data Manager. The encryption settings will be updated on the local Intergrated Storage system.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"magna Ut esse est et\",\n        \"globalEncryptionStrength\": \"aliqua mollit eu\"\n    },\n    \"hostname\": \"cillum\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"eiusmod laborum eu Duis\",\n        \"encryption\": \"s\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"magna Ut esse est et\",\n        \"globalEncryptionStrength\": \"aliqua mollit eu\"\n    },\n    \"hostname\": \"cillum\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"eiusmod laborum eu Duis\",\n        \"encryption\": \"s\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"magna Ut esse est et\",\n        \"globalEncryptionStrength\": \"aliqua mollit eu\"\n    },\n    \"hostname\": \"cillum\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"eiusmod laborum eu Duis\",\n        \"encryption\": \"s\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"magna Ut esse est et\",\n        \"globalEncryptionStrength\": \"aliqua mollit eu\"\n    },\n    \"hostname\": \"cillum\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"eiusmod laborum eu Duis\",\n        \"encryption\": \"s\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"ddboostOptions\": {\n  \"globalAuthenticationMode\": \"magna Ut esse est et\",\n  \"globalEncryptionStrength\": \"aliqua mollit eu\"\n },\n \"hostname\": \"cillum\",\n \"replicationOptions\": {\n  \"authenticationMode\": \"eiusmod laborum eu Duis\",\n  \"encryption\": \"s\"\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"magna Ut esse est et\",\n        \"globalEncryptionStrength\": \"aliqua mollit eu\"\n    },\n    \"hostname\": \"cillum\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"eiusmod laborum eu Duis\",\n        \"encryption\": \"s\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "discoveries",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a discovery by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The UUID of the internal discovery model stored in Elasticsearch."
												}
											]
										},
										"description": "Deletes a discovery that is identified by a specified ID. If the discovery that is identified by the specified ID is already running, the API returns an error with HTTP status code 409 (CONFLICT). If the discovery is deleted successfully, this API returns the HTTP status code 204 (NO CONTENT).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully deleted the discovery.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "A similar discovery request is currently processing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update a discovery by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The UUID of the internal discovery model stored in Elasticsearch."
												}
											]
										},
										"description": "Updates a discovery that is identified by a specified ID. Use this API to update the scheduled start time (hour and minute) when a discovery re-runs each day or set whether that scheduled discovery is enabled. If the server is in the quiesce state before a backup, the API returns the HTTP status code 503 (SERVICE UNAVAILABLE). If the discovery is updated successfully, the API returns the HTTP status code 200 (OK).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Server in quiesce state prior to a backup.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the discovery.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"start\": \"magna incididunt dolore\",\n \"description\": \"Duis ei\",\n \"id\": \"do id\",\n \"level\": \"DataCopies\",\n \"name\": \"voluptate\",\n \"schedule\": {\n  \"enabled\": false,\n  \"startHour\": 2,\n  \"startMinute\": 0\n },\n \"taskId\": \"irure cillum adipisicing\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all discoveries.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"discoveries"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves a paginated list of discoveries. You can specify the page number and the page size by using **page** and **pageSize** query parameters respectively. By default, a list of all discovery objects is returned. This API also supports a **filter** query parameter that returns discovery objects that match a specified set of conditions. This API supports an **orderby** query parameter to specify how the returned list of discovery objects is sorted. When successful, the API returns the HTTP status code 200 (OK).\n\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "Successfully returned known discoveries.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"start\": \"quis exercitation elit et\",\n   \"description\": \"do sint\",\n   \"id\": \"dolor quis id nisi do\",\n   \"level\": \"DataCopies\",\n   \"name\": \"ex ea dolore\",\n   \"schedule\": {\n    \"enabled\": false,\n    \"startHour\": 2,\n    \"startMinute\": 0\n   },\n   \"taskId\": \"esse consequat exercitation in\"\n  },\n  {\n   \"start\": \"consequat enim minim\",\n   \"description\": \"cupidatat sunt\",\n   \"id\": \"ad\",\n   \"level\": \"DataCopies\",\n   \"name\": \"mollit aliqua ullamco\",\n   \"schedule\": {\n    \"enabled\": false,\n    \"startHour\": 2,\n    \"startMinute\": 0\n   },\n   \"taskId\": \"culpa esse exercit\"\n  }\n ],\n \"page\": {\n  \"number\": -50068946,\n  \"queryState\": \"esse sint voluptate deserunt irure\",\n  \"size\": 3589623,\n  \"totalElements\": 15160641,\n  \"totalPages\": -564541\n }\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Request a discovery.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/discoveries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"discoveries"
									]
								},
								"description": "Runs a discovery that is identified by a specified **start** value. If the discovery that is identified by the specified **start** value is already running, the API returns an error with HTTP status code 409 (CONFLICT). If the discovery starts successfully, the API returns the HTTP status code 202 (ACCEPTED).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully accepted the discovery request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"start\": \"magna incididunt dolore\",\n \"description\": \"Duis ei\",\n \"id\": \"do id\",\n \"level\": \"DataCopies\",\n \"name\": \"voluptate\",\n \"schedule\": {\n  \"enabled\": false,\n  \"startHour\": 2,\n  \"startMinute\": 0\n },\n \"taskId\": \"irure cillum adipisicing\"\n}"
								},
								{
									"name": "A similar discovery request is currently processing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"magna incididunt dolore\",\n    \"description\": \"Duis ei\",\n    \"id\": \"do id\",\n    \"level\": \"DataCopies\",\n    \"name\": \"voluptate\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"irure cillum adipisicing\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "disks",
					"item": [
						{
							"name": "Get all disks in the appliance.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/disks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"disks"
									]
								},
								"description": "Retrieves all disks in the appliance.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Located and returned the available disks successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"availableSize\": 63453672,\n   \"id\": \"et tempor Lorem\",\n   \"name\": \"aliqua dolore occaecat Excepteur\",\n   \"nodeId\": \"dolore ut\",\n   \"partitions\": [\n    {\n     \"availableSize\": -37611701,\n     \"fileSystem\": \"ex voluptate dolor aute\",\n     \"mount\": \"ut Excepteur\",\n     \"name\": \"culpa aliqua dolor dolor\",\n     \"totalSize\": -6390808\n    },\n    {\n     \"availableSize\": 72406895,\n     \"fileSystem\": \"ut\",\n     \"mount\": \"com\",\n     \"name\": \"voluptate co\",\n     \"totalSize\": 11531542\n    }\n   ],\n   \"totalSize\": -85261766\n  },\n  {\n   \"availableSize\": 5496600,\n   \"id\": \"irure\",\n   \"name\": \"consectetur mollit magna in\",\n   \"nodeId\": \"cupidatat fugiat reprehenderit\",\n   \"partitions\": [\n    {\n     \"availableSize\": -4096552,\n     \"fileSystem\": \"labore ut incidi\",\n     \"mount\": \"Duis\",\n     \"name\": \"sint deserunt\",\n     \"totalSize\": -51636556\n    },\n    {\n     \"availableSize\": 30847205,\n     \"fileSystem\": \"est nostrud\",\n     \"mount\": \"ullamco\",\n     \"name\": \"sunt dolore veniam\",\n     \"totalSize\": 38479551\n    }\n   ],\n   \"totalSize\": -17029792\n  }\n ],\n \"page\": {\n  \"number\": 20722582,\n  \"queryState\": \"sit nisi labore\",\n  \"size\": 93689122,\n  \"totalElements\": 82903235,\n  \"totalPages\": -13050643\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get disk by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/disks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"disks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) Disk ID."
										}
									]
								},
								"description": "Retrieves a disk by ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Found and returned the disk with the specified ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"availableSize\": -23838233,\n \"id\": \"ad ut elit tempor anim\",\n \"name\": \"elit\",\n \"nodeId\": \"id cupidatat aliquip\",\n \"partitions\": [\n  {\n   \"availableSize\": 79044494,\n   \"fileSystem\": \"dolor proident reprehenderit\",\n   \"mount\": \"dolo\",\n   \"name\": \"Duis in do veniam\",\n   \"totalSize\": -73616119\n  },\n  {\n   \"availableSize\": -49069658,\n   \"fileSystem\": \"adipisicing id ea commodo\",\n   \"mount\": \"aliqua consectetur\",\n   \"name\": \"aute veniam\",\n   \"totalSize\": 35685461\n  }\n ],\n \"totalSize\": 2236987\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot find a disk with the specified ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "dynamic-filters",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete dynamic filter by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the dynamic filter."
												}
											]
										},
										"description": "Deletes dynamic filter by specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully deleted the dynamic filter.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a dynamic filter by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the dynamic filter."
												}
											]
										},
										"description": "Retrieves a dynamic filter by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requested dynamic filter does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the dynamic filter.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"enim consectetur occaecat ipsum\",\n \"action\": \"NOT_SUPPORTED\",\n \"actionResult\": \"elit aliquip do\",\n \"conditions\": [\n  {\n   \"assetAttributeName\": \"enim consequat\",\n   \"assetAttributeValue\": \"labore sit dolore\",\n   \"operator\": \"GREATER_THAN\"\n  },\n  {\n   \"assetAttributeName\": \"voluptate nulla quis\",\n   \"assetAttributeValue\": \"ipsum pariatur tempor\",\n   \"operator\": \"EQUALS\"\n  }\n ],\n \"conditionConnector\": \"OR\",\n \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n \"priority\": 79405956,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod exercitation\",\n   \"name\": \"sunt ea velit nostrud\",\n   \"protectionEngine\": \"fugiat nisi Duis\",\n   \"type\": \"nis\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"amet dolore est\",\n   \"name\": \"dolore in esse \",\n   \"protectionEngine\": \"dolor magna dolore\",\n   \"type\": \"incididunt veniam aliquip\"\n  },\n  \"storageSystem\": {\n   \"id\": \"nisi\",\n   \"name\": \"ullamco officia Excepteur\"\n  }\n },\n \"assignedAssetsCount\": -52895295,\n \"description\": \"minim amet\",\n \"displayDescription\": \"ea consectetur reprehenderit\",\n \"id\": \"dolore mollit et in\",\n \"lastRunAt\": \"2020-05-04T03:06:36.158Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"cupid\"\n }\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update dynamic filter by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the dynamic filter."
												}
											]
										},
										"description": "Update dynamic filter by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the dynamic filter.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"enim consectetur occaecat ipsum\",\n \"action\": \"NOT_SUPPORTED\",\n \"actionResult\": \"elit aliquip do\",\n \"conditions\": [\n  {\n   \"assetAttributeName\": \"enim consequat\",\n   \"assetAttributeValue\": \"labore sit dolore\",\n   \"operator\": \"GREATER_THAN\"\n  },\n  {\n   \"assetAttributeName\": \"voluptate nulla quis\",\n   \"assetAttributeValue\": \"ipsum pariatur tempor\",\n   \"operator\": \"EQUALS\"\n  }\n ],\n \"conditionConnector\": \"OR\",\n \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n \"priority\": 79405956,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod exercitation\",\n   \"name\": \"sunt ea velit nostrud\",\n   \"protectionEngine\": \"fugiat nisi Duis\",\n   \"type\": \"nis\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"amet dolore est\",\n   \"name\": \"dolore in esse \",\n   \"protectionEngine\": \"dolor magna dolore\",\n   \"type\": \"incididunt veniam aliquip\"\n  },\n  \"storageSystem\": {\n   \"id\": \"nisi\",\n   \"name\": \"ullamco officia Excepteur\"\n  }\n },\n \"assignedAssetsCount\": -52895295,\n \"description\": \"minim amet\",\n \"displayDescription\": \"ea consectetur reprehenderit\",\n \"id\": \"dolore mollit et in\",\n \"lastRunAt\": \"2020-05-04T03:06:36.158Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"cupid\"\n }\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all dynamic filters.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all dynamic filters\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available dynamic filters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"pariatur eu occaecat qui\",\n   \"action\": \"NOT_SUPPORTED\",\n   \"actionResult\": \"Duis voluptate\",\n   \"conditions\": [\n    {\n     \"assetAttributeName\": \"cupidatat elit\",\n     \"assetAttributeValue\": \"sit occaecat\",\n     \"operator\": \"LESS_THAN\"\n    },\n    {\n     \"assetAttributeName\": \"commodo elit amet\",\n     \"assetAttributeValue\": \"Excepteur velit\",\n     \"operator\": \"LESS_THAN\"\n    }\n   ],\n   \"conditionConnector\": \"OR\",\n   \"inventorySourceType\": \"FILE_SYSTEM\",\n   \"priority\": 22098955,\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"do Ut eu\",\n     \"name\": \"Ut eu fugiat nulla\",\n     \"protectionEngine\": \"dolor aliquip incididunt culpa\",\n     \"type\": \"incididunt\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"Ut sit\",\n     \"name\": \"aliqua labore dolor ex\",\n     \"protectionEngine\": \"consequat aute nisi aliquip\",\n     \"type\": \"irure nostrud laborum\"\n    },\n    \"storageSystem\": {\n     \"id\": \"tempor\",\n     \"name\": \"cupidatat dolor in\"\n    }\n   },\n   \"assignedAssetsCount\": 23060794,\n   \"description\": \"ea dolor velit mollit eiusmod\",\n   \"displayDescription\": \"consectetur\",\n   \"id\": \"occaecat nisi\",\n   \"lastRunAt\": \"1974-12-24T10:32:23.579Z\",\n   \"managedBy\": \"null\",\n   \"tenant\": {\n    \"id\": \"dolore culpa\"\n   }\n  },\n  {\n   \"name\": \"veniam et anim do\",\n   \"action\": \"MOVE_TO_GROUP\",\n   \"actionResult\": \"do adipisicing aliq\",\n   \"conditions\": [\n    {\n     \"assetAttributeName\": \"dolor Lorem reprehenderit\",\n     \"assetAttributeValue\": \"ad labore in\",\n     \"operator\": \"CONTAINS\"\n    },\n    {\n     \"assetAttributeName\": \"veniam dolor\",\n     \"assetAttributeValue\": \"irure dolore in\",\n     \"operator\": \"DOES_NOT_CONTAIN\"\n    }\n   ],\n   \"conditionConnector\": \"OR\",\n   \"inventorySourceType\": \"ORACLE_DATABASE\",\n   \"priority\": 9079323,\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"in tempor\",\n     \"name\": \"aliqua in\",\n     \"protectionEngine\": \"deserunt amet in\",\n     \"type\": \"cillum dolore sed culpa ipsum\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"veniam elit proident ex\",\n     \"name\": \"fugiat cupidatat et ad\",\n     \"protectionEngine\": \"culpa voluptate qui in cillum\",\n     \"type\": \"eiusmod aliqua Excepteur\"\n    },\n    \"storageSystem\": {\n     \"id\": \"Lorem sed labore\",\n     \"name\": \"ullamco fugiat aliqua qui deserunt\"\n    }\n   },\n   \"assignedAssetsCount\": -26093763,\n   \"description\": \"laborum eu mollit\",\n   \"displayDescription\": \"consectetur ipsum pariatur ea laborum\",\n   \"id\": \"culpa incididunt minim pariatur\",\n   \"lastRunAt\": \"2009-06-09T14:44:02.615Z\",\n   \"managedBy\": \"null\",\n   \"tenant\": {\n    \"id\": \"dolore\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": -63147910,\n  \"queryState\": \"pariatur Duis esse dolor null\",\n  \"size\": 13958979,\n  \"totalElements\": -22114849,\n  \"totalPages\": -70948091\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create a dynamic filter.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters"
									]
								},
								"description": "Create a dynamic filter.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully created the dynamic filter.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"enim consectetur occaecat ipsum\",\n \"action\": \"NOT_SUPPORTED\",\n \"actionResult\": \"elit aliquip do\",\n \"conditions\": [\n  {\n   \"assetAttributeName\": \"enim consequat\",\n   \"assetAttributeValue\": \"labore sit dolore\",\n   \"operator\": \"GREATER_THAN\"\n  },\n  {\n   \"assetAttributeName\": \"voluptate nulla quis\",\n   \"assetAttributeValue\": \"ipsum pariatur tempor\",\n   \"operator\": \"EQUALS\"\n  }\n ],\n \"conditionConnector\": \"OR\",\n \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n \"priority\": 79405956,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod exercitation\",\n   \"name\": \"sunt ea velit nostrud\",\n   \"protectionEngine\": \"fugiat nisi Duis\",\n   \"type\": \"nis\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"amet dolore est\",\n   \"name\": \"dolore in esse \",\n   \"protectionEngine\": \"dolor magna dolore\",\n   \"type\": \"incididunt veniam aliquip\"\n  },\n  \"storageSystem\": {\n   \"id\": \"nisi\",\n   \"name\": \"ullamco officia Excepteur\"\n  }\n },\n \"assignedAssetsCount\": -52895295,\n \"description\": \"minim amet\",\n \"displayDescription\": \"ea consectetur reprehenderit\",\n \"id\": \"dolore mollit et in\",\n \"lastRunAt\": \"2020-05-04T03:06:36.158Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"cupid\"\n }\n}"
								},
								{
									"name": "Successful operation. ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"enim consectetur occaecat ipsum\",\n \"action\": \"NOT_SUPPORTED\",\n \"actionResult\": \"elit aliquip do\",\n \"conditions\": [\n  {\n   \"assetAttributeName\": \"enim consequat\",\n   \"assetAttributeValue\": \"labore sit dolore\",\n   \"operator\": \"GREATER_THAN\"\n  },\n  {\n   \"assetAttributeName\": \"voluptate nulla quis\",\n   \"assetAttributeValue\": \"ipsum pariatur tempor\",\n   \"operator\": \"EQUALS\"\n  }\n ],\n \"conditionConnector\": \"OR\",\n \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n \"priority\": 79405956,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod exercitation\",\n   \"name\": \"sunt ea velit nostrud\",\n   \"protectionEngine\": \"fugiat nisi Duis\",\n   \"type\": \"nis\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"amet dolore est\",\n   \"name\": \"dolore in esse \",\n   \"protectionEngine\": \"dolor magna dolore\",\n   \"type\": \"incididunt veniam aliquip\"\n  },\n  \"storageSystem\": {\n   \"id\": \"nisi\",\n   \"name\": \"ullamco officia Excepteur\"\n  }\n },\n \"assignedAssetsCount\": -52895295,\n \"description\": \"minim amet\",\n \"displayDescription\": \"ea consectetur reprehenderit\",\n \"id\": \"dolore mollit et in\",\n \"lastRunAt\": \"2020-05-04T03:06:36.158Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"cupid\"\n }\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "eulas",
					"item": [
						{
							"name": "PPDM",
							"item": [
								{
									"name": "Get PowerProtect Data Manager EULA.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"eulas",
												"PPDM"
											]
										},
										"description": "Retrieves the current PowerProtect Data Manager end user license agreement (EULA).\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Found and returned the PowerProtect Data Manager EULA.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accepted\": false,\n \"acceptedTime\": \"aliqua esse\",\n \"link\": \"aliqua sed do\"\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Accept PowerProtect Data Manager EULA.",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accepted\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"eulas",
												"PPDM"
											]
										},
										"description": "Accepts PowerProtect Data Manager end user license agreement (EULA).\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The submitted settings payload has a syntax error.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the PowerProtect Data Manager EULA.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accepted\": false,\n \"acceptedTime\": \"aliqua esse\",\n \"link\": \"aliqua sed do\"\n}"
										},
										{
											"name": "Required fields are missing in the request payload.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "TELEMETRY",
							"item": [
								{
									"name": "Get telemetry EULA.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"eulas",
												"TELEMETRY"
											]
										},
										"description": "Retrieves the current telemetry end user license agreement (EULA).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Found and returned the telemetry EULA.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accepted\": false,\n \"acceptedTime\": \"1986-01-03T22:59:37.107Z\",\n \"link\": \"non dolor\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Accept telemetry EULA.",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accepted\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"eulas",
												"TELEMETRY"
											]
										},
										"description": "Accepts telemetry end user license agreement (EULA).\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Required fields are missing in the request payload.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The submitted settings payload has a syntax error.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the telemetry EULA.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accepted\": false,\n \"acceptedTime\": \"1986-01-03T22:59:37.107Z\",\n \"link\": \"non dolor\"\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "exported-copies",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an exported copy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of exported copy."
												}
											]
										},
										"description": "Deletes an exported copy by parameter ID. This API request defines which copy is already mounted.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully initiated deletion of the exported copy.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get an exported copy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of copy."
												}
											]
										},
										"description": "Retrieves an exported copy by parameter ID. This API request defines which copy is already mounted. Exported copies are deleted after use.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the exported copies.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"minim el\",\n \"exportType\": \"RESTORED_COPIES\",\n \"assetId\": \"sit cupidatat est et\",\n \"copyId\": \"proident\",\n \"completionTime\": \"1980-03-12T10:43:51.298Z\",\n \"expirationTime\": \"2017-09-19T07:55:39.189Z\",\n \"exportedCopiesDetails\": {\n  \"targetExportedStorageInfo\": {\n   \"exportDevices\": [\n    \"magna commodo\",\n    \"culpa est mol\"\n   ],\n   \"initiatorGroups\": \"sit in Excepteur enim proident\",\n   \"lunMaps\": \"anim nostrud fugiat minim\",\n   \"restoredCopyId\": \"ullamco elit aliquip nulla\",\n   \"targetArray\": \"ullamco\",\n   \"targetGroupName\": \"esse s\",\n   \"targetHosts\": [\n    \"sunt culpa sint\",\n    \"ea\"\n   ]\n  },\n  \"targetExportedVmInfo\": {\n   \"restoredCopyId\": \"\\\"4c348821-5bc7-4268-95ae-21795dcceea6\\\"\",\n   \"targetAssetId\": \"aliquip dolor\",\n   \"targetVmName\": \"ut in sunt velit\"\n  }\n },\n \"id\": \"eiusmod laborum nulla minim\",\n \"startTime\": \"2009-03-31T16:25:07.034Z\",\n \"state\": \"VMOTIONING\",\n \"storageSystem\": \"dolor dolore esse velit cupidata\"\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested exported copies do not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all exported copies.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"exported-copies"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all the exported copies. This API request defines which copy is already mounted. Exported copies are deleted after use.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "Successfully returned available exported copy resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"description\": \"aute culpa dolor\",\n   \"exportType\": \"VMDK_MOUNT\",\n   \"assetId\": \"Ut aliqua ut proident dolore\",\n   \"copyId\": \"adipis\",\n   \"completionTime\": \"1980-09-09T21:40:12.907Z\",\n   \"expirationTime\": \"1996-02-21T02:47:40.466Z\",\n   \"exportedCopiesDetails\": {\n    \"targetExportedStorageInfo\": {\n     \"exportDevices\": [\n      \"elit ullamco Ut\",\n      \"sunt sint eiusmod\"\n     ],\n     \"initiatorGroups\": \"commodo\",\n     \"lunMaps\": \"ex\",\n     \"restoredCopyId\": \"voluptate\",\n     \"targetArray\": \"aliqua et magn\",\n     \"targetGroupName\": \"sint aliquip dolor\",\n     \"targetHosts\": [\n      \"\",\n      \"ut non\"\n     ]\n    },\n    \"targetExportedVmInfo\": {\n     \"restoredCopyId\": \"\\\"4c348821-5bc7-4268-95ae-21795dcceea6\\\"\",\n     \"targetAssetId\": \"elit Ut non su\",\n     \"targetVmName\": \"proident\"\n    }\n   },\n   \"id\": \"aliquip el\",\n   \"startTime\": \"2020-06-15T08:12:00.293Z\",\n   \"state\": \"COMPLETED\",\n   \"storageSystem\": \"ut sit ut\"\n  },\n  {\n   \"description\": \"et cupidatat amet\",\n   \"exportType\": \"RESTORED_FILES\",\n   \"assetId\": \"fugiat tempor labore anim\",\n   \"copyId\": \"Duis qui\",\n   \"completionTime\": \"2007-09-10T10:22:32.289Z\",\n   \"expirationTime\": \"1969-05-30T20:46:49.111Z\",\n   \"exportedCopiesDetails\": {\n    \"targetExportedStorageInfo\": {\n     \"exportDevices\": [\n      \"aute veniam enim\",\n      \"laboris pariatur qui tempor in\"\n     ],\n     \"initiatorGroups\": \"eiusmod non\",\n     \"lunMaps\": \"exercitation nostrud eu anim\",\n     \"restoredCopyId\": \"sed est dolor pariatur\",\n     \"targetArray\": \"sint dolore sed nostrud\",\n     \"targetGroupName\": \"in aute\",\n     \"targetHosts\": [\n      \"fugiat\",\n      \"amet\"\n     ]\n    },\n    \"targetExportedVmInfo\": {\n     \"restoredCopyId\": \"\\\"4c348821-5bc7-4268-95ae-21795dcceea6\\\"\",\n     \"targetAssetId\": \"voluptate adipisicing commodo\",\n     \"targetVmName\": \"conse\"\n    }\n   },\n   \"id\": \"ut reprehenderit qui cillum\",\n   \"startTime\": \"2006-07-27T21:59:35.155Z\",\n   \"state\": \"WAITING\",\n   \"storageSystem\": \"proident enim consectetur\"\n  }\n ],\n \"page\": {\n  \"number\": 30269110,\n  \"queryState\": \"cillum eu minim q\",\n  \"size\": -48984949,\n  \"totalElements\": 76589661,\n  \"totalPages\": -55619920\n }\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "external-notifications",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an external notification by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the external notification resource."
												}
											]
										},
										"description": "Deletes an existing notification configuration by UUID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned with no content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get an external notification by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the external notification resource."
												}
											]
										},
										"description": "Retrieves an external notification by UUID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the event.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"categoryList\": [\n  \"PROTECTION\",\n  \"SYSTEM\"\n ],\n \"disabled\": false,\n \"emails\": [\n  \"dominic.vu@dell.com\",\n  \"test@dell.com\"\n ],\n \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n \"messageIdList\": [\n  \"ABA0005\",\n  \"SYS0006\",\n  \"ABD0005\",\n  \"ABD0002\",\n  \"SYS0007\",\n  \"ABV0003\",\n  \"ABV0002\",\n  \"ABV0005\",\n  \"SYS0004\",\n  \"SYS0008\",\n  \"ABA0002\",\n  \"ABA0003\",\n  \"ABA0004\",\n  \"SYS0001\",\n  \"ABV0004\",\n  \"ABD0004\",\n  \"ABD0003\",\n  \"ABA0006\",\n  \"CDR0003\",\n  \"CDR0002\",\n  \"UPG0047\"\n ],\n \"name\": \"Test Notification\",\n \"notificationWindow\": 60,\n \"severityList\": [\n  \"CRITICAL\"\n ],\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"subjectOverride\": \"test mail \"\n}"
										}
									]
								},
								{
									"name": "Update external notification by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the external notification resource."
												}
											]
										},
										"description": "Updates an external notification by UUID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"categoryList\": [\n  \"PROTECTION\",\n  \"SYSTEM\"\n ],\n \"disabled\": false,\n \"emails\": [\n  \"test@dell.com\"\n ],\n \"id\": \"069ffa5b-5c88-4529-b5eb-054f2bee651d\",\n \"lastAlertMatchTime\": \"2019-10-25T19:41:14Z\",\n \"lastNotificationTime\": \"2019-10-25T19:41:14Z\",\n \"messageIdList\": [\n  \"ABA0005\",\n  \"SYS0006\",\n  \"ABD0005\",\n  \"ABD0002\",\n  \"SYS0007\",\n  \"ABV0003\",\n  \"ABV0002\",\n  \"ABV0005\",\n  \"SYS0004\",\n  \"SYS0008\",\n  \"ABA0002\",\n  \"ABA0003\",\n  \"ABA0004\",\n  \"SYS0001\",\n  \"ABV0004\",\n  \"ABD0004\",\n  \"ABD0003\",\n  \"ABA0006\",\n  \"CDR0003\",\n  \"CDR0002\",\n  \"UPG0047\"\n ],\n \"name\": \"Test Notification\",\n \"notificationWindow\": 60,\n \"severityList\": [\n  \"CRITICAL\"\n ],\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"subjectOverride\": \"test mail \"\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all configured external notifications.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"external-notifications"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua",
											"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
										}
									]
								},
								"description": "Retrieves all configured external notifications.\n> This endpoint supports execution by the following roles: admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available external notification.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"categoryList\": [\n    \"PROTECTION\",\n    \"SYSTEM\"\n   ],\n   \"disabled\": false,\n   \"emails\": [\n    \"test@dell.com\"\n   ],\n   \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n   \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n   \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n   \"messageIdList\": [\n    \"ABA0005\",\n    \"SYS0006\",\n    \"ABD0005\",\n    \"ABD0002\",\n    \"SYS0007\",\n    \"ABV0003\",\n    \"ABV0002\",\n    \"ABV0005\",\n    \"SYS0004\",\n    \"SYS0008\",\n    \"ABA0002\",\n    \"ABA0003\",\n    \"ABA0004\",\n    \"SYS0001\",\n    \"ABV0004\",\n    \"ABD0004\",\n    \"ABD0003\",\n    \"ABA0006\",\n    \"CDR0003\",\n    \"CDR0002\",\n    \"UPG0047\"\n   ],\n   \"name\": \"Test Notification\",\n   \"notificationWindow\": 60,\n   \"severityList\": [\n    \"CRITICAL\"\n   ],\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"subjectOverride\": \"test mail \"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 1,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n }\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "queryState",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create external notification.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"ut est cupidatat ex\",\n        \"proident eiusmod\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/external-notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"external-notifications"
									]
								},
								"description": "Create a new notification configuration.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Resource created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"categoryList\": [\n  \"PROTECTION\",\n  \"SYSTEM\"\n ],\n \"disabled\": false,\n \"emails\": [\n  \"test@dell.com\"\n ],\n \"id\": \"069ffa5b-5c88-4529-b5eb-054f2bee651d\",\n \"lastAlertMatchTime\": \"2019-10-25T19:41:14Z\",\n \"lastNotificationTime\": \"2019-10-25T19:41:14Z\",\n \"messageIdList\": [\n  \"ABA0005\",\n  \"SYS0006\",\n  \"ABD0005\",\n  \"ABD0002\",\n  \"SYS0007\",\n  \"ABV0003\",\n  \"ABV0002\",\n  \"ABV0005\",\n  \"SYS0004\",\n  \"SYS0008\",\n  \"ABA0002\",\n  \"ABA0003\",\n  \"ABA0004\",\n  \"SYS0001\",\n  \"ABV0004\",\n  \"ABD0004\",\n  \"ABD0003\",\n  \"ABA0006\",\n  \"CDR0003\",\n  \"CDR0002\",\n  \"UPG0047\"\n ],\n \"name\": \"Test Notification\",\n \"notificationWindow\": 60,\n \"severityList\": [\n  \"CRITICAL\"\n ],\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"subjectOverride\": \"test mail \"\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"Test@dell.com\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"SYSTEM\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"amet esse eu exercitation\",\n        \"cillum officia nostrud reprehenderit\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"CRITICAL\"\n    ],\n    \"source\": {\n        \"type\": \"APPLIANCE_MANAGER\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "flr-sessions",
					"item": [
						{
							"name": "{flr Session Id}",
							"item": [
								{
									"name": "Delete the specified FLR session.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId"
											],
											"variable": [
												{
													"key": "flrSessionId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Unmounts the disks from the target VM and deletes the FLR session resource. A prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored.\n\nThe final step of the restore files API is to automatically delete the FLR session. Calling this API after the restore files API is called is not necessary.\n\nDeleting the FLR session is typically the last (cleanup) step of the workflow, which will release the resources allocated to maintain the FLR browse session.\n\nUnmounting the disks from the target VM is an asynchronous operation. The response from this API contains a PowerProtect Data Manager task API reference. The task API can be called to determine the progress of this operation.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Unmounted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"flrSessionId\": \"irure minim Lorem tempor\",\n \"taskId\": \"id labore laborum ea\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get FLR session state.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId"
											],
											"variable": [
												{
													"key": "flrSessionId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Returns the current settings (the UpdateBrowseRequest) for the specified FLR Session ID.\n\nA prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions). The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored (and browsing would be done, in part, by this API).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Get browse session.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"browseDest\": false,\n \"directory\": \"/\"\n}"
										}
									]
								},
								{
									"name": "Modify FLR session.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"browseDest\": true,\n    \"directory\": \"consectetur\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId"
											],
											"variable": [
												{
													"key": "flrSessionId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Changes the directories on the target or in the backup for the specified FLR session ID.\n\nA prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to browse the directories after creating the session (where changing directories is part of the browsing, and would be achieved by calling this API).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": true,\n    \"directory\": \"consectetur\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": true,\n    \"directory\": \"consectetur\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": true,\n    \"directory\": \"consectetur\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The response includes two fields: A flag indicating whether the copy or the destination VM is being browsed and the name directory currently being browsed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": true,\n    \"directory\": \"consectetur\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"browseDest\": false,\n \"directory\": \"/etc\"\n}"
										},
										{
											"name": "The request could not be completed due to a conflict with the current state of the target resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": true,\n    \"directory\": \"consectetur\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": true,\n    \"directory\": \"consectetur\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": true,\n    \"directory\": \"consectetur\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get directory file list.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId",
												"files"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "pageSize",
													"value": "100",
													"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua",
													"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua",
													"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
												}
											],
											"variable": [
												{
													"key": "flrSessionId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Retrieves the directory file list for the specified FLR session ID. The file list can be filtered based on the optional filter and paging query parameters.\n\nA prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions). The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored.\n\nThis API call allows the caller to retrieve the file list corresponding to the current directory in the FLR browse session. Finally, the caller calls the flr-sessions/{flrSessionId}/tasks API with the desired file list to restore those files on the target VM. The FLR session is automatically closed down when the restore task API is called. Otherwise, the session is be terminated by calling the DELETE API.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request could not be completed because of a conflict with the current state of the target resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The response is a list of files formatted by the filter and page information specified in the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": [\n  {\n   \"name\": \"boot\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"dev\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"proc\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"run\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"sys\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"etc\",\n   \"size\": 8192,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"root\",\n   \"size\": 4096,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"tmp\",\n   \"size\": 4096,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"var\",\n   \"size\": 4096,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"usr\",\n   \"size\": 4096,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"bin\",\n   \"size\": 7,\n   \"type\": \"symlink\"\n  },\n  {\n   \"name\": \"sbin\",\n   \"size\": 8,\n   \"type\": \"symlink\"\n  },\n  {\n   \"name\": \"lib\",\n   \"size\": 7,\n   \"type\": \"symlink\"\n  },\n  {\n   \"name\": \"lib64\",\n   \"size\": 9,\n   \"type\": \"symlink\"\n  },\n  {\n   \"name\": \"home\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"media\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"mnt\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"opt\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"srv\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 100,\n  \"totalElements\": 19,\n  \"totalPages\": 1\n }\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Restore files picked during the browse.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filePaths\": [\n        \"non sunt in dolore\",\n        \"sit Excepteur\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"irure\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId",
												"tasks"
											],
											"variable": [
												{
													"key": "flrSessionId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Restores the files specified in the request body. Once the files are restored, the FLR session is deleted. It is not necessary to call the DELETE API after calling this API.\n\nA prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to then browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored, and then call this API to restore the files.\n\nRestoring the files is an asynchronous operation. The response from this API contains a PowerProtect Data Manager task ID and API reference. The task API can be called to determine the progress of this operation.\n\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "FLR initiated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"in enim ut\",\n        \"laborum Ut\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"velit sint Lorem\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskId\": \"dol\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"in enim ut\",\n        \"laborum Ut\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"velit sint Lorem\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"in enim ut\",\n        \"laborum Ut\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"velit sint Lorem\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"in enim ut\",\n        \"laborum Ut\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"velit sint Lorem\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"in enim ut\",\n        \"laborum Ut\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"velit sint Lorem\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"in enim ut\",\n        \"laborum Ut\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"velit sint Lorem\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create a new FLR Session.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"copyId\": \"in incididunt deserunt Excepteur\",\n    \"targetVmAssetId\": \"commodo amet\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"laborum fugiat aute cillum velit\",\n    \"targetUser\": \"ea sunt incididunt\",\n    \"timeout\": \"300\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/flr-sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flr-sessions"
									]
								},
								"description": "Establishes a File-Level-Restore (FLR) session. An FLR session is used to restore individual files or directories as opposed to performing an Image-Level-Restore (that is, restoring entire VMs).\n\nCalling this API mounts the disks of a copy to a target VM. The ID of the copy and the ID of the target VM are acquired by browsing the PowerProtect Data Manager inventory. The mount operation will make the files present on the mounted disk available for selection to be restored. Once the disks are mounted onto the target VM, the disk file system (or systems) may be browsed directory-by-directory. The caller may select files within each directory to be restored.\n\nThe mounting of the disk from the copy is an asynchronous operation, so the response from this API contains a PowerProtect Data Manager task ID and a hyperlink. The task API can be called to monitor the progress of of the operation.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"in incididunt deserunt Excepteur\",\n    \"targetVmAssetId\": \"commodo amet\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"laborum fugiat aute cillum velit\",\n    \"targetUser\": \"ea sunt incididunt\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "FLR session create task started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"in incididunt deserunt Excepteur\",\n    \"targetVmAssetId\": \"commodo amet\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"laborum fugiat aute cillum velit\",\n    \"targetUser\": \"ea sunt incididunt\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"flrSessionId\": \"irure minim Lorem tempor\",\n \"taskId\": \"id labore laborum ea\"\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"in incididunt deserunt Excepteur\",\n    \"targetVmAssetId\": \"commodo amet\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"laborum fugiat aute cillum velit\",\n    \"targetUser\": \"ea sunt incididunt\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"in incididunt deserunt Excepteur\",\n    \"targetVmAssetId\": \"commodo amet\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"laborum fugiat aute cillum velit\",\n    \"targetUser\": \"ea sunt incididunt\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"in incididunt deserunt Excepteur\",\n    \"targetVmAssetId\": \"commodo amet\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"laborum fugiat aute cillum velit\",\n    \"targetUser\": \"ea sunt incididunt\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request precondition failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"in incididunt deserunt Excepteur\",\n    \"targetVmAssetId\": \"commodo amet\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"laborum fugiat aute cillum velit\",\n    \"targetUser\": \"ea sunt incididunt\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "hosts",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a host by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the host."
												}
											]
										},
										"description": "Retrieves **Hosts** like PRIMARY, GROUP, APP_HOST, ESX_HOST, ESX_CLUSTER, MSSQL, ORACLE, Filesystem by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the host.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"addresses\": {\n  \"ipv4\": [\n   \"Duis mollit\",\n   \"mollit amet Duis\"\n  ],\n  \"ipv6\": [\n   \"laboris deserunt sed\",\n   \"dolore elit magna\"\n  ],\n  \"wwpn\": [\n   \"elit\",\n   \"qui dolore dolor\"\n  ]\n },\n \"cluster\": {\n  \"id\": \"incididunt magna in ut\",\n  \"name\": \"sit\"\n },\n \"details\": {\n  \"appHost\": {\n   \"appServers\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"dbConnection\": {\n    \"credentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dbCredentialId\": \"anim qui esse voluptate\",\n   \"oracleDBProperties\": {\n    \"rmanProperties\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"os\": \"ullamco\",\n   \"phase\": \"NOAGENT\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"rmanConnection\": {\n    \"credentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"subTypes\": [\n    \"SAP_HANA_DATABASE_SYSTEM\",\n    \"MICROSOFT_EXCHANGE_DATABASE_SYSTEM\"\n   ]\n  },\n  \"esxCluster\": {\n   \"clusterMoref\": \"veniam enim sit\",\n   \"networks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"vCenterUuid\": \"irure\"\n  },\n  \"esxHost\": {\n   \"configScratchLocation\": \"non ex sunt et\",\n   \"hostMoref\": \"quis eiusmod Excepteur\",\n   \"hostUuid\": \"velit ad\",\n   \"hostVersion\": \"laborum commodo\",\n   \"networks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"scsiAdapter\": true,\n   \"splitterInfo\": {\n    \"numberOfAttachedRPAClusters\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rpaConnectivityInfo\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uid\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"version\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"vCenterUuid\": \"eiusmod id amet dolor\"\n  }\n },\n \"hostname\": \"irure sit commodo\",\n \"id\": \"est\",\n \"includedInDiscovery\": true,\n \"inventorySourceId\": \"labore Lorem nostrud\",\n \"lastDiscovered\": \"anim proident in esse ad\",\n \"lastDiscoveryAt\": \"2002-03-13T04:06:33.893Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"nisi incididunt tempor Duis proident\",\n  \"messageID\": \"dolor do\",\n  \"remediation\": \"in dolor sint est qui\",\n  \"status\": \"CANCELED\",\n  \"summaries\": [\n   \"sint nostrud\",\n   \"qui ad est\"\n  ]\n },\n \"lastDiscoveryStatus\": \"enim elit\",\n \"lastDiscoveryTaskId\": \"fugiat laboris aliquip pariatu\",\n \"lastUpdated\": \"velit elit magna laboris Duis\",\n \"name\": \"anim qui dolore\",\n \"type\": \"GROUP\"\n}"
										},
										{
											"name": "The requested host does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update host credential and TNS values by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"do Excepteur\",\n            \"voluptate in nostrud officia fugiat\"\n        ],\n        \"ipv6\": [\n            \"Duis id\",\n            \"magna in anim elit fugiat\"\n        ],\n        \"wwpn\": [\n            \"in enim in dolore\",\n            \"ad U\"\n        ]\n    },\n    \"cluster\": {\n        \"id\": \"amet non\",\n        \"name\": \"ad nulla ex eiusmod\"\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"dbCredentialId\": \"sint do amet ad\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"os\": \"adipisicing consectetur occaecat est\",\n            \"phase\": \"UNREGISTERED\",\n            \"protectionEngineFlow\": \"APPDIRECT\",\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"subTypes\": [\n                \"STORAGEGROUP\",\n                \"ORACLE\"\n            ]\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"ullamco velit Excep\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"vCenterUuid\": \"Duis ipsum\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"Lorem eiusmod nostru\",\n            \"hostMoref\": \"velit dolore\",\n            \"hostUuid\": \"nisi id\",\n            \"hostVersion\": \"ipsum laboris anim\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"scsiAdapter\": true,\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"rpaConnectivityInfo\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"status\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"uid\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"version\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"vCenterUuid\": \"reprehenderit ut in ipsum\"\n        }\n    },\n    \"hostname\": \"incididunt ullamco\",\n    \"id\": \"est eiusmod nisi sed\",\n    \"includedInDiscovery\": true,\n    \"inventorySourceId\": \"aliquip aliqua laboris ex\",\n    \"lastDiscovered\": \"exercitation Excepteur culpa ut\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"dolor est labore aliquip tempor\",\n        \"messageID\": \"sit\",\n        \"remediation\": \"eu non\",\n        \"status\": \"CANCELED\",\n        \"summaries\": [\n            \"ipsum aliqua\",\n            \"sit officia consequat\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"eiusmod\",\n    \"lastUpdated\": \"laborum\",\n    \"name\": \"Ut ullamco elit nostrud\",\n    \"type\": \"APP_HOST\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the host."
												}
											]
										},
										"description": "Update credentail and TNS for host by ID.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"do Excepteur\",\n            \"voluptate in nostrud officia fugiat\"\n        ],\n        \"ipv6\": [\n            \"Duis id\",\n            \"magna in anim elit fugiat\"\n        ],\n        \"wwpn\": [\n            \"in enim in dolore\",\n            \"ad U\"\n        ]\n    },\n    \"cluster\": {\n        \"id\": \"amet non\",\n        \"name\": \"ad nulla ex eiusmod\"\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"dbCredentialId\": \"sint do amet ad\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"os\": \"adipisicing consectetur occaecat est\",\n            \"phase\": \"UNREGISTERED\",\n            \"protectionEngineFlow\": \"APPDIRECT\",\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"subTypes\": [\n                \"STORAGEGROUP\",\n                \"ORACLE\"\n            ]\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"ullamco velit Excep\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"vCenterUuid\": \"Duis ipsum\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"Lorem eiusmod nostru\",\n            \"hostMoref\": \"velit dolore\",\n            \"hostUuid\": \"nisi id\",\n            \"hostVersion\": \"ipsum laboris anim\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"scsiAdapter\": true,\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"rpaConnectivityInfo\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"status\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"uid\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"version\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"vCenterUuid\": \"reprehenderit ut in ipsum\"\n        }\n    },\n    \"hostname\": \"incididunt ullamco\",\n    \"id\": \"est eiusmod nisi sed\",\n    \"includedInDiscovery\": true,\n    \"inventorySourceId\": \"aliquip aliqua laboris ex\",\n    \"lastDiscovered\": \"exercitation Excepteur culpa ut\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"dolor est labore aliquip tempor\",\n        \"messageID\": \"sit\",\n        \"remediation\": \"eu non\",\n        \"status\": \"CANCELED\",\n        \"summaries\": [\n            \"ipsum aliqua\",\n            \"sit officia consequat\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"eiusmod\",\n    \"lastUpdated\": \"laborum\",\n    \"name\": \"Ut ullamco elit nostrud\",\n    \"type\": \"APP_HOST\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the host.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"do Excepteur\",\n            \"voluptate in nostrud officia fugiat\"\n        ],\n        \"ipv6\": [\n            \"Duis id\",\n            \"magna in anim elit fugiat\"\n        ],\n        \"wwpn\": [\n            \"in enim in dolore\",\n            \"ad U\"\n        ]\n    },\n    \"cluster\": {\n        \"id\": \"amet non\",\n        \"name\": \"ad nulla ex eiusmod\"\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"dbCredentialId\": \"sint do amet ad\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"os\": \"adipisicing consectetur occaecat est\",\n            \"phase\": \"UNREGISTERED\",\n            \"protectionEngineFlow\": \"APPDIRECT\",\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"subTypes\": [\n                \"STORAGEGROUP\",\n                \"ORACLE\"\n            ]\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"ullamco velit Excep\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"vCenterUuid\": \"Duis ipsum\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"Lorem eiusmod nostru\",\n            \"hostMoref\": \"velit dolore\",\n            \"hostUuid\": \"nisi id\",\n            \"hostVersion\": \"ipsum laboris anim\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"scsiAdapter\": true,\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"rpaConnectivityInfo\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"status\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"uid\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"version\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"vCenterUuid\": \"reprehenderit ut in ipsum\"\n        }\n    },\n    \"hostname\": \"incididunt ullamco\",\n    \"id\": \"est eiusmod nisi sed\",\n    \"includedInDiscovery\": true,\n    \"inventorySourceId\": \"aliquip aliqua laboris ex\",\n    \"lastDiscovered\": \"exercitation Excepteur culpa ut\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"dolor est labore aliquip tempor\",\n        \"messageID\": \"sit\",\n        \"remediation\": \"eu non\",\n        \"status\": \"CANCELED\",\n        \"summaries\": [\n            \"ipsum aliqua\",\n            \"sit officia consequat\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"eiusmod\",\n    \"lastUpdated\": \"laborum\",\n    \"name\": \"Ut ullamco elit nostrud\",\n    \"type\": \"APP_HOST\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"addresses\": {\n  \"ipv4\": [\n   \"Duis mollit\",\n   \"mollit amet Duis\"\n  ],\n  \"ipv6\": [\n   \"laboris deserunt sed\",\n   \"dolore elit magna\"\n  ],\n  \"wwpn\": [\n   \"elit\",\n   \"qui dolore dolor\"\n  ]\n },\n \"cluster\": {\n  \"id\": \"incididunt magna in ut\",\n  \"name\": \"sit\"\n },\n \"details\": {\n  \"appHost\": {\n   \"appServers\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"dbConnection\": {\n    \"credentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dbCredentialId\": \"anim qui esse voluptate\",\n   \"oracleDBProperties\": {\n    \"rmanProperties\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"os\": \"ullamco\",\n   \"phase\": \"NOAGENT\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"rmanConnection\": {\n    \"credentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"subTypes\": [\n    \"SAP_HANA_DATABASE_SYSTEM\",\n    \"MICROSOFT_EXCHANGE_DATABASE_SYSTEM\"\n   ]\n  },\n  \"esxCluster\": {\n   \"clusterMoref\": \"veniam enim sit\",\n   \"networks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"vCenterUuid\": \"irure\"\n  },\n  \"esxHost\": {\n   \"configScratchLocation\": \"non ex sunt et\",\n   \"hostMoref\": \"quis eiusmod Excepteur\",\n   \"hostUuid\": \"velit ad\",\n   \"hostVersion\": \"laborum commodo\",\n   \"networks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"scsiAdapter\": true,\n   \"splitterInfo\": {\n    \"numberOfAttachedRPAClusters\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rpaConnectivityInfo\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uid\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"version\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"vCenterUuid\": \"eiusmod id amet dolor\"\n  }\n },\n \"hostname\": \"irure sit commodo\",\n \"id\": \"est\",\n \"includedInDiscovery\": true,\n \"inventorySourceId\": \"labore Lorem nostrud\",\n \"lastDiscovered\": \"anim proident in esse ad\",\n \"lastDiscoveryAt\": \"2002-03-13T04:06:33.893Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"nisi incididunt tempor Duis proident\",\n  \"messageID\": \"dolor do\",\n  \"remediation\": \"in dolor sint est qui\",\n  \"status\": \"CANCELED\",\n  \"summaries\": [\n   \"sint nostrud\",\n   \"qui ad est\"\n  ]\n },\n \"lastDiscoveryStatus\": \"enim elit\",\n \"lastDiscoveryTaskId\": \"fugiat laboris aliquip pariatu\",\n \"lastUpdated\": \"velit elit magna laboris Duis\",\n \"name\": \"anim qui dolore\",\n \"type\": \"GROUP\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"do Excepteur\",\n            \"voluptate in nostrud officia fugiat\"\n        ],\n        \"ipv6\": [\n            \"Duis id\",\n            \"magna in anim elit fugiat\"\n        ],\n        \"wwpn\": [\n            \"in enim in dolore\",\n            \"ad U\"\n        ]\n    },\n    \"cluster\": {\n        \"id\": \"amet non\",\n        \"name\": \"ad nulla ex eiusmod\"\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"dbCredentialId\": \"sint do amet ad\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"os\": \"adipisicing consectetur occaecat est\",\n            \"phase\": \"UNREGISTERED\",\n            \"protectionEngineFlow\": \"APPDIRECT\",\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"subTypes\": [\n                \"STORAGEGROUP\",\n                \"ORACLE\"\n            ]\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"ullamco velit Excep\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"vCenterUuid\": \"Duis ipsum\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"Lorem eiusmod nostru\",\n            \"hostMoref\": \"velit dolore\",\n            \"hostUuid\": \"nisi id\",\n            \"hostVersion\": \"ipsum laboris anim\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"scsiAdapter\": true,\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"rpaConnectivityInfo\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"status\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"uid\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"version\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"vCenterUuid\": \"reprehenderit ut in ipsum\"\n        }\n    },\n    \"hostname\": \"incididunt ullamco\",\n    \"id\": \"est eiusmod nisi sed\",\n    \"includedInDiscovery\": true,\n    \"inventorySourceId\": \"aliquip aliqua laboris ex\",\n    \"lastDiscovered\": \"exercitation Excepteur culpa ut\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"dolor est labore aliquip tempor\",\n        \"messageID\": \"sit\",\n        \"remediation\": \"eu non\",\n        \"status\": \"CANCELED\",\n        \"summaries\": [\n            \"ipsum aliqua\",\n            \"sit officia consequat\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"eiusmod\",\n    \"lastUpdated\": \"laborum\",\n    \"name\": \"Ut ullamco elit nostrud\",\n    \"type\": \"APP_HOST\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"do Excepteur\",\n            \"voluptate in nostrud officia fugiat\"\n        ],\n        \"ipv6\": [\n            \"Duis id\",\n            \"magna in anim elit fugiat\"\n        ],\n        \"wwpn\": [\n            \"in enim in dolore\",\n            \"ad U\"\n        ]\n    },\n    \"cluster\": {\n        \"id\": \"amet non\",\n        \"name\": \"ad nulla ex eiusmod\"\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"dbCredentialId\": \"sint do amet ad\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"os\": \"adipisicing consectetur occaecat est\",\n            \"phase\": \"UNREGISTERED\",\n            \"protectionEngineFlow\": \"APPDIRECT\",\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"subTypes\": [\n                \"STORAGEGROUP\",\n                \"ORACLE\"\n            ]\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"ullamco velit Excep\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"vCenterUuid\": \"Duis ipsum\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"Lorem eiusmod nostru\",\n            \"hostMoref\": \"velit dolore\",\n            \"hostUuid\": \"nisi id\",\n            \"hostVersion\": \"ipsum laboris anim\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"scsiAdapter\": true,\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"rpaConnectivityInfo\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"status\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"uid\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"version\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"vCenterUuid\": \"reprehenderit ut in ipsum\"\n        }\n    },\n    \"hostname\": \"incididunt ullamco\",\n    \"id\": \"est eiusmod nisi sed\",\n    \"includedInDiscovery\": true,\n    \"inventorySourceId\": \"aliquip aliqua laboris ex\",\n    \"lastDiscovered\": \"exercitation Excepteur culpa ut\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"dolor est labore aliquip tempor\",\n        \"messageID\": \"sit\",\n        \"remediation\": \"eu non\",\n        \"status\": \"CANCELED\",\n        \"summaries\": [\n            \"ipsum aliqua\",\n            \"sit officia consequat\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"eiusmod\",\n    \"lastUpdated\": \"laborum\",\n    \"name\": \"Ut ullamco elit nostrud\",\n    \"type\": \"APP_HOST\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"do Excepteur\",\n            \"voluptate in nostrud officia fugiat\"\n        ],\n        \"ipv6\": [\n            \"Duis id\",\n            \"magna in anim elit fugiat\"\n        ],\n        \"wwpn\": [\n            \"in enim in dolore\",\n            \"ad U\"\n        ]\n    },\n    \"cluster\": {\n        \"id\": \"amet non\",\n        \"name\": \"ad nulla ex eiusmod\"\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"dbCredentialId\": \"sint do amet ad\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"os\": \"adipisicing consectetur occaecat est\",\n            \"phase\": \"UNREGISTERED\",\n            \"protectionEngineFlow\": \"APPDIRECT\",\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"subTypes\": [\n                \"STORAGEGROUP\",\n                \"ORACLE\"\n            ]\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"ullamco velit Excep\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"vCenterUuid\": \"Duis ipsum\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"Lorem eiusmod nostru\",\n            \"hostMoref\": \"velit dolore\",\n            \"hostUuid\": \"nisi id\",\n            \"hostVersion\": \"ipsum laboris anim\",\n            \"networks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"scsiAdapter\": true,\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"rpaConnectivityInfo\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"status\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"uid\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"version\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"vCenterUuid\": \"reprehenderit ut in ipsum\"\n        }\n    },\n    \"hostname\": \"incididunt ullamco\",\n    \"id\": \"est eiusmod nisi sed\",\n    \"includedInDiscovery\": true,\n    \"inventorySourceId\": \"aliquip aliqua laboris ex\",\n    \"lastDiscovered\": \"exercitation Excepteur culpa ut\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"dolor est labore aliquip tempor\",\n        \"messageID\": \"sit\",\n        \"remediation\": \"eu non\",\n        \"status\": \"CANCELED\",\n        \"summaries\": [\n            \"ipsum aliqua\",\n            \"sit officia consequat\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"eiusmod\",\n    \"lastUpdated\": \"laborum\",\n    \"name\": \"Ut ullamco elit nostrud\",\n    \"type\": \"APP_HOST\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all hosts.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"hosts"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all **Hosts** including PRIMARY, GROUP, APP_HOST, ESX_HOST, ESX_CLUSTER, MSSQL, ORACLE, and Filesystem.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available host.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"addresses\": {\n    \"ipv4\": [\n     \"nulla\",\n     \"commodo incididunt ea\"\n    ],\n    \"ipv6\": [\n     \"nisi amet consectetur ad\",\n     \"ut elit cillum\"\n    ],\n    \"wwpn\": [\n     \"consequat esse ut elit\",\n     \"dolore dolore\"\n    ]\n   },\n   \"cluster\": {\n    \"id\": \"ad ea anim ut\",\n    \"name\": \"dolore pariatur\"\n   },\n   \"details\": {\n    \"appHost\": {\n     \"appServers\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"dbConnection\": {\n      \"credentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"dbCredentialId\": \"aute nisi\",\n     \"oracleDBProperties\": {\n      \"rmanProperties\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"os\": \"laboris eiusmod eu ullamco\",\n     \"phase\": \"PARTIALCREATE\",\n     \"protectionEngineFlow\": \"VMDIRECT\",\n     \"rmanConnection\": {\n      \"credentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"subTypes\": [\n      \"SAP_HANA_DATABASE_SYSTEM\",\n      \"STORAGEGROUP\"\n     ]\n    },\n    \"esxCluster\": {\n     \"clusterMoref\": \"Lorem dolor\",\n     \"networks\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"vCenterUuid\": \"anim ea\"\n    },\n    \"esxHost\": {\n     \"configScratchLocation\": \"irure\",\n     \"hostMoref\": \"dolor\",\n     \"hostUuid\": \"occaecat deserunt Excepteur\",\n     \"hostVersion\": \"sunt\",\n     \"networks\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"scsiAdapter\": false,\n     \"splitterInfo\": {\n      \"numberOfAttachedRPAClusters\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rpaConnectivityInfo\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uid\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"vCenterUuid\": \"elit sint dolore in\"\n    }\n   },\n   \"hostname\": \"labore dolor exercitation\",\n   \"id\": \"tempor sit\",\n   \"includedInDiscovery\": true,\n   \"inventorySourceId\": \"pariatur ipsum Excepteur\",\n   \"lastDiscovered\": \"mollit\",\n   \"lastDiscoveryAt\": \"1976-12-12T23:52:53.602Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"Excepteur labore\",\n    \"messageID\": \"sed anim\",\n    \"remediation\": \"anim exercitation sunt occaecat\",\n    \"status\": \"CANCELED\",\n    \"summaries\": [\n     \"dolor aliqua \",\n     \"consecte\"\n    ]\n   },\n   \"lastDiscoveryStatus\": \"quis aliqua\",\n   \"lastDiscoveryTaskId\": \"sit labore\",\n   \"lastUpdated\": \"tempor in Excepteur magna\",\n   \"name\": \"aliquip dolor\",\n   \"type\": \"ESX_CLUSTER\"\n  },\n  {\n   \"addresses\": {\n    \"ipv4\": [\n     \"proident laborum d\",\n     \"veniam tempor reprehenderit Lorem\"\n    ],\n    \"ipv6\": [\n     \"veniam exercitation aliquip\",\n     \"laborum magna anim\"\n    ],\n    \"wwpn\": [\n     \"culpa enim sed\",\n     \"magna sint in\"\n    ]\n   },\n   \"cluster\": {\n    \"id\": \"mollit id aute\",\n    \"name\": \"in aliquip deserunt\"\n   },\n   \"details\": {\n    \"appHost\": {\n     \"appServers\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"dbConnection\": {\n      \"credentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"dbCredentialId\": \"Lorem culpa sed\",\n     \"oracleDBProperties\": {\n      \"rmanProperties\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"os\": \"aliquip commodo\",\n     \"phase\": \"UNREGISTERED\",\n     \"protectionEngineFlow\": \"VMDIRECT\",\n     \"rmanConnection\": {\n      \"credentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"subTypes\": [\n      \"SAP_HANA_DATABASE_SYSTEM\",\n      \"ORACLE\"\n     ]\n    },\n    \"esxCluster\": {\n     \"clusterMoref\": \"ex cupidatat exercitation ad\",\n     \"networks\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"vCenterUuid\": \"ullamco eiusmod\"\n    },\n    \"esxHost\": {\n     \"configScratchLocation\": \"deserunt nulla sint\",\n     \"hostMoref\": \"exercitation deserunt ea\",\n     \"hostUuid\": \"eiusmod laborum dolor\",\n     \"hostVersion\": \"Ut\",\n     \"networks\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"scsiAdapter\": true,\n     \"splitterInfo\": {\n      \"numberOfAttachedRPAClusters\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rpaConnectivityInfo\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uid\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"version\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"vCenterUuid\": \"laborum occaecat voluptate fugiat\"\n    }\n   },\n   \"hostname\": \"consec\",\n   \"id\": \"proident est ullamco deserunt\",\n   \"includedInDiscovery\": true,\n   \"inventorySourceId\": \"in ex\",\n   \"lastDiscovered\": \"Ut dolor minim dolore consequat\",\n   \"lastDiscoveryAt\": \"1999-08-08T01:57:56.162Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"nulla veniam\",\n    \"messageID\": \"incididunt Excepteur\",\n    \"remediation\": \"sunt veniam Lorem dolore culpa\",\n    \"status\": \"FAILED\",\n    \"summaries\": [\n     \"elit non\",\n     \"qui non sit est consectetur\"\n    ]\n   },\n   \"lastDiscoveryStatus\": \"officia amet\",\n   \"lastDiscoveryTaskId\": \"amet eu\",\n   \"lastUpdated\": \"Duis tempor Excepteur\",\n   \"name\": \"quis\",\n   \"type\": \"APP_HOST\"\n  }\n ],\n \"page\": {\n  \"number\": 64883985,\n  \"queryState\": \"est deserunt eiusmod\",\n  \"size\": 28643876,\n  \"totalElements\": -28926559,\n  \"totalPages\": -9792719\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "identity-sources",
					"item": [
						{
							"name": "{Id Source Id}",
							"item": [
								{
									"name": "groups",
									"item": [
										{
											"name": "Get groups belonging to the identity source.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId",
														"groups"
													],
													"query": [
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														}
													],
													"variable": [
														{
															"key": "IdSourceId",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) Identity source ID."
														}
													]
												},
												"description": "Retrieves the groups belonging to the identity source. These groups can be mapped to roles to provide access to the system and perform operations.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "An internal server error occurred. Please contact the system administrator.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The request body is either invalid or is missing the required fields.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The user does not have the proper privileges to perform the action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Successfully retrieved all identity source group names.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"name\": \"Duis\"\n  },\n  {\n   \"name\": \"aliqua dolor adipisicing\"\n  }\n ]\n}"
												},
												{
													"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The authorization token is either invalid or expired.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get users belonging to an identity source group.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId",
														"groups",
														":groupName",
														"users"
													],
													"variable": [
														{
															"key": "IdSourceId",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The ID of the identity source."
														},
														{
															"key": "groupName",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The group name of the identity source."
														}
													]
												},
												"description": "Retrieves the users belonging to an identity source group. This information helps administrators know which users are in each group. The information is useful when creating group-to-role mappings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The request body is either invalid or is missing the required fields.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "An internal server error occurred. Please contact the system administrator.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Successfully retrieved the usernames within the specified identity source group.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"name\": \"enim quis\"\n  },\n  {\n   \"name\": \"nulla\"\n  }\n ]\n}"
												},
												{
													"name": "The user does not have the proper privileges to perform the action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The authorization token is either invalid or expired.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Delete an identity source.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources",
												":IdSourceId"
											],
											"variable": [
												{
													"key": "IdSourceId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Identity source ID."
												}
											]
										},
										"description": "Deletes an identity source by ID. When the identity source is deleted, if any groups are mapped to roles, the users in those groups are no longer able to access the system or perform any operations.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully deleted the identity source.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get an identity source by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources",
												":IdSourceId"
											],
											"variable": [
												{
													"key": "IdSourceId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Identity source ID."
												}
											]
										},
										"description": "Retrieves an identity source by ID. When the identity source is retrieved, groups can be mapped to roles to provide access to the system and perform operations.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The identity source was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the specified identity source.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"base\": \"minim\",\n \"configPassword\": \"exercitation id nostrud irure\",\n \"configUser\": \"nulla voluptate commodo\",\n \"createdDate\": \"2008-10-20T09:12:46.029Z\",\n \"description\": \"laboris\",\n \"groupMemberAttribute\": \"et laboris sunt nulla\",\n \"groupNameAttribute\": \"ut in ut\",\n \"groupObjectTypeName\": \"ipsum laborum quis\",\n \"groupSearchPath\": \"nostrud esse voluptate dolor elit\",\n \"id\": \"in pariatur magna\",\n \"port\": \"do in labore qui\",\n \"serverAddress\": \"pariatur elit Ut sint reprehenderit\",\n \"serverType\": \"LDAP\",\n \"userIdAttribute\": \"veli\",\n \"userObjectTypeName\": \"deserunt\",\n \"userSearchPath\": \"elit ea enim nulla anim\"\n}"
										}
									]
								},
								{
									"name": "Update an identity source.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"base\": \"minim\",\n    \"configPassword\": \"exercitation id nostrud irure\",\n    \"configUser\": \"nulla voluptate commodo\",\n    \"createdDate\": \"2008-10-20T09:12:46.029Z\",\n    \"description\": \"laboris\",\n    \"groupMemberAttribute\": \"et laboris sunt nulla\",\n    \"groupNameAttribute\": \"ut in ut\",\n    \"groupObjectTypeName\": \"ipsum laborum quis\",\n    \"groupSearchPath\": \"nostrud esse voluptate dolor elit\",\n    \"id\": \"in pariatur magna\",\n    \"port\": \"do in labore qui\",\n    \"serverAddress\": \"pariatur elit Ut sint reprehenderit\",\n    \"serverType\": \"LDAP\",\n    \"userIdAttribute\": \"veli\",\n    \"userObjectTypeName\": \"deserunt\",\n    \"userSearchPath\": \"elit ea enim nulla anim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources",
												":IdSourceId"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false",
													"description": "Checks the connection of the identity source with the provided credentials."
												}
											],
											"variable": [
												{
													"key": "IdSourceId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Identity source ID."
												}
											]
										},
										"description": "Updates an identity source by ID. When updated, the identity source uses the new information to access the LDAP or Windows Active Directory, including the retrieval of groups.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Connection to the identity source timed out.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the identity source.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"base\": \"minim\",\n \"configPassword\": \"exercitation id nostrud irure\",\n \"configUser\": \"nulla voluptate commodo\",\n \"createdDate\": \"2008-10-20T09:12:46.029Z\",\n \"description\": \"laboris\",\n \"groupMemberAttribute\": \"et laboris sunt nulla\",\n \"groupNameAttribute\": \"ut in ut\",\n \"groupObjectTypeName\": \"ipsum laborum quis\",\n \"groupSearchPath\": \"nostrud esse voluptate dolor elit\",\n \"id\": \"in pariatur magna\",\n \"port\": \"do in labore qui\",\n \"serverAddress\": \"pariatur elit Ut sint reprehenderit\",\n \"serverType\": \"LDAP\",\n \"userIdAttribute\": \"veli\",\n \"userObjectTypeName\": \"deserunt\",\n \"userSearchPath\": \"elit ea enim nulla anim\"\n}"
										},
										{
											"name": "The identity source was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict. The system may already have an identity source.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all identity sources.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/identity-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"identity-sources"
									]
								},
								"description": "Retrieves all identity sources. When filtering with createdDate, if the value contains a plus sign (+), replace it with %2B. Not replacing the plus sign can cause an unexpected response.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The authorization token (access token) is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the list of identity sources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"base\": \"qui nisi Lorem con\",\n   \"configPassword\": \"dolore incididunt minim mollit\",\n   \"configUser\": \"sit nulla\",\n   \"createdDate\": \"1986-05-30T20:19:56.691Z\",\n   \"description\": \"Duis dolor irure esse\",\n   \"groupMemberAttribute\": \"sit reprehenderit\",\n   \"groupNameAttribute\": \"dol\",\n   \"groupObjectTypeName\": \"adipisicing sint\",\n   \"groupSearchPath\": \"nisi in sed aliquip voluptate\",\n   \"id\": \"velit aliqua commodo\",\n   \"port\": \"ut mollit dolor\",\n   \"serverAddress\": \"sint veniam Duis ut velit\",\n   \"serverType\": \"LDAP\",\n   \"userIdAttribute\": \"id laboris et proident\",\n   \"userObjectTypeName\": \"incididunt quis commodo irure\",\n   \"userSearchPath\": \"dolor ipsum ut Excepteur\"\n  },\n  {\n   \"base\": \"cupidatat laboris ex\",\n   \"configPassword\": \"irure aliqua dolore velit\",\n   \"configUser\": \"ut ea fugiat\",\n   \"createdDate\": \"2003-03-02T15:19:40.932Z\",\n   \"description\": \"qui laboris et nostrud\",\n   \"groupMemberAttribute\": \"eu id\",\n   \"groupNameAttribute\": \"mollit eiusmod\",\n   \"groupObjectTypeName\": \"velit culpa deserunt voluptate\",\n   \"groupSearchPath\": \"sunt ut ad in\",\n   \"id\": \"magna incididunt\",\n   \"port\": \"nostrud exercitation\",\n   \"serverAddress\": \"cupidatat\",\n   \"serverType\": \"AD\",\n   \"userIdAttribute\": \"tempor cupidatat Duis exercitation\",\n   \"userObjectTypeName\": \"consequat sunt tempor id\",\n   \"userSearchPath\": \"esse mollit\"\n  }\n ],\n \"page\": {\n  \"number\": 54278229,\n  \"queryState\": \"sed ut ipsum adipisicing\",\n  \"size\": 93644946,\n  \"totalElements\": 57948019,\n  \"totalPages\": -15901513\n }\n}"
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create an identity source.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base\": \"minim\",\n    \"configPassword\": \"exercitation id nostrud irure\",\n    \"configUser\": \"nulla voluptate commodo\",\n    \"createdDate\": \"2008-10-20T09:12:46.029Z\",\n    \"description\": \"laboris\",\n    \"groupMemberAttribute\": \"et laboris sunt nulla\",\n    \"groupNameAttribute\": \"ut in ut\",\n    \"groupObjectTypeName\": \"ipsum laborum quis\",\n    \"groupSearchPath\": \"nostrud esse voluptate dolor elit\",\n    \"id\": \"in pariatur magna\",\n    \"port\": \"do in labore qui\",\n    \"serverAddress\": \"pariatur elit Ut sint reprehenderit\",\n    \"serverType\": \"LDAP\",\n    \"userIdAttribute\": \"veli\",\n    \"userObjectTypeName\": \"deserunt\",\n    \"userSearchPath\": \"elit ea enim nulla anim\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"identity-sources"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "Checks the connection of the identity source with the provided credentials."
										}
									]
								},
								"description": "Creates an identity source. The identity source provides login credentials for LDAP or Windows Active Directory users, after mapping groups to roles.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully created the identity source.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"base\": \"minim\",\n \"configPassword\": \"exercitation id nostrud irure\",\n \"configUser\": \"nulla voluptate commodo\",\n \"createdDate\": \"2008-10-20T09:12:46.029Z\",\n \"description\": \"laboris\",\n \"groupMemberAttribute\": \"et laboris sunt nulla\",\n \"groupNameAttribute\": \"ut in ut\",\n \"groupObjectTypeName\": \"ipsum laborum quis\",\n \"groupSearchPath\": \"nostrud esse voluptate dolor elit\",\n \"id\": \"in pariatur magna\",\n \"port\": \"do in labore qui\",\n \"serverAddress\": \"pariatur elit Ut sint reprehenderit\",\n \"serverType\": \"LDAP\",\n \"userIdAttribute\": \"veli\",\n \"userObjectTypeName\": \"deserunt\",\n \"userSearchPath\": \"elit ea enim nulla anim\"\n}"
								},
								{
									"name": "The authorization token (access token) is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Connection to the identity source timed out.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "inventory-sources",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an inventory source by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
												"key": "Prefer",
												"value": "respond-async"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The inventory source ID."
												}
											]
										},
										"description": "Deletes an inventory source by the specified ID.\nThese inventory source types are supported: VCENTER, KUBERNETES, DATADOMAINMANAGEMENTCENTER, EXTERNALDATADOMAIN, POWERPROTECTSYSTEM\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "respond-async"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "respond-async"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "respond-async"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "respond-async"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "When request with header \"Prefer: respond-async\", the delete inventory source action runs as an asynchronous operation. The response contains the tracking 'activityId'.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "respond-async"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"activityId\": \"do laborum officia voluptate\"\n}"
										},
										{
											"name": "Successfully deleted the inventory source.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "respond-async"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get an inventory source by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The inventory source ID."
												}
											]
										},
										"description": "Retrieves an inventory source by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested inventory source does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned requested inventory source.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"et sit sed\",\n \"type\": \"SMISPROVIDER\",\n \"address\": \"in consectetur\",\n \"_embedded\": {\n  \"location\": {\n   \"id\": \"velit reprehenderit e\",\n   \"name\": \"consectetur incididunt aliqua dolore\"\n  }\n },\n \"credentials\": {\n  \"id\": \"occ\"\n },\n \"details\": {\n  \"customAppGroup\": {\n   \"defaultGroup\": false,\n   \"ipRules\": {\n    \"ipList\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ipRanges\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subnetworks\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"oracle\": {\n    \"rman\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAlias\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsLocation\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"unapprovedHostCount\": 31888898\n  },\n  \"customStorageGroup\": {\n   \"vcmAttributes\": {\n    \"ddboostUserCredsId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"external\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"k8s\": {\n   \"vCenterId\": \"do irure pariatur\"\n  },\n  \"ppdm\": {\n   \"direction\": \"OUTGOING\",\n   \"systemId\": \"sed tempor in cillum\"\n  },\n  \"vCenter\": {\n   \"cloudType\": \"NONE\",\n   \"hosting\": true,\n   \"internal\": false,\n   \"vSphereUiIntegration\": false\n  }\n },\n \"id\": \"Duis proident\",\n \"lastDiscovered\": \"1961-03-31T07:18:29.418Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"consectetur irure deserunt\",\n  \"messageID\": \"reprehenderit officia ad\",\n  \"remediation\": \"dolore\",\n  \"status\": \"OK_WITH_ERRORS\",\n  \"summaries\": [\n   \"officia esse reprehenderit elit minim\",\n   \"dolore amet fugiat eu Excepteur\"\n  ]\n },\n \"lastDiscoveryTaskId\": \"Ut eu in\",\n \"local\": false,\n \"port\": -13169615,\n \"version\": \"do reprehenderit consectetur\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update an inventory source by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The inventory source ID."
												}
											]
										},
										"description": "Updates an inventory source by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the inventory source.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"et sit sed\",\n \"type\": \"SMISPROVIDER\",\n \"address\": \"in consectetur\",\n \"_embedded\": {\n  \"location\": {\n   \"id\": \"velit reprehenderit e\",\n   \"name\": \"consectetur incididunt aliqua dolore\"\n  }\n },\n \"credentials\": {\n  \"id\": \"occ\"\n },\n \"details\": {\n  \"customAppGroup\": {\n   \"defaultGroup\": false,\n   \"ipRules\": {\n    \"ipList\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ipRanges\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subnetworks\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"oracle\": {\n    \"rman\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAlias\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsLocation\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"unapprovedHostCount\": 31888898\n  },\n  \"customStorageGroup\": {\n   \"vcmAttributes\": {\n    \"ddboostUserCredsId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"external\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"k8s\": {\n   \"vCenterId\": \"do irure pariatur\"\n  },\n  \"ppdm\": {\n   \"direction\": \"OUTGOING\",\n   \"systemId\": \"sed tempor in cillum\"\n  },\n  \"vCenter\": {\n   \"cloudType\": \"NONE\",\n   \"hosting\": true,\n   \"internal\": false,\n   \"vSphereUiIntegration\": false\n  }\n },\n \"id\": \"Duis proident\",\n \"lastDiscovered\": \"1961-03-31T07:18:29.418Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"consectetur irure deserunt\",\n  \"messageID\": \"reprehenderit officia ad\",\n  \"remediation\": \"dolore\",\n  \"status\": \"OK_WITH_ERRORS\",\n  \"summaries\": [\n   \"officia esse reprehenderit elit minim\",\n   \"dolore amet fugiat eu Excepteur\"\n  ]\n },\n \"lastDiscoveryTaskId\": \"Ut eu in\",\n \"local\": false,\n \"port\": -13169615,\n \"version\": \"do reprehenderit consectetur\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get all storage systems associated to the inventory source.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources",
												":id",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "pageSize",
													"value": "100",
													"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua",
													"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua",
													"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The inventory source ID."
												}
											]
										},
										"description": "Retrieves all storage systems associated to the inventory source.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id",
														"storage-systems"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id",
														"storage-systems"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned available storage systems.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id",
														"storage-systems"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"inventorySource\": {\n   \"id\": \"eu cillum dolor\",\n   \"name\": \"dolor velit in officia\"\n  },\n  \"location\": {\n   \"id\": \"qui amet\",\n   \"name\": \"eiusmod veniam\"\n  }\n },\n \"capacityUtilization\": 61502452.91692203,\n \"createdAt\": \"1952-12-09T14:38:25.419Z\",\n \"ddLocationId\": \"id occaecat non pariatur Excepteur\",\n \"details\": {\n  \"dataDomain\": {\n   \"capacityQuotasSupported\": false,\n   \"cloudEnabled\": true,\n   \"cloudTierLicensed\": false,\n   \"compressionFactor\": -4911891.216189399,\n   \"ddboostLicensed\": false,\n   \"encryptionLicensed\": true,\n   \"model\": \"la\",\n   \"percentUsed\": 85683681.89345187,\n   \"preferredInterfaces\": [\n    {\n     \"networkAddress\": \"dolor sint incididunt\",\n     \"networkLabel\": \"non enim dolore Ut\",\n     \"networkName\": \"Ut do\",\n     \"speed\": 92497330.64673263\n    },\n    {\n     \"networkAddress\": \"proident pariatur nisi\",\n     \"networkLabel\": \"et irure nulla Duis\",\n     \"networkName\": \"\",\n     \"speed\": -66050854.63969114\n    }\n   ],\n   \"preferredNetworkSupported\": true,\n   \"replicationEncryptionEnabled\": false,\n   \"replicationLicensed\": true,\n   \"retentionLockComplianceLicensed\": true,\n   \"retentionLockGovernanceLicensed\": true,\n   \"retentionLockSupported\": true,\n   \"serialNumber\": \"voluptate te\",\n   \"streamQuotasSupported\": true,\n   \"totalSize\": 26212399.84825903,\n   \"totalUsed\": -54556239.6294411,\n   \"vdiskEnabled\": true,\n   \"version\": \"culpa amet sit ipsum\"\n  },\n  \"recoverPoint\": {\n   \"protectedSpace\": -60033904.56556139,\n   \"serialNumber\": \"reprehenderit ex laboris non\",\n   \"totalCapacityManaged\": 10931088.887111515,\n   \"version\": \"consectetur\"\n  },\n  \"vmax\": {\n   \"cacheSize\": -71747252,\n   \"model\": \"irure\",\n   \"serialNumber\": \"irure ut laborum\",\n   \"totalSize\": -81194241.69416764,\n   \"totalUsed\": -28497635.116304606\n  },\n  \"xio\": {\n   \"serialNumber\": \"cupidatat sit eu adipisicing reprehenderit\",\n   \"totalSize\": 31205261.580101147,\n   \"totalUsed\": -40072637.93587312,\n   \"version\": \"sint fugiat pariatur ullamco\"\n  }\n },\n \"id\": \"reprehenderit dolore\",\n \"lastDiscovered\": \"2016-12-04T02:59:43.758Z\",\n \"lastDiscoveryAt\": \"1956-06-06T20:42:22.092Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"aliquip enim exercitation\",\n  \"messageID\": \"consectetur pariatur Excepteur\",\n  \"remediation\": \"au\",\n  \"status\": \"UNKNOWN\",\n  \"summaries\": [\n   \"consectetur in Lorem sed proident\",\n   \"cupidatat velit aute\"\n  ]\n },\n \"lastDiscoveryStatus\": \"NOT_DETECTED\",\n \"lastDiscoveryTaskId\": \"laboris occaecat aliqua\",\n \"local\": true,\n \"locationId\": \"enim sed\",\n \"name\": \"culpa pariatur deserunt quis magna\",\n \"operatingSystem\": {\n  \"name\": \"dolor\",\n  \"version\": \"quis ad Ut\"\n },\n \"type\": \"RECOVERPOINT_SYSTEM\",\n \"updatedAt\": \"1947-07-19T15:29:54.452Z\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id",
														"storage-systems"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua"
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all inventory sources.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"inventory-sources"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all inventory sources in the PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available inventory sources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"Ut mollit\",\n   \"type\": \"HOST_OS\",\n   \"address\": \"commodo veniam mollit laboris tempor\",\n   \"_embedded\": {\n    \"location\": {\n     \"id\": \"adipisicing sed Ut in proide\",\n     \"name\": \"cillum sunt sit vel\"\n    }\n   },\n   \"credentials\": {\n    \"id\": \"exercitation dolor dolore\"\n   },\n   \"details\": {\n    \"customAppGroup\": {\n     \"defaultGroup\": false,\n     \"ipRules\": {\n      \"ipList\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipRanges\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subnetworks\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"oracle\": {\n      \"rman\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAlias\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsLocation\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"unapprovedHostCount\": -87347024\n    },\n    \"customStorageGroup\": {\n     \"vcmAttributes\": {\n      \"ddboostUserCredsId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"external\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    },\n    \"k8s\": {\n     \"vCenterId\": \"ex magna do irure\"\n    },\n    \"ppdm\": {\n     \"direction\": \"BI_DIRECTIONAL\",\n     \"systemId\": \"dolore in amet cupidatat\"\n    },\n    \"vCenter\": {\n     \"cloudType\": \"NONE\",\n     \"hosting\": false,\n     \"internal\": false,\n     \"vSphereUiIntegration\": false\n    }\n   },\n   \"id\": \"proident reprehenderit ea\",\n   \"lastDiscovered\": \"2003-02-08T05:36:16.473Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"ipsum eiusmod occaecat labore sint\",\n    \"messageID\": \"dolore cupidatat sit non\",\n    \"remediation\": \"in elit dolore dolor\",\n    \"status\": \"FAILED\",\n    \"summaries\": [\n     \"exercitation ut\",\n     \"in nulla\"\n    ]\n   },\n   \"lastDiscoveryTaskId\": \"in sed\",\n   \"local\": false,\n   \"port\": -99077157,\n   \"version\": \"ad consequat minim\"\n  },\n  {\n   \"name\": \"cillum\",\n   \"type\": \"POWERSTOREMANAGEMENTSERVER\",\n   \"address\": \"deserunt enim ex exercitation\",\n   \"_embedded\": {\n    \"location\": {\n     \"id\": \"commodo\",\n     \"name\": \"ullamco deserunt\"\n    }\n   },\n   \"credentials\": {\n    \"id\": \"cillum eiusmod ad\"\n   },\n   \"details\": {\n    \"customAppGroup\": {\n     \"defaultGroup\": false,\n     \"ipRules\": {\n      \"ipList\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipRanges\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subnetworks\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"oracle\": {\n      \"rman\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAlias\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsLocation\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"unapprovedHostCount\": 76478108\n    },\n    \"customStorageGroup\": {\n     \"vcmAttributes\": {\n      \"ddboostUserCredsId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"external\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    },\n    \"k8s\": {\n     \"vCenterId\": \"pariatur Lorem consectetur dolore\"\n    },\n    \"ppdm\": {\n     \"direction\": \"BI_DIRECTIONAL\",\n     \"systemId\": \"Duis sunt velit\"\n    },\n    \"vCenter\": {\n     \"cloudType\": \"VMC\",\n     \"hosting\": true,\n     \"internal\": true,\n     \"vSphereUiIntegration\": true\n    }\n   },\n   \"id\": \"veniam sint ad\",\n   \"lastDiscovered\": \"2000-08-22T15:40:57.780Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"ut labore aliquip exercitation\",\n    \"messageID\": \"mollit minim sed ad\",\n    \"remediation\": \"ipsum mollit\",\n    \"status\": \"CANCELED\",\n    \"summaries\": [\n     \"eu est\",\n     \"quis anim enim consectetur\"\n    ]\n   },\n   \"lastDiscoveryTaskId\": \"dolor do qui nostrud in\",\n   \"local\": true,\n   \"port\": 25532238,\n   \"version\": \"cupidatat tempor laboris\"\n  }\n ],\n \"page\": {\n  \"number\": 57484141,\n  \"queryState\": \"consequat reprehenderit laborum laboris\",\n  \"size\": 86373638,\n  \"totalElements\": 80563754,\n  \"totalPages\": -47626637\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create an inventory source.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/inventory-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"inventory-sources"
									]
								},
								"description": "Creates an inventory source.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"et sit sed\",\n \"type\": \"SMISPROVIDER\",\n \"address\": \"in consectetur\",\n \"_embedded\": {\n  \"location\": {\n   \"id\": \"velit reprehenderit e\",\n   \"name\": \"consectetur incididunt aliqua dolore\"\n  }\n },\n \"credentials\": {\n  \"id\": \"occ\"\n },\n \"details\": {\n  \"customAppGroup\": {\n   \"defaultGroup\": false,\n   \"ipRules\": {\n    \"ipList\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ipRanges\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subnetworks\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"oracle\": {\n    \"rman\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAlias\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsLocation\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"unapprovedHostCount\": 31888898\n  },\n  \"customStorageGroup\": {\n   \"vcmAttributes\": {\n    \"ddboostUserCredsId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"external\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"k8s\": {\n   \"vCenterId\": \"do irure pariatur\"\n  },\n  \"ppdm\": {\n   \"direction\": \"OUTGOING\",\n   \"systemId\": \"sed tempor in cillum\"\n  },\n  \"vCenter\": {\n   \"cloudType\": \"NONE\",\n   \"hosting\": true,\n   \"internal\": false,\n   \"vSphereUiIntegration\": false\n  }\n },\n \"id\": \"Duis proident\",\n \"lastDiscovered\": \"1961-03-31T07:18:29.418Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"consectetur irure deserunt\",\n  \"messageID\": \"reprehenderit officia ad\",\n  \"remediation\": \"dolore\",\n  \"status\": \"OK_WITH_ERRORS\",\n  \"summaries\": [\n   \"officia esse reprehenderit elit minim\",\n   \"dolore amet fugiat eu Excepteur\"\n  ]\n },\n \"lastDiscoveryTaskId\": \"Ut eu in\",\n \"local\": false,\n \"port\": -13169615,\n \"version\": \"do reprehenderit consectetur\"\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully created the inventory source.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"consequat sunt nostrud\",\n    \"type\": \"DEFAULTAPPGROUP\",\n    \"address\": \"dolore nostrud magna\",\n    \"credentials\": {\n        \"id\": \"amet\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": false,\n            \"ipRules\": {\n                \"ipList\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ipRanges\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"subnetworks\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAlias\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsLocation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"unapprovedHostCount\": 72342893\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"external\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"k8s\": {\n            \"vCenterId\": \"non nostrud ut\"\n        },\n        \"ppdm\": {\n            \"direction\": \"INCOMING\",\n            \"systemId\": \"culpa do nulla\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"VMC\",\n            \"hosting\": true,\n            \"internal\": false,\n            \"vSphereUiIntegration\": false\n        }\n    },\n    \"id\": \"velit quis commodo\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"cillum reprehenderit aute\",\n        \"messageID\": \"Excepteur\",\n        \"remediation\": \"exercitation enim\",\n        \"status\": \"UNKNOWN\",\n        \"summaries\": [\n            \"Duis consectetur mollit\",\n            \"voluptate Excepteur sint\"\n        ]\n    },\n    \"local\": false,\n    \"port\": 23744165\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"et sit sed\",\n \"type\": \"SMISPROVIDER\",\n \"address\": \"in consectetur\",\n \"_embedded\": {\n  \"location\": {\n   \"id\": \"velit reprehenderit e\",\n   \"name\": \"consectetur incididunt aliqua dolore\"\n  }\n },\n \"credentials\": {\n  \"id\": \"occ\"\n },\n \"details\": {\n  \"customAppGroup\": {\n   \"defaultGroup\": false,\n   \"ipRules\": {\n    \"ipList\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ipRanges\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subnetworks\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"oracle\": {\n    \"rman\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAlias\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsLocation\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"unapprovedHostCount\": 31888898\n  },\n  \"customStorageGroup\": {\n   \"vcmAttributes\": {\n    \"ddboostUserCredsId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"external\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"k8s\": {\n   \"vCenterId\": \"do irure pariatur\"\n  },\n  \"ppdm\": {\n   \"direction\": \"OUTGOING\",\n   \"systemId\": \"sed tempor in cillum\"\n  },\n  \"vCenter\": {\n   \"cloudType\": \"NONE\",\n   \"hosting\": true,\n   \"internal\": false,\n   \"vSphereUiIntegration\": false\n  }\n },\n \"id\": \"Duis proident\",\n \"lastDiscovered\": \"1961-03-31T07:18:29.418Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"consectetur irure deserunt\",\n  \"messageID\": \"reprehenderit officia ad\",\n  \"remediation\": \"dolore\",\n  \"status\": \"OK_WITH_ERRORS\",\n  \"summaries\": [\n   \"officia esse reprehenderit elit minim\",\n   \"dolore amet fugiat eu Excepteur\"\n  ]\n },\n \"lastDiscoveryTaskId\": \"Ut eu in\",\n \"local\": false,\n \"port\": -13169615,\n \"version\": \"do reprehenderit consectetur\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "kubernetes-clusters",
					"item": [
						{
							"name": "Get Kubernetes clusters.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"kubernetes-clusters"
									]
								},
								"description": "Retrieves all Kubernetes clusters."
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Service unavailable.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Retrieving list of Kubernetes clusters.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"address\": \"e\",\n   \"id\": \"dolore\",\n   \"name\": \"velit quis in\"\n  },\n  {\n   \"address\": \"sed nulla reprehenderit sint\",\n   \"id\": \"id\",\n   \"name\": \"id enim\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Get storage classes from target Kubernetes cluster.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"kubernetes-clusters",
										":cluster-id",
										"pvc-storage-class-mappings"
									],
									"query": [
										{
											"key": "copyId",
											"value": "aute ut id cillum aliqua",
											"description": "(Required) The ID of the copy to be restored."
										}
									],
									"variable": [
										{
											"key": "cluster-id",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) The ID of the Kubernetes cluster."
										}
									]
								},
								"description": "When an alternate storage class is required for restoring to an alternate cluster, this request retrieves a list of compatible storage classes per PersistentVolumeClaim (PVC) from the specified Kubernetes cluster."
							},
							"response": [
								{
									"name": "Required string parameter copyId is not present.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully retrieved list of compatible storage classes.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"pvcName\": \"exercitation\",\n   \"storageClasses\": [\n    \"ut exercitatio\",\n    \"ipsum veniam Lorem nostru\"\n   ]\n  },\n  {\n   \"pvcName\": \"sed Duis do ullamco tempor\",\n   \"storageClasses\": [\n    \"proident amet magna ad\",\n    \"qui sed\"\n   ]\n  }\n ]\n}"
								},
								{
									"name": "Service unavailable.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "aute ut id cillum aliqua"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "licenses",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get license by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Unique identifier for license",
													"type": "string",
													"description": "(Required) License ID sent in request."
												}
											]
										},
										"description": "Retrieves the license associated with the specified ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Cannot find the license with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Found and returned the license with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"key\": \"dolor amet\",\n \"activationDate\": \"tempor minim\",\n \"daysLeftForExpiry\": 38665659,\n \"id\": \"enim id ipsum dolore\",\n \"licenseKeys\": [\n  {\n   \"endDate\": \"voluptate\",\n   \"featureCode\": \"et mollit id Excepteur\",\n   \"featureName\": \"qui ut Ut consequat quis\",\n   \"frontendCapacityInTB\": -36926076.19793229,\n   \"gracePeriod\": \"sint sed officia cillum ut\",\n   \"licenseType\": \"amet do consectetur \",\n   \"numberOfSockets\": \"dolor aute laborum cupidatat\",\n   \"plc\": \"mollit\",\n   \"productLine\": \"labore\",\n   \"startDate\": \"id enim aliqua\",\n   \"uomCode\": \"proident\",\n   \"uomName\": \"consequat\"\n  },\n  {\n   \"endDate\": \"dolore Excepteu\",\n   \"featureCode\": \"aliquip nulla in\",\n   \"featureName\": \"do mollit et eiusmod\",\n   \"frontendCapacityInTB\": 1996938.865957886,\n   \"gracePeriod\": \"nostrud irure fugiat\",\n   \"licenseType\": \"sint Excepteur esse commodo dolor\",\n   \"numberOfSockets\": \"in ea eiusmod ut\",\n   \"plc\": \"sint\",\n   \"productLine\": \"Duis id sunt exercitation\",\n   \"startDate\": \"officia cupidatat culpa\",\n   \"uomCode\": \"nostrud fugiat\",\n   \"uomName\": \"in et ut\"\n  }\n ],\n \"status\": \"VALID\",\n \"swid\": \"voluptate\",\n \"type\": \"TRIAL\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update the license that is associated with the specified ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"esse in non anim\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Unique identifier for license",
													"type": "string",
													"description": "(Required) License ID sent in request."
												}
											]
										},
										"description": "Updates the license associated with the specified ID.\nA license xml file is passed in a key field in the REST API body.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The submitted license is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The license update completed successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"key\": \"dolor amet\",\n \"activationDate\": \"tempor minim\",\n \"daysLeftForExpiry\": 38665659,\n \"id\": \"enim id ipsum dolore\",\n \"licenseKeys\": [\n  {\n   \"endDate\": \"voluptate\",\n   \"featureCode\": \"et mollit id Excepteur\",\n   \"featureName\": \"qui ut Ut consequat quis\",\n   \"frontendCapacityInTB\": -36926076.19793229,\n   \"gracePeriod\": \"sint sed officia cillum ut\",\n   \"licenseType\": \"amet do consectetur \",\n   \"numberOfSockets\": \"dolor aute laborum cupidatat\",\n   \"plc\": \"mollit\",\n   \"productLine\": \"labore\",\n   \"startDate\": \"id enim aliqua\",\n   \"uomCode\": \"proident\",\n   \"uomName\": \"consequat\"\n  },\n  {\n   \"endDate\": \"dolore Excepteu\",\n   \"featureCode\": \"aliquip nulla in\",\n   \"featureName\": \"do mollit et eiusmod\",\n   \"frontendCapacityInTB\": 1996938.865957886,\n   \"gracePeriod\": \"nostrud irure fugiat\",\n   \"licenseType\": \"sint Excepteur esse commodo dolor\",\n   \"numberOfSockets\": \"in ea eiusmod ut\",\n   \"plc\": \"sint\",\n   \"productLine\": \"Duis id sunt exercitation\",\n   \"startDate\": \"officia cupidatat culpa\",\n   \"uomCode\": \"nostrud fugiat\",\n   \"uomName\": \"in et ut\"\n  }\n ],\n \"status\": \"VALID\",\n \"swid\": \"voluptate\",\n \"type\": \"TRIAL\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find license with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"esse in non anim\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all licenses.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/licenses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"licenses"
									]
								},
								"description": "Retrieves licenses that are available on the system.\nPowerProtect Data Manager licenses include status details such as capacity usage, license Type, license status.\nType can be CAPACITY, SOCKET, APPLIANCE.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Located and returned available licenses.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"key\": \"velit officia\",\n   \"activationDate\": \"Duis in culpa\",\n   \"daysLeftForExpiry\": 83555153,\n   \"id\": \"nostrud cillum\",\n   \"licenseKeys\": [\n    {\n     \"endDate\": \"reprehenderit amet\",\n     \"featureCode\": \"dolore minim nostrud\",\n     \"featureName\": \"culpa\",\n     \"frontendCapacityInTB\": 81431699.39612353,\n     \"gracePeriod\": \"minim cillum\",\n     \"licenseType\": \"do pariatur adipisicing anim irure\",\n     \"numberOfSockets\": \"ad mollit esse eiusmod ullamco\",\n     \"plc\": \"occaecat dolore aliquip deserunt nulla\",\n     \"productLine\": \"est nostrud\",\n     \"startDate\": \"deserunt magna sunt culpa id\",\n     \"uomCode\": \"aute\",\n     \"uomName\": \"aute esse enim\"\n    },\n    {\n     \"endDate\": \"culpa amet\",\n     \"featureCode\": \"amet voluptate cillum\",\n     \"featureName\": \"irure quis commodo id\",\n     \"frontendCapacityInTB\": -44180788.87867067,\n     \"gracePeriod\": \"enim sit\",\n     \"licenseType\": \"sunt laboris sit\",\n     \"numberOfSockets\": \"aliqua exercitation ipsum incid\",\n     \"plc\": \"pariatur laboris non Lorem\",\n     \"productLine\": \"non\",\n     \"startDate\": \"proident in Duis\",\n     \"uomCode\": \"dolor aliqua\",\n     \"uomName\": \"sint tempor nostrud laborum pariatur\"\n    }\n   ],\n   \"status\": \"INVALID\",\n   \"swid\": \"reprehenderit\",\n   \"type\": \"CAPACITY\"\n  },\n  {\n   \"key\": \"incididunt ut\",\n   \"activationDate\": \"sed\",\n   \"daysLeftForExpiry\": -96543622,\n   \"id\": \"sunt reprehenderit minim eu\",\n   \"licenseKeys\": [\n    {\n     \"endDate\": \"ad elit pariatur anim\",\n     \"featureCode\": \"officia reprehenderit ad cillum\",\n     \"featureName\": \"in\",\n     \"frontendCapacityInTB\": -99704818.71288949,\n     \"gracePeriod\": \"ex\",\n     \"licenseType\": \"est cupidatat pariatur\",\n     \"numberOfSockets\": \"adipisicing magna\",\n     \"plc\": \"occaecat al\",\n     \"productLine\": \"ullamco adipisicing eu Exc\",\n     \"startDate\": \"adipisicing Excepteur est\",\n     \"uomCode\": \"Lorem voluptate sit aute\",\n     \"uomName\": \"sunt exercitation sed consectetur\"\n    },\n    {\n     \"endDate\": \"incididunt in\",\n     \"featureCode\": \"ut\",\n     \"featureName\": \"magna dolor in exercitation\",\n     \"frontendCapacityInTB\": 71765530.02255654,\n     \"gracePeriod\": \"voluptate aute esse\",\n     \"licenseType\": \"sint et nostrud enim\",\n     \"numberOfSockets\": \"do Duis adipisicing in\",\n     \"plc\": \"do tempor sint\",\n     \"productLine\": \"esse Duis\",\n     \"startDate\": \"sunt \",\n     \"uomCode\": \"magna exercitation\",\n     \"uomName\": \"occaecat nulla tempo\"\n    }\n   ],\n   \"status\": \"INVALID\",\n   \"swid\": \"minim labore do\",\n   \"type\": \"TRIAL\"\n  }\n ],\n \"page\": {\n  \"number\": 7047193,\n  \"queryState\": \"irure anim adipisicing aliqua elit\",\n  \"size\": 3746419,\n  \"totalElements\": 23003217,\n  \"totalPages\": 33588262\n }\n}"
								}
							]
						},
						{
							"name": "Create new license.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"esse in non anim\""
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/licenses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"licenses"
									]
								},
								"description": "Creates a new license.\nA license xml file is passed in a key field.\n\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The submitted license is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"esse in non anim\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The license was validated successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"esse in non anim\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"key\": \"dolor amet\",\n \"activationDate\": \"tempor minim\",\n \"daysLeftForExpiry\": 38665659,\n \"id\": \"enim id ipsum dolore\",\n \"licenseKeys\": [\n  {\n   \"endDate\": \"voluptate\",\n   \"featureCode\": \"et mollit id Excepteur\",\n   \"featureName\": \"qui ut Ut consequat quis\",\n   \"frontendCapacityInTB\": -36926076.19793229,\n   \"gracePeriod\": \"sint sed officia cillum ut\",\n   \"licenseType\": \"amet do consectetur \",\n   \"numberOfSockets\": \"dolor aute laborum cupidatat\",\n   \"plc\": \"mollit\",\n   \"productLine\": \"labore\",\n   \"startDate\": \"id enim aliqua\",\n   \"uomCode\": \"proident\",\n   \"uomName\": \"consequat\"\n  },\n  {\n   \"endDate\": \"dolore Excepteu\",\n   \"featureCode\": \"aliquip nulla in\",\n   \"featureName\": \"do mollit et eiusmod\",\n   \"frontendCapacityInTB\": 1996938.865957886,\n   \"gracePeriod\": \"nostrud irure fugiat\",\n   \"licenseType\": \"sint Excepteur esse commodo dolor\",\n   \"numberOfSockets\": \"in ea eiusmod ut\",\n   \"plc\": \"sint\",\n   \"productLine\": \"Duis id sunt exercitation\",\n   \"startDate\": \"officia cupidatat culpa\",\n   \"uomCode\": \"nostrud fugiat\",\n   \"uomName\": \"in et ut\"\n  }\n ],\n \"status\": \"VALID\",\n \"swid\": \"voluptate\",\n \"type\": \"TRIAL\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"esse in non anim\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The license was created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"esse in non anim\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"key\": \"dolor amet\",\n \"activationDate\": \"tempor minim\",\n \"daysLeftForExpiry\": 38665659,\n \"id\": \"enim id ipsum dolore\",\n \"licenseKeys\": [\n  {\n   \"endDate\": \"voluptate\",\n   \"featureCode\": \"et mollit id Excepteur\",\n   \"featureName\": \"qui ut Ut consequat quis\",\n   \"frontendCapacityInTB\": -36926076.19793229,\n   \"gracePeriod\": \"sint sed officia cillum ut\",\n   \"licenseType\": \"amet do consectetur \",\n   \"numberOfSockets\": \"dolor aute laborum cupidatat\",\n   \"plc\": \"mollit\",\n   \"productLine\": \"labore\",\n   \"startDate\": \"id enim aliqua\",\n   \"uomCode\": \"proident\",\n   \"uomName\": \"consequat\"\n  },\n  {\n   \"endDate\": \"dolore Excepteu\",\n   \"featureCode\": \"aliquip nulla in\",\n   \"featureName\": \"do mollit et eiusmod\",\n   \"frontendCapacityInTB\": 1996938.865957886,\n   \"gracePeriod\": \"nostrud irure fugiat\",\n   \"licenseType\": \"sint Excepteur esse commodo dolor\",\n   \"numberOfSockets\": \"in ea eiusmod ut\",\n   \"plc\": \"sint\",\n   \"productLine\": \"Duis id sunt exercitation\",\n   \"startDate\": \"officia cupidatat culpa\",\n   \"uomCode\": \"nostrud fugiat\",\n   \"uomName\": \"in et ut\"\n  }\n ],\n \"status\": \"VALID\",\n \"swid\": \"voluptate\",\n \"type\": \"TRIAL\"\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"esse in non anim\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "locations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete location by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the location."
												}
											]
										},
										"description": "Deletes a **Location** from PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for Data Domain system.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully deleted the location.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a location by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the location."
												}
											]
										},
										"description": "Retrieves a **Location** by ID in PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for Data Domain system.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested location does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"minim ut culpa dolore\",\n \"lat\": \"dolore pariatur adipisicing anim\",\n \"lon\": \"minim amet proident \",\n \"name\": \"et in est reprehenderit\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all locations.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"locations"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all **locations** in the PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for Data Domain system.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available locations.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"amet dolore commodo\",\n   \"lat\": \"in\",\n   \"lon\": \"consequat\",\n   \"name\": \"sed exercitation proident\"\n  },\n  {\n   \"id\": \"cillum tempor\",\n   \"lat\": \"officia nostrud\",\n   \"lon\": \"ea proident ullamco enim\",\n   \"name\": \"esse exercitation\"\n  }\n ],\n \"page\": {\n  \"number\": 98929354,\n  \"queryState\": \"Lorem pariatur\",\n  \"size\": -35462374,\n  \"totalElements\": 73931674,\n  \"totalPages\": 88567139\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create a location.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"minim ut culpa dolore\",\n    \"lat\": \"dolore pariatur adipisicing anim\",\n    \"lon\": \"minim amet proident \",\n    \"name\": \"et in est reprehenderit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"locations"
									]
								},
								"description": "Creates a **Location** in the PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for Data Domain system.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"minim ut culpa dolore\",\n    \"lat\": \"dolore pariatur adipisicing anim\",\n    \"lon\": \"minim amet proident \",\n    \"name\": \"et in est reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"minim ut culpa dolore\",\n    \"lat\": \"dolore pariatur adipisicing anim\",\n    \"lon\": \"minim amet proident \",\n    \"name\": \"et in est reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully created the location.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"minim ut culpa dolore\",\n    \"lat\": \"dolore pariatur adipisicing anim\",\n    \"lon\": \"minim amet proident \",\n    \"name\": \"et in est reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"minim ut culpa dolore\",\n \"lat\": \"dolore pariatur adipisicing anim\",\n \"lon\": \"minim amet proident \",\n \"name\": \"et in est reprehenderit\"\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"minim ut culpa dolore\",\n    \"lat\": \"dolore pariatur adipisicing anim\",\n    \"lon\": \"minim amet proident \",\n    \"name\": \"et in est reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"minim ut culpa dolore\",\n \"lat\": \"dolore pariatur adipisicing anim\",\n \"lon\": \"minim amet proident \",\n \"name\": \"et in est reprehenderit\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"minim ut culpa dolore\",\n    \"lat\": \"dolore pariatur adipisicing anim\",\n    \"lon\": \"minim amet proident \",\n    \"name\": \"et in est reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"minim ut culpa dolore\",\n    \"lat\": \"dolore pariatur adipisicing anim\",\n    \"lon\": \"minim amet proident \",\n    \"name\": \"et in est reprehenderit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "log-bundles",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Deletes a completed, cancelled, or failed log bundle. ",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) UUID for the log bundle."
												}
											]
										},
										"description": "Deletes a completed, cancelled, or failed log bundle.  A building log bundle cannot be deleted.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "If the log bundle with the given ID was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor did not provide valid authentication credentials.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "If the log bundle is currently in a BUILDING state.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The log bundle was successfully set to a DELETING status and is purged later on.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"tempor\"\n}"
										},
										{
											"name": "The requestor does not have required permissions to access the resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Any server error that prevents completion of the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get the log bundle with the specified ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) UUID for the log bundle."
												}
											]
										},
										"description": "Retrieves the log bundle with the specified ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "No log bundle with that ID was found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully retrieved and returned the log bundle with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"bundleStartDate\": \"ut tempor amet\",\n \"logBundleFormula\": {\n  \"id\": \"laborum veniam do s\",\n  \"createdDate\": \"deserunt Excepteur pariatur sit\",\n  \"description\": \"sit ullamco cillum Duis\",\n  \"duration\": \"Excepteur irure qui non et\",\n  \"includeAllLogCategories\": false,\n  \"includeAllLogSources\": true,\n  \"logCategoryList\": [\n   {\n    \"id\": \"in\",\n    \"link\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"id\": \"aliqua laborum minim sit fugiat\",\n    \"link\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"logSourceList\": [\n   {\n    \"id\": \"qui cillum occaecat\",\n    \"link\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"id\": \"voluptate velit in Duis\",\n    \"link\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"name\": \"est irure ipsum dolor\"\n },\n \"filename\": \"enim pariatur\",\n \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n \"id\": \"Lorem id\",\n \"logBundleFiles\": [\n  {\n   \"fileName\": \"esse veniam proident nulla\",\n   \"sourceSystems\": [\n    \"nostrud labore ullamco eu\",\n    \"ipsum laboris aliquip\"\n   ],\n   \"url\": \"proident dolor\"\n  },\n  {\n   \"fileName\": \"ex\",\n   \"sourceSystems\": [\n    \"ut ex nostrud laboris\",\n    \"ipsum non\"\n   ],\n   \"url\": \"sint amet qui sed\"\n  }\n ],\n \"percentComplete\": -40828954,\n \"sizeOnDiskInBytes\": -15637158,\n \"sourceSystems\": [\n  \"exercitation velit\",\n  \"consequat cillum\"\n ],\n \"status\": \"Lorem\"\n}"
										},
										{
											"name": "The requestor did not provide valid authentication credentials.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Any server error that prevents completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor does not have required permissions to access the resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all existing log bundles in the system.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-bundles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-bundles"
									]
								},
								"description": "Retrieves all existing log bundles in the system. Supports filtering. The status case is ignored.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The filter string was not parsable.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor did not provide valid authentication credentials.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Any server error that prevents completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved and returned available log bundles.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"bundleStartDate\": \"esse qui\",\n   \"logBundleFormula\": {\n    \"id\": \"ipsum occaecat enim\",\n    \"createdDate\": \"pariatur\",\n    \"description\": \"elit laboris\",\n    \"duration\": \"incididunt minim nostrud\",\n    \"includeAllLogCategories\": false,\n    \"includeAllLogSources\": false,\n    \"logCategoryList\": [\n     {\n      \"id\": \"irure ut ea voluptate quis\",\n      \"link\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"adipisicing consequat officia sed\",\n      \"link\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"logSourceList\": [\n     {\n      \"id\": \"dolore\",\n      \"link\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"et tempor\",\n      \"link\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"name\": \"ullamco Ut pariatur\"\n   },\n   \"filename\": \"tempor dolore in eiusmod\",\n   \"generationEndDateTime\": \"1972-10-14T08:06:53.852Z\",\n   \"generationStartDateTime\": \"1985-04-13T14:31:14.793Z\",\n   \"id\": \"sunt pariatur commodo\",\n   \"logBundleFiles\": [\n    {\n     \"fileName\": \"non consectetur Duis Excepteur\",\n     \"sourceSystems\": [\n      \"cillum dolor in\",\n      \"s\"\n     ],\n     \"url\": \"do id\"\n    },\n    {\n     \"fileName\": \"ea cillum irure est\",\n     \"sourceSystems\": [\n      \"veniam aute\",\n      \"cupidatat eiusmod\"\n     ],\n     \"url\": \"sit\"\n    }\n   ],\n   \"percentComplete\": 55331085,\n   \"sizeOnDiskInBytes\": -89550558,\n   \"sourceSystems\": [\n    \"elit\",\n    \"ipsum\"\n   ],\n   \"status\": \"exercitation aliquip\"\n  },\n  {\n   \"bundleStartDate\": \"esse id\",\n   \"logBundleFormula\": {\n    \"id\": \"ea sit\",\n    \"createdDate\": \"est velit eu Duis\",\n    \"description\": \"aute in reprehenderit ipsum nisi\",\n    \"duration\": \"tempor ut eu\",\n    \"includeAllLogCategories\": false,\n    \"includeAllLogSources\": true,\n    \"logCategoryList\": [\n     {\n      \"id\": \"deserunt in\",\n      \"link\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"Excepteur cupidatat magna\",\n      \"link\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"logSourceList\": [\n     {\n      \"id\": \"anim in do elit eiusmod\",\n      \"link\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"mag\",\n      \"link\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"name\": \"laboris ipsum ea\"\n   },\n   \"filename\": \"minim do eiusmod\",\n   \"generationEndDateTime\": \"1996-01-23T15:52:25.858Z\",\n   \"generationStartDateTime\": \"1975-02-05T09:50:27.543Z\",\n   \"id\": \"deserunt proident id veniam\",\n   \"logBundleFiles\": [\n    {\n     \"fileName\": \"Excepteur laborum\",\n     \"sourceSystems\": [\n      \"et enim\",\n      \"exercitation proident sunt quis\"\n     ],\n     \"url\": \"elit ipsum sit\"\n    },\n    {\n     \"fileName\": \"nisi sunt veniam Excepteur aliquip\",\n     \"sourceSystems\": [\n      \"Excepteur\",\n      \"in sed consequat\"\n     ],\n     \"url\": \"ullamco est qui\"\n    }\n   ],\n   \"percentComplete\": -49931900,\n   \"sizeOnDiskInBytes\": 47843955,\n   \"sourceSystems\": [\n    \"amet aliquip nulla enim\",\n    \"ut id\"\n   ],\n   \"status\": \"proident\"\n  }\n ],\n \"page\": {\n  \"number\": 3558521,\n  \"queryState\": \"cupidatat velit\",\n  \"size\": 37235599,\n  \"totalElements\": -63205283,\n  \"totalPages\": 37534487\n }\n}"
								},
								{
									"name": "The requestor does not have required permissions to access the resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new log bundle.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bundleStartDate\": \"ut tempor amet\",\n    \"logBundleFormula\": {\n        \"id\": \"laborum veniam do s\",\n        \"createdDate\": \"deserunt Excepteur pariatur sit\",\n        \"description\": \"sit ullamco cillum Duis\",\n        \"duration\": \"Excepteur irure qui non et\",\n        \"includeAllLogCategories\": false,\n        \"includeAllLogSources\": true,\n        \"logCategoryList\": [\n            {\n                \"id\": \"in\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"aliqua laborum minim sit fugiat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"qui cillum occaecat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"voluptate velit in Duis\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"name\": \"est irure ipsum dolor\"\n    },\n    \"filename\": \"enim pariatur\",\n    \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n    \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n    \"id\": \"Lorem id\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"esse veniam proident nulla\",\n            \"sourceSystems\": [\n                \"nostrud labore ullamco eu\",\n                \"ipsum laboris aliquip\"\n            ],\n            \"url\": \"proident dolor\"\n        },\n        {\n            \"fileName\": \"ex\",\n            \"sourceSystems\": [\n                \"ut ex nostrud laboris\",\n                \"ipsum non\"\n            ],\n            \"url\": \"sint amet qui sed\"\n        }\n    ],\n    \"percentComplete\": -40828954,\n    \"sizeOnDiskInBytes\": -15637158,\n    \"sourceSystems\": [\n        \"exercitation velit\",\n        \"consequat cillum\"\n    ],\n    \"status\": \"Lorem\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-bundles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-bundles"
									]
								},
								"description": "Creates a new log bundle and returns the log bundle with its ID and a status of BUILDING.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Any server error that prevents completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"ut tempor amet\",\n    \"logBundleFormula\": {\n        \"id\": \"laborum veniam do s\",\n        \"createdDate\": \"deserunt Excepteur pariatur sit\",\n        \"description\": \"sit ullamco cillum Duis\",\n        \"duration\": \"Excepteur irure qui non et\",\n        \"includeAllLogCategories\": false,\n        \"includeAllLogSources\": true,\n        \"logCategoryList\": [\n            {\n                \"id\": \"in\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"aliqua laborum minim sit fugiat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"qui cillum occaecat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"voluptate velit in Duis\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"name\": \"est irure ipsum dolor\"\n    },\n    \"filename\": \"enim pariatur\",\n    \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n    \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n    \"id\": \"Lorem id\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"esse veniam proident nulla\",\n            \"sourceSystems\": [\n                \"nostrud labore ullamco eu\",\n                \"ipsum laboris aliquip\"\n            ],\n            \"url\": \"proident dolor\"\n        },\n        {\n            \"fileName\": \"ex\",\n            \"sourceSystems\": [\n                \"ut ex nostrud laboris\",\n                \"ipsum non\"\n            ],\n            \"url\": \"sint amet qui sed\"\n        }\n    ],\n    \"percentComplete\": -40828954,\n    \"sizeOnDiskInBytes\": -15637158,\n    \"sourceSystems\": [\n        \"exercitation velit\",\n        \"consequat cillum\"\n    ],\n    \"status\": \"Lorem\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Occurs if the log bundle contains anything other than the bundle start date and log bundle formula. Also occurs if the formula provided contains an ID and other fields, or other fields and an ID.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"ut tempor amet\",\n    \"logBundleFormula\": {\n        \"id\": \"laborum veniam do s\",\n        \"createdDate\": \"deserunt Excepteur pariatur sit\",\n        \"description\": \"sit ullamco cillum Duis\",\n        \"duration\": \"Excepteur irure qui non et\",\n        \"includeAllLogCategories\": false,\n        \"includeAllLogSources\": true,\n        \"logCategoryList\": [\n            {\n                \"id\": \"in\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"aliqua laborum minim sit fugiat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"qui cillum occaecat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"voluptate velit in Duis\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"name\": \"est irure ipsum dolor\"\n    },\n    \"filename\": \"enim pariatur\",\n    \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n    \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n    \"id\": \"Lorem id\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"esse veniam proident nulla\",\n            \"sourceSystems\": [\n                \"nostrud labore ullamco eu\",\n                \"ipsum laboris aliquip\"\n            ],\n            \"url\": \"proident dolor\"\n        },\n        {\n            \"fileName\": \"ex\",\n            \"sourceSystems\": [\n                \"ut ex nostrud laboris\",\n                \"ipsum non\"\n            ],\n            \"url\": \"sint amet qui sed\"\n        }\n    ],\n    \"percentComplete\": -40828954,\n    \"sizeOnDiskInBytes\": -15637158,\n    \"sourceSystems\": [\n        \"exercitation velit\",\n        \"consequat cillum\"\n    ],\n    \"status\": \"Lorem\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The submitted log bundle could not be parsed due to syntax errors.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"ut tempor amet\",\n    \"logBundleFormula\": {\n        \"id\": \"laborum veniam do s\",\n        \"createdDate\": \"deserunt Excepteur pariatur sit\",\n        \"description\": \"sit ullamco cillum Duis\",\n        \"duration\": \"Excepteur irure qui non et\",\n        \"includeAllLogCategories\": false,\n        \"includeAllLogSources\": true,\n        \"logCategoryList\": [\n            {\n                \"id\": \"in\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"aliqua laborum minim sit fugiat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"qui cillum occaecat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"voluptate velit in Duis\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"name\": \"est irure ipsum dolor\"\n    },\n    \"filename\": \"enim pariatur\",\n    \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n    \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n    \"id\": \"Lorem id\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"esse veniam proident nulla\",\n            \"sourceSystems\": [\n                \"nostrud labore ullamco eu\",\n                \"ipsum laboris aliquip\"\n            ],\n            \"url\": \"proident dolor\"\n        },\n        {\n            \"fileName\": \"ex\",\n            \"sourceSystems\": [\n                \"ut ex nostrud laboris\",\n                \"ipsum non\"\n            ],\n            \"url\": \"sint amet qui sed\"\n        }\n    ],\n    \"percentComplete\": -40828954,\n    \"sizeOnDiskInBytes\": -15637158,\n    \"sourceSystems\": [\n        \"exercitation velit\",\n        \"consequat cillum\"\n    ],\n    \"status\": \"Lorem\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Another log bundle is currently building.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"ut tempor amet\",\n    \"logBundleFormula\": {\n        \"id\": \"laborum veniam do s\",\n        \"createdDate\": \"deserunt Excepteur pariatur sit\",\n        \"description\": \"sit ullamco cillum Duis\",\n        \"duration\": \"Excepteur irure qui non et\",\n        \"includeAllLogCategories\": false,\n        \"includeAllLogSources\": true,\n        \"logCategoryList\": [\n            {\n                \"id\": \"in\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"aliqua laborum minim sit fugiat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"qui cillum occaecat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"voluptate velit in Duis\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"name\": \"est irure ipsum dolor\"\n    },\n    \"filename\": \"enim pariatur\",\n    \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n    \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n    \"id\": \"Lorem id\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"esse veniam proident nulla\",\n            \"sourceSystems\": [\n                \"nostrud labore ullamco eu\",\n                \"ipsum laboris aliquip\"\n            ],\n            \"url\": \"proident dolor\"\n        },\n        {\n            \"fileName\": \"ex\",\n            \"sourceSystems\": [\n                \"ut ex nostrud laboris\",\n                \"ipsum non\"\n            ],\n            \"url\": \"sint amet qui sed\"\n        }\n    ],\n    \"percentComplete\": -40828954,\n    \"sizeOnDiskInBytes\": -15637158,\n    \"sourceSystems\": [\n        \"exercitation velit\",\n        \"consequat cillum\"\n    ],\n    \"status\": \"Lorem\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor does not have required permissions to access the resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"ut tempor amet\",\n    \"logBundleFormula\": {\n        \"id\": \"laborum veniam do s\",\n        \"createdDate\": \"deserunt Excepteur pariatur sit\",\n        \"description\": \"sit ullamco cillum Duis\",\n        \"duration\": \"Excepteur irure qui non et\",\n        \"includeAllLogCategories\": false,\n        \"includeAllLogSources\": true,\n        \"logCategoryList\": [\n            {\n                \"id\": \"in\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"aliqua laborum minim sit fugiat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"qui cillum occaecat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"voluptate velit in Duis\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"name\": \"est irure ipsum dolor\"\n    },\n    \"filename\": \"enim pariatur\",\n    \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n    \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n    \"id\": \"Lorem id\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"esse veniam proident nulla\",\n            \"sourceSystems\": [\n                \"nostrud labore ullamco eu\",\n                \"ipsum laboris aliquip\"\n            ],\n            \"url\": \"proident dolor\"\n        },\n        {\n            \"fileName\": \"ex\",\n            \"sourceSystems\": [\n                \"ut ex nostrud laboris\",\n                \"ipsum non\"\n            ],\n            \"url\": \"sint amet qui sed\"\n        }\n    ],\n    \"percentComplete\": -40828954,\n    \"sizeOnDiskInBytes\": -15637158,\n    \"sourceSystems\": [\n        \"exercitation velit\",\n        \"consequat cillum\"\n    ],\n    \"status\": \"Lorem\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The log bundle was successfully posted and started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"ut tempor amet\",\n    \"logBundleFormula\": {\n        \"id\": \"laborum veniam do s\",\n        \"createdDate\": \"deserunt Excepteur pariatur sit\",\n        \"description\": \"sit ullamco cillum Duis\",\n        \"duration\": \"Excepteur irure qui non et\",\n        \"includeAllLogCategories\": false,\n        \"includeAllLogSources\": true,\n        \"logCategoryList\": [\n            {\n                \"id\": \"in\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"aliqua laborum minim sit fugiat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"qui cillum occaecat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"voluptate velit in Duis\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"name\": \"est irure ipsum dolor\"\n    },\n    \"filename\": \"enim pariatur\",\n    \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n    \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n    \"id\": \"Lorem id\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"esse veniam proident nulla\",\n            \"sourceSystems\": [\n                \"nostrud labore ullamco eu\",\n                \"ipsum laboris aliquip\"\n            ],\n            \"url\": \"proident dolor\"\n        },\n        {\n            \"fileName\": \"ex\",\n            \"sourceSystems\": [\n                \"ut ex nostrud laboris\",\n                \"ipsum non\"\n            ],\n            \"url\": \"sint amet qui sed\"\n        }\n    ],\n    \"percentComplete\": -40828954,\n    \"sizeOnDiskInBytes\": -15637158,\n    \"sourceSystems\": [\n        \"exercitation velit\",\n        \"consequat cillum\"\n    ],\n    \"status\": \"Lorem\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"Excepteur\"\n}"
								},
								{
									"name": "The requestor did not provide valid authentication credentials.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"ut tempor amet\",\n    \"logBundleFormula\": {\n        \"id\": \"laborum veniam do s\",\n        \"createdDate\": \"deserunt Excepteur pariatur sit\",\n        \"description\": \"sit ullamco cillum Duis\",\n        \"duration\": \"Excepteur irure qui non et\",\n        \"includeAllLogCategories\": false,\n        \"includeAllLogSources\": true,\n        \"logCategoryList\": [\n            {\n                \"id\": \"in\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"aliqua laborum minim sit fugiat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"qui cillum occaecat\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"id\": \"voluptate velit in Duis\",\n                \"link\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"name\": \"est irure ipsum dolor\"\n    },\n    \"filename\": \"enim pariatur\",\n    \"generationEndDateTime\": \"1947-12-01T01:42:05.458Z\",\n    \"generationStartDateTime\": \"1972-12-09T03:22:07.778Z\",\n    \"id\": \"Lorem id\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"esse veniam proident nulla\",\n            \"sourceSystems\": [\n                \"nostrud labore ullamco eu\",\n                \"ipsum laboris aliquip\"\n            ],\n            \"url\": \"proident dolor\"\n        },\n        {\n            \"fileName\": \"ex\",\n            \"sourceSystems\": [\n                \"ut ex nostrud laboris\",\n                \"ipsum non\"\n            ],\n            \"url\": \"sint amet qui sed\"\n        }\n    ],\n    \"percentComplete\": -40828954,\n    \"sizeOnDiskInBytes\": -15637158,\n    \"sourceSystems\": [\n        \"exercitation velit\",\n        \"consequat cillum\"\n    ],\n    \"status\": \"Lorem\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "networks",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete network by id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) "
												}
											]
										},
										"description": "Need check whether VLAN used by any Asset, if yes, return error.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Request is accepted, delete is on going, check result by GET and expect 404 for success, otherwise, check status, Changed means on going, failed for failed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Delete network successfully and ip released.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Network used by some assets, can't be delete, remove assign first.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Need login.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Error when delete.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get network by id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) "
												}
											]
										},
										"description": "\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Need login.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Return network info.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"pariatur sed\",\n \"vlanId\": 3046,\n \"ips\": [\n  \"veniam dolore amet eiusmod\",\n  \"dolore non enim fugiat\"\n ],\n \"netmask\": \"255.255.255.0, /24\",\n \"mtu\": 1500,\n \"type\": \"any\",\n \"gateway\": \"exercitation\",\n \"id\": \"elit in nisi consectetur\",\n \"routes\": [\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  },\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  }\n ],\n \"status\": \"init\",\n \"usages\": [\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"ut Ut\",\n   \"lastUpdateAt\": \"nostrud reprehenderit Duis \",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"amet cupidatat aliqua in\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"init\",\n   \"vmNetworkName\": \"velit Lorem exercitation tempor\"\n  },\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"aute officia amet\",\n   \"lastUpdateAt\": \"fugiat offi\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"culpa occaecat nulla minim\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"init\",\n   \"vmNetworkName\": \"commodo\"\n  }\n ],\n \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update whole network",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"pariatur sed\",\n    \"vlanId\": 3046,\n    \"ips\": [\n        \"veniam dolore amet eiusmod\",\n        \"dolore non enim fugiat\"\n    ],\n    \"netmask\": \"255.255.255.0, /24\",\n    \"mtu\": 1500,\n    \"type\": \"any\",\n    \"gateway\": \"exercitation\",\n    \"id\": \"elit in nisi consectetur\",\n    \"routes\": [\n        {\n            \"destination\": \"10.0.10.0\",\n            \"gateway\": \"10.20.30.100\",\n            \"netmask\": \"255.255.255.0\",\n            \"type\": \"subnet\"\n        },\n        {\n            \"destination\": \"10.0.10.0\",\n            \"gateway\": \"10.20.30.100\",\n            \"netmask\": \"255.255.255.0\",\n            \"type\": \"subnet\"\n        }\n    ],\n    \"status\": \"init\",\n    \"usages\": [\n        {\n            \"device\": \"eth1, eth2\",\n            \"inUse\": false,\n            \"ip\": \"ut Ut\",\n            \"lastUpdateAt\": \"nostrud reprehenderit Duis \",\n            \"networkInterface\": \"eth1.100\",\n            \"referenceId\": \"amet cupidatat aliqua in\",\n            \"serverType\": \"V_PROXY\",\n            \"status\": \"init\",\n            \"vmNetworkName\": \"velit Lorem exercitation tempor\"\n        },\n        {\n            \"device\": \"eth1, eth2\",\n            \"inUse\": false,\n            \"ip\": \"aute officia amet\",\n            \"lastUpdateAt\": \"fugiat offi\",\n            \"networkInterface\": \"eth1.100\",\n            \"referenceId\": \"culpa occaecat nulla minim\",\n            \"serverType\": \"V_PROXY\",\n            \"status\": \"init\",\n            \"vmNetworkName\": \"commodo\"\n        }\n    ],\n    \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) "
												}
											]
										},
										"description": "Update whole network.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Request contains invalid content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Some error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "If update network but some using IP removed, can't continue.\nIf need more IP than passed in, can't continue.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No any changes need apply to all sub systems and would directly return success.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"pariatur sed\",\n \"vlanId\": 3046,\n \"ips\": [\n  \"veniam dolore amet eiusmod\",\n  \"dolore non enim fugiat\"\n ],\n \"netmask\": \"255.255.255.0, /24\",\n \"mtu\": 1500,\n \"type\": \"any\",\n \"gateway\": \"exercitation\",\n \"id\": \"elit in nisi consectetur\",\n \"routes\": [\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  },\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  }\n ],\n \"status\": \"init\",\n \"usages\": [\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"ut Ut\",\n   \"lastUpdateAt\": \"nostrud reprehenderit Duis \",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"amet cupidatat aliqua in\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"init\",\n   \"vmNetworkName\": \"velit Lorem exercitation tempor\"\n  },\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"aute officia amet\",\n   \"lastUpdateAt\": \"fugiat offi\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"culpa occaecat nulla minim\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"init\",\n   \"vmNetworkName\": \"commodo\"\n  }\n ],\n \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
										},
										{
											"name": "Need login.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request accepted and executing on going.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"pariatur sed\",\n \"vlanId\": 3046,\n \"ips\": [\n  \"veniam dolore amet eiusmod\",\n  \"dolore non enim fugiat\"\n ],\n \"netmask\": \"255.255.255.0, /24\",\n \"mtu\": 1500,\n \"type\": \"any\",\n \"gateway\": \"exercitation\",\n \"id\": \"elit in nisi consectetur\",\n \"routes\": [\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  },\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  }\n ],\n \"status\": \"init\",\n \"usages\": [\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"ut Ut\",\n   \"lastUpdateAt\": \"nostrud reprehenderit Duis \",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"amet cupidatat aliqua in\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"init\",\n   \"vmNetworkName\": \"velit Lorem exercitation tempor\"\n  },\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"aute officia amet\",\n   \"lastUpdateAt\": \"fugiat offi\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"culpa occaecat nulla minim\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"init\",\n   \"vmNetworkName\": \"commodo\"\n  }\n ],\n \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get networks.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"networks"
									]
								},
								"description": "Retrieves all existing networks. Does not return a default network if no additional networks are added.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Cannot retrieve the networks.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Valid login is required.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns all VLANs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"\",\n   \"vlanId\": 820,\n   \"ips\": [\n    \"ut consectetur\",\n    \"eu culpa ullamco sed velit\"\n   ],\n   \"netmask\": \"255.255.255.0, /24\",\n   \"mtu\": 1500,\n   \"type\": \"any\",\n   \"gateway\": \"ex in\",\n   \"id\": \"sunt do in esse\",\n   \"routes\": [\n    {\n     \"destination\": \"10.0.10.0\",\n     \"gateway\": \"10.20.30.100\",\n     \"netmask\": \"255.255.255.0\",\n     \"type\": \"subnet\"\n    },\n    {\n     \"destination\": \"10.0.10.0\",\n     \"gateway\": \"10.20.30.100\",\n     \"netmask\": \"255.255.255.0\",\n     \"type\": \"subnet\"\n    }\n   ],\n   \"status\": \"init\",\n   \"usages\": [\n    {\n     \"device\": \"eth1, eth2\",\n     \"inUse\": false,\n     \"ip\": \"ut\",\n     \"lastUpdateAt\": \"in nostrud in irure cillum\",\n     \"networkInterface\": \"eth1.100\",\n     \"referenceId\": \"aute cons\",\n     \"serverType\": \"SEARCH\",\n     \"status\": \"deleting\",\n     \"vmNetworkName\": \"ut officia aliqua ea\"\n    },\n    {\n     \"device\": \"eth1, eth2\",\n     \"inUse\": false,\n     \"ip\": \"culpa anim\",\n     \"lastUpdateAt\": \"veniam laboris\",\n     \"networkInterface\": \"eth1.100\",\n     \"referenceId\": \"exercitation dolor do ullamco\",\n     \"serverType\": \"SEARCH\",\n     \"status\": \"deleting\",\n     \"vmNetworkName\": \"minim eiusmod sunt mollit\"\n    }\n   ],\n   \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n  },\n  {\n   \"name\": \"Duis\",\n   \"vlanId\": 3456,\n   \"ips\": [\n    \"sit esse\",\n    \"officia deserunt voluptate\"\n   ],\n   \"netmask\": \"255.255.255.0, /24\",\n   \"mtu\": 1500,\n   \"type\": \"any\",\n   \"gateway\": \"incididunt laborum\",\n   \"id\": \"dolore sit\",\n   \"routes\": [\n    {\n     \"destination\": \"10.0.10.0\",\n     \"gateway\": \"10.20.30.100\",\n     \"netmask\": \"255.255.255.0\",\n     \"type\": \"subnet\"\n    },\n    {\n     \"destination\": \"10.0.10.0\",\n     \"gateway\": \"10.20.30.100\",\n     \"netmask\": \"255.255.255.0\",\n     \"type\": \"subnet\"\n    }\n   ],\n   \"status\": \"init\",\n   \"usages\": [\n    {\n     \"device\": \"eth1, eth2\",\n     \"inUse\": false,\n     \"ip\": \"pariatur tempor laborum\",\n     \"lastUpdateAt\": \"sunt commodo\",\n     \"networkInterface\": \"eth1.100\",\n     \"referenceId\": \"id est\",\n     \"serverType\": \"SEARCH\",\n     \"status\": \"changing\",\n     \"vmNetworkName\": \"occaecat irure deserunt\"\n    },\n    {\n     \"device\": \"eth1, eth2\",\n     \"inUse\": false,\n     \"ip\": \"adipisicing anim sint\",\n     \"lastUpdateAt\": \"exercitation ullamco aliqua ad velit\",\n     \"networkInterface\": \"eth1.100\",\n     \"referenceId\": \"nulla deserunt Duis ullamco\",\n     \"serverType\": \"V_PROXY\",\n     \"status\": \"init\",\n     \"vmNetworkName\": \"in id adipisicing\"\n    }\n   ],\n   \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n  }\n ],\n \"page\": {\n  \"number\": 86469439,\n  \"queryState\": \"velit nulla\",\n  \"size\": 34303094,\n  \"totalElements\": 20441203,\n  \"totalPages\": -43990877\n }\n}"
								}
							]
						},
						{
							"name": "Add a network.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"pariatur sed\",\n    \"vlanId\": 3046,\n    \"ips\": [\n        \"veniam dolore amet eiusmod\",\n        \"dolore non enim fugiat\"\n    ],\n    \"netmask\": \"255.255.255.0, /24\",\n    \"mtu\": 1500,\n    \"type\": \"any\",\n    \"gateway\": \"exercitation\",\n    \"id\": \"elit in nisi consectetur\",\n    \"routes\": [\n        {\n            \"destination\": \"10.0.10.0\",\n            \"gateway\": \"10.20.30.100\",\n            \"netmask\": \"255.255.255.0\",\n            \"type\": \"subnet\"\n        },\n        {\n            \"destination\": \"10.0.10.0\",\n            \"gateway\": \"10.20.30.100\",\n            \"netmask\": \"255.255.255.0\",\n            \"type\": \"subnet\"\n        }\n    ],\n    \"status\": \"init\",\n    \"usages\": [\n        {\n            \"device\": \"eth1, eth2\",\n            \"inUse\": false,\n            \"ip\": \"ut Ut\",\n            \"lastUpdateAt\": \"nostrud reprehenderit Duis \",\n            \"networkInterface\": \"eth1.100\",\n            \"referenceId\": \"amet cupidatat aliqua in\",\n            \"serverType\": \"V_PROXY\",\n            \"status\": \"init\",\n            \"vmNetworkName\": \"velit Lorem exercitation tempor\"\n        },\n        {\n            \"device\": \"eth1, eth2\",\n            \"inUse\": false,\n            \"ip\": \"aute officia amet\",\n            \"lastUpdateAt\": \"fugiat offi\",\n            \"networkInterface\": \"eth1.100\",\n            \"referenceId\": \"culpa occaecat nulla minim\",\n            \"serverType\": \"V_PROXY\",\n            \"status\": \"init\",\n            \"vmNetworkName\": \"commodo\"\n        }\n    ],\n    \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/networks?init=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"networks"
									],
									"query": [
										{
											"key": "init",
											"value": "true"
										}
									]
								},
								"description": "Creates a network. The operation occurs asynchronously. When successful, the request is accepted for processing.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "true"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"pariatur sed\",\n \"vlanId\": 3046,\n \"ips\": [\n  \"veniam dolore amet eiusmod\",\n  \"dolore non enim fugiat\"\n ],\n \"netmask\": \"255.255.255.0, /24\",\n \"mtu\": 1500,\n \"type\": \"any\",\n \"gateway\": \"exercitation\",\n \"id\": \"elit in nisi consectetur\",\n \"routes\": [\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  },\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  }\n ],\n \"status\": \"init\",\n \"usages\": [\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"ut Ut\",\n   \"lastUpdateAt\": \"nostrud reprehenderit Duis \",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"amet cupidatat aliqua in\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"init\",\n   \"vmNetworkName\": \"velit Lorem exercitation tempor\"\n  },\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"aute officia amet\",\n   \"lastUpdateAt\": \"fugiat offi\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"culpa occaecat nulla minim\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"init\",\n   \"vmNetworkName\": \"commodo\"\n  }\n ],\n \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
								},
								{
									"name": "Request contains conflict info with existing info.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "true"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Can't save networks",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "true"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "true"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Need login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "true"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Center not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "true"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get node by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Node ID."
												}
											]
										},
										"description": "Retrieves a node on the appliance with the specified ID. The node has information about the appliance status, subcomponents in the appliance, uptime, version, and other system details.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Cannot find a node with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Found and returned the node with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"voluptate\",\n \"status\": \"RESTORE_READY\",\n \"components\": [\n  {\n   \"name\": \"APP_AGENT\",\n   \"version\": \"culpa nostrud est\"\n  },\n  {\n   \"name\": \"APP_AGENT\",\n   \"version\": \"culpa qui dolor\"\n  }\n ],\n \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n \"lastReboot\": \"incididunt\",\n \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n \"lastUpdatedBy\": \"dolor nulla do ni\",\n \"powerProtectModel\": \"sint dolore sit\",\n \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n \"restrictions\": [\n  {\n   \"name\": \"noScheduledStorageAccess\",\n   \"value\": \"false\"\n  },\n  {\n   \"name\": \"noScheduledStorageAccess\",\n   \"value\": \"true\"\n  }\n ],\n \"statusDescription\": \"Excepteur sunt mollit\",\n \"systemId\": \"nulla\",\n \"uptimeInDays\": \"aliqua\",\n \"version\": \"occaecat tempor enim et\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Change the status of the appliance.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"voluptate\",\n    \"status\": \"RESTORE_READY\",\n    \"components\": [\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa nostrud est\"\n        },\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa qui dolor\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n    \"lastReboot\": \"incididunt\",\n    \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n    \"lastUpdatedBy\": \"dolor nulla do ni\",\n    \"powerProtectModel\": \"sint dolore sit\",\n    \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n    \"restrictions\": [\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"true\"\n        }\n    ],\n    \"statusDescription\": \"Excepteur sunt mollit\",\n    \"systemId\": \"nulla\",\n    \"uptimeInDays\": \"aliqua\",\n    \"version\": \"occaecat tempor enim et\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Node ID sent in request."
												}
											]
										},
										"description": "Updates the status of the appliance to any of the following states: MAINTENANCE, RESTORE, QUIESCE, OPERATIONAL.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The system state change request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"voluptate\",\n    \"status\": \"RESTORE_READY\",\n    \"components\": [\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa nostrud est\"\n        },\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa qui dolor\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n    \"lastReboot\": \"incididunt\",\n    \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n    \"lastUpdatedBy\": \"dolor nulla do ni\",\n    \"powerProtectModel\": \"sint dolore sit\",\n    \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n    \"restrictions\": [\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"true\"\n        }\n    ],\n    \"statusDescription\": \"Excepteur sunt mollit\",\n    \"systemId\": \"nulla\",\n    \"uptimeInDays\": \"aliqua\",\n    \"version\": \"occaecat tempor enim et\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"voluptate\",\n    \"status\": \"RESTORE_READY\",\n    \"components\": [\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa nostrud est\"\n        },\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa qui dolor\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n    \"lastReboot\": \"incididunt\",\n    \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n    \"lastUpdatedBy\": \"dolor nulla do ni\",\n    \"powerProtectModel\": \"sint dolore sit\",\n    \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n    \"restrictions\": [\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"true\"\n        }\n    ],\n    \"statusDescription\": \"Excepteur sunt mollit\",\n    \"systemId\": \"nulla\",\n    \"uptimeInDays\": \"aliqua\",\n    \"version\": \"occaecat tempor enim et\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Accepted and processing the node status request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"voluptate\",\n    \"status\": \"RESTORE_READY\",\n    \"components\": [\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa nostrud est\"\n        },\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa qui dolor\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n    \"lastReboot\": \"incididunt\",\n    \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n    \"lastUpdatedBy\": \"dolor nulla do ni\",\n    \"powerProtectModel\": \"sint dolore sit\",\n    \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n    \"restrictions\": [\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"true\"\n        }\n    ],\n    \"statusDescription\": \"Excepteur sunt mollit\",\n    \"systemId\": \"nulla\",\n    \"uptimeInDays\": \"aliqua\",\n    \"version\": \"occaecat tempor enim et\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a node with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"voluptate\",\n    \"status\": \"RESTORE_READY\",\n    \"components\": [\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa nostrud est\"\n        },\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa qui dolor\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n    \"lastReboot\": \"incididunt\",\n    \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n    \"lastUpdatedBy\": \"dolor nulla do ni\",\n    \"powerProtectModel\": \"sint dolore sit\",\n    \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n    \"restrictions\": [\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"true\"\n        }\n    ],\n    \"statusDescription\": \"Excepteur sunt mollit\",\n    \"systemId\": \"nulla\",\n    \"uptimeInDays\": \"aliqua\",\n    \"version\": \"occaecat tempor enim et\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The submitted node has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"voluptate\",\n    \"status\": \"RESTORE_READY\",\n    \"components\": [\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa nostrud est\"\n        },\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa qui dolor\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n    \"lastReboot\": \"incididunt\",\n    \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n    \"lastUpdatedBy\": \"dolor nulla do ni\",\n    \"powerProtectModel\": \"sint dolore sit\",\n    \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n    \"restrictions\": [\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"true\"\n        }\n    ],\n    \"statusDescription\": \"Excepteur sunt mollit\",\n    \"systemId\": \"nulla\",\n    \"uptimeInDays\": \"aliqua\",\n    \"version\": \"occaecat tempor enim et\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"voluptate\",\n    \"status\": \"RESTORE_READY\",\n    \"components\": [\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa nostrud est\"\n        },\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa qui dolor\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n    \"lastReboot\": \"incididunt\",\n    \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n    \"lastUpdatedBy\": \"dolor nulla do ni\",\n    \"powerProtectModel\": \"sint dolore sit\",\n    \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n    \"restrictions\": [\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"true\"\n        }\n    ],\n    \"statusDescription\": \"Excepteur sunt mollit\",\n    \"systemId\": \"nulla\",\n    \"uptimeInDays\": \"aliqua\",\n    \"version\": \"occaecat tempor enim et\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"voluptate\",\n    \"status\": \"RESTORE_READY\",\n    \"components\": [\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa nostrud est\"\n        },\n        {\n            \"name\": \"APP_AGENT\",\n            \"version\": \"culpa qui dolor\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n    \"lastReboot\": \"incididunt\",\n    \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n    \"lastUpdatedBy\": \"dolor nulla do ni\",\n    \"powerProtectModel\": \"sint dolore sit\",\n    \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n    \"restrictions\": [\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"noScheduledStorageAccess\",\n            \"value\": \"true\"\n        }\n    ],\n    \"statusDescription\": \"Excepteur sunt mollit\",\n    \"systemId\": \"nulla\",\n    \"uptimeInDays\": \"aliqua\",\n    \"version\": \"occaecat tempor enim et\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"voluptate\",\n \"status\": \"RESTORE_READY\",\n \"components\": [\n  {\n   \"name\": \"APP_AGENT\",\n   \"version\": \"culpa nostrud est\"\n  },\n  {\n   \"name\": \"APP_AGENT\",\n   \"version\": \"culpa qui dolor\"\n  }\n ],\n \"lastNodeStatusUpdated\": \"1948-11-09T07:24:16.436Z\",\n \"lastReboot\": \"incididunt\",\n \"lastUpdated\": \"1969-12-28T02:18:17.566Z\",\n \"lastUpdatedBy\": \"dolor nulla do ni\",\n \"powerProtectModel\": \"sint dolore sit\",\n \"powerProtectVersion\": \"officia aute culpa Excepteur\",\n \"restrictions\": [\n  {\n   \"name\": \"noScheduledStorageAccess\",\n   \"value\": \"false\"\n  },\n  {\n   \"name\": \"noScheduledStorageAccess\",\n   \"value\": \"true\"\n  }\n ],\n \"statusDescription\": \"Excepteur sunt mollit\",\n \"systemId\": \"nulla\",\n \"uptimeInDays\": \"aliqua\",\n \"version\": \"occaecat tempor enim et\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all nodes.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"nodes"
									]
								},
								"description": "Retrieves all nodes on the appliance. Each node has information about the appliance status, subcomponents in the appliance, uptime, version, and other system details.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Located and returned the available nodes successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"ea elit labore\",\n  \"status\": \"QUIESCE_READY\",\n  \"components\": [\n   {\n    \"name\": \"APP_AGENT\",\n    \"version\": \"minim sint non est ex\"\n   },\n   {\n    \"name\": \"VM_DIRECT\",\n    \"version\": \"elit ipsum aliqua\"\n   }\n  ],\n  \"lastNodeStatusUpdated\": \"1984-05-02T14:42:13.924Z\",\n  \"lastReboot\": \"aute tempor qui\",\n  \"lastUpdated\": \"1990-09-25T01:10:04.842Z\",\n  \"lastUpdatedBy\": \"reprehenderit\",\n  \"powerProtectModel\": \"fugiat veniam in sunt\",\n  \"powerProtectVersion\": \"sunt laboris cupidatat magna\",\n  \"restrictions\": [\n   {\n    \"name\": \"noScheduledStorageAccess\",\n    \"value\": \"true\"\n   },\n   {\n    \"name\": \"noScheduledStorageAccess\",\n    \"value\": \"false\"\n   }\n  ],\n  \"statusDescription\": \"proident occaecat elit dolore aute\",\n  \"systemId\": \"eiusmod proident\",\n  \"uptimeInDays\": \"sit ut\",\n  \"version\": \"sunt commodo laborum\"\n },\n {\n  \"id\": \"veniam ea Excepteur\",\n  \"status\": \"QUIESCE_INIT\",\n  \"components\": [\n   {\n    \"name\": \"VM_DIRECT\",\n    \"version\": \"labore ut cupidatat nostrud\"\n   },\n   {\n    \"name\": \"APP_AGENT\",\n    \"version\": \"nisi ad\"\n   }\n  ],\n  \"lastNodeStatusUpdated\": \"1953-10-27T06:43:14.051Z\",\n  \"lastReboot\": \"ex reprehenderit officia ut\",\n  \"lastUpdated\": \"2013-04-08T08:51:50.222Z\",\n  \"lastUpdatedBy\": \"ut eu\",\n  \"powerProtectModel\": \"eiusmod qui\",\n  \"powerProtectVersion\": \"do veniam ullamco minim\",\n  \"restrictions\": [\n   {\n    \"name\": \"noScheduledStorageAccess\",\n    \"value\": \"true\"\n   },\n   {\n    \"name\": \"noScheduledStorageAccess\",\n    \"value\": \"false\"\n   }\n  ],\n  \"statusDescription\": \"id enim elit culpa\",\n  \"systemId\": \"irure Ut in esse\",\n  \"uptimeInDays\": \"eu esse exercitation culpa consequat\",\n  \"version\": \"voluptate Excepte\"\n }\n]"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "protection-engines",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "proxies",
									"item": [
										{
											"name": "{proxy Id}",
											"item": [
												{
													"name": "Delete protection engine proxy.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies",
																":proxyId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the VPE protection engine."
																},
																{
																	"key": "proxyId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The proxy ID of the proxy to be removed."
																}
															]
														},
														"description": "Deletes the VPE proxy with a proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														}
													]
												},
												{
													"name": "Get protection engine proxy.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies",
																":proxyId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the VPE protection engine."
																},
																{
																	"key": "proxyId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The proxy ID."
																}
															]
														},
														"description": "Retrieves the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Successfully returned VPE proxy resource.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														}
													]
												},
												{
													"name": "Update protection engine proxy configuration.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies",
																":proxyId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the protection engine."
																},
																{
																	"key": "proxyId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The proxy ID of the proxy to be updated."
																}
															]
														},
														"description": "Update the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Successful operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
														}
													]
												},
												{
													"name": "Redeploy protection engine proxy.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies",
																":proxyId",
																"redeploy"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the protection engine."
																},
																{
																	"key": "proxyId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The proxy ID of the proxy to be redeployed."
																}
															]
														},
														"description": "Redeploys the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Successful operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get all protection engine proxies.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxies"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "pageSize",
															"value": "100",
															"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua",
															"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The ID of the VPE protection engine."
														}
													]
												},
												"description": "Retrieves a list of VPE protection engine proxies for the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successfully returned available proxies.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"Config\": {\n    \"AdvancedOptions\": {\n     \"CapacityPercentage\": -64385791,\n     \"Datastores\": [\n      \"ipsum id do quis\",\n      \"adipisicing eiusmod\"\n     ],\n     \"TransportSessions\": {\n      \"Mode\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"UseSsl\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"UserDefined\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    },\n    \"ApplicationData\": {},\n    \"AutoUpdateConfig\": false,\n    \"Credential\": {\n     \"ObjectId\": \"laborum cupidatat ullamco\",\n     \"Password\": \"ullamco eiusmod\",\n     \"Type\": \"ObjectId\",\n     \"UserName\": \"exercitation consectetur Duis elit\"\n    },\n    \"DeployProxy\": false,\n    \"Disabled\": true,\n    \"HealthCheckInterval\": -37265918,\n    \"HostName\": \"labore sit\",\n    \"InstanceUuid\": \"elit mollit culpa\",\n    \"MORef\": \"dolore deserunt minim\",\n    \"Operation\": \"setup_network\",\n    \"Port\": 16654387,\n    \"ProxyDeploymentConfig\": {\n     \"AdditionalVMNetworks\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"Dns\": \"ut incididunt in\",\n     \"Fqdn\": \"dolor eiusmod veniam proident occaecat\",\n     \"Gateway\": \"sunt mollit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"non velit do\",\n     \"IpAddress\": \"id in dolor exercitation\",\n     \"Location\": {\n      \"ClusterMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"DatastoreMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"FolderMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"HostMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"NetworkMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ResourcePoolMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"MacAddress\": \"qui sit veniam\",\n     \"MultiVlanEnabled\": true,\n     \"NTPServer\": \"laborum voluptate\",\n     \"NetMask\": \"incididunt est veniam\",\n     \"NetworkMoref\": \"in\",\n     \"OvaFile\": \"aute eiusmod\",\n     \"RootCredential\": {\n      \"ObjectId\": \"ipsum ad aliquip\",\n      \"Password\": \"mollit magna\",\n      \"Type\": \"ObjectId\",\n      \"UserName\": \"nisi aute reprehenderit\"\n     },\n     \"Timezone\": \"id Lorem\",\n     \"VMName\": \"ipsum eiusmod culpa eu anim\",\n     \"Vlans\": [\n      {\n       \"Gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"IpAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"VlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"Gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"IpAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"VlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    },\n    \"ProxyType\": \"Internal\",\n    \"SkipRegistration\": true,\n    \"SupportedProtectionTypes\": [\n     \"VM\",\n     \"VM\"\n    ],\n    \"UpdateCredentials\": true,\n    \"VimServerRef\": {\n     \"ObjectId\": \"do dolore qui veniam\",\n     \"Type\": \"Object\",\n     \"Vcenter\": {\n      \"HostName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"HypervisorMode\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TcpPort\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ThumbPrint\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"UserName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"UserPassword\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    }\n   },\n   \"Id\": \"minim in cillum\",\n   \"Status\": {\n    \"Aliases\": [\n     \"ut labore\",\n     \"dolore eu\"\n    ],\n    \"AllottedModes\": [\n     {\n      \"CapacityUnits\": -26815843,\n      \"ReservedBy\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TotalControlSessions\": -58150854,\n      \"TotalTransportSessions\": -73677677\n     },\n     {\n      \"CapacityUnits\": -83922075,\n      \"ReservedBy\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TotalControlSessions\": -30191326,\n      \"TotalTransportSessions\": 620640\n     }\n    ],\n    \"AllottedNasSessions\": [\n     {\n      \"CapacityUnits\": -85546676,\n      \"ReservedBy\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TotalControlSessions\": -98713612,\n      \"TotalTransportSessions\": 54124196\n     },\n     {\n      \"CapacityUnits\": -70642029,\n      \"ReservedBy\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TotalControlSessions\": 80626611,\n      \"TotalTransportSessions\": -56993731\n     }\n    ],\n    \"ConfigChange\": {\n     \"PropertyChanges\": [\n      {\n       \"Index\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"NewValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"OldValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Operation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"Index\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"NewValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"OldValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Operation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"UpdatedTime\": \"1965-05-04T03:42:54.959Z\"\n    },\n    \"DaemonStatus\": [\n     {\n      \"DaemonName\": \"laborum sit ut\",\n      \"Resources\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"Status\": \"ullamco laborum\"\n     },\n     {\n      \"DaemonName\": \"Excepteur irure elit\",\n      \"Resources\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"Status\": \"sed\"\n     }\n    ],\n    \"DatacenterMoref\": \"ad anim ut quis\",\n    \"Datastores\": [\n     \"nisi aute Duis ea\",\n     \"dolore fugiat nisi in\"\n    ],\n    \"DeployedTime\": \"occaecat ut\",\n    \"HostedComputeRes\": {\n     \"MOref\": \"elit\",\n     \"Type\": \"ex ut dolore dolor\"\n    },\n    \"LastCheckedTime\": \"Duis esse anim\",\n    \"LastOperation\": {\n     \"Detail\": \"ad ullamco\",\n     \"Operation\": \"disable_application\",\n     \"Status\": \"Running\"\n    },\n    \"ModesAvailable\": {\n     \"CapacityUnits\": 38178234,\n     \"Mode\": \"NbdOnly\",\n     \"UseSsl\": true\n    },\n    \"NasSessionsAvailable\": {\n     \"CapacityUnits\": -94061599\n    },\n    \"Networks\": [\n     {\n      \"Connected\": true,\n      \"DeviceLabel\": \"Duis labore\",\n      \"Dns\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"GatewayV4\": \"laboris incididunt in\",\n      \"GatewayV6\": \"ex nisi ipsum tempor\",\n      \"IpAddrV4\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"IpAddrV6\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"MAC\": \"elit in\",\n      \"VirtualDeviceId\": -6149012,\n      \"VirtualNetworkName\": \"esse dolore irure ipsum\"\n     },\n     {\n      \"Connected\": true,\n      \"DeviceLabel\": \"ipsum deserunt\",\n      \"Dns\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"GatewayV4\": \"esse dolore enim sint\",\n      \"GatewayV6\": \"ali\",\n      \"IpAddrV4\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"IpAddrV6\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"MAC\": \"id elit eiusmod in incididunt\",\n      \"VirtualDeviceId\": 59486446,\n      \"VirtualNetworkName\": \"in aliquip voluptate\"\n     }\n    ],\n    \"PowerState\": \"On\",\n    \"ProxyDeployed\": false,\n    \"ProxyRegistered\": false,\n    \"ProxyState\": \"MAINTENANCE\",\n    \"ProxyStatus\": {\n     \"Detail\": \"non\",\n     \"Status\": \"DeletePending\"\n    },\n    \"RegisteredTime\": \"ut veniam officia mol\",\n    \"Thumbprint\": \"nostrud enim Excep\",\n    \"Uuid\": \"pariatur velit\",\n    \"Version\": \"consequa\",\n    \"VlanStatus\": [\n     {\n      \"Detail\": \"ulla\",\n      \"IpAddress\": \"quis\",\n      \"Status\": \"FAILURE\",\n      \"VlanId\": 56401119\n     },\n     {\n      \"Detail\": \"incididunt nulla dolor in ullamco\",\n      \"IpAddress\": \"amet\",\n      \"Status\": \"FAILURE\",\n      \"VlanId\": 69536291\n     }\n    ]\n   }\n  },\n  {\n   \"Config\": {\n    \"AdvancedOptions\": {\n     \"CapacityPercentage\": -85611632,\n     \"Datastores\": [\n      \"proident labore\",\n      \"qui id labore pariatur\"\n     ],\n     \"TransportSessions\": {\n      \"Mode\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"UseSsl\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"UserDefined\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    },\n    \"ApplicationData\": {},\n    \"AutoUpdateConfig\": false,\n    \"Credential\": {\n     \"ObjectId\": \"occaecat irure sunt adipisicing ut\",\n     \"Password\": \"exercitation dolor in\",\n     \"Type\": \"Object\",\n     \"UserName\": \"deserunt in\"\n    },\n    \"DeployProxy\": false,\n    \"Disabled\": true,\n    \"HealthCheckInterval\": 442111,\n    \"HostName\": \"in cillum exercitation incididunt\",\n    \"InstanceUuid\": \"veniam nulla\",\n    \"MORef\": \"dolore quis deserunt esse\",\n    \"Operation\": \"version\",\n    \"Port\": 14992775,\n    \"ProxyDeploymentConfig\": {\n     \"AdditionalVMNetworks\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"Dns\": \"aliquip dolore sed voluptate enim\",\n     \"Fqdn\": \"culpa adipisicing\",\n     \"Gateway\": \"labore id amet magna\",\n     \"IPProtocol\": \"IPv6\",\n     \"InterfaceName\": \"reprehend\",\n     \"IpAddress\": \"cillum in\",\n     \"Location\": {\n      \"ClusterMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"DatastoreMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"FolderMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"HostMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"NetworkMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ResourcePoolMoref\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"MacAddress\": \"eiusmod id ex\",\n     \"MultiVlanEnabled\": true,\n     \"NTPServer\": \"in elit\",\n     \"NetMask\": \"culpa eu qui nisi\",\n     \"NetworkMoref\": \"Ut sed consequat ad consectetur\",\n     \"OvaFile\": \"in occaecat Excepteur id veniam\",\n     \"RootCredential\": {\n      \"ObjectId\": \"proident voluptate dolor dolor\",\n      \"Password\": \"sunt dolor\",\n      \"Type\": \"ObjectId\",\n      \"UserName\": \"culpa elit nostrud cupidatat\"\n     },\n     \"Timezone\": \"dolore qui nostru\",\n     \"VMName\": \"labore anim\",\n     \"Vlans\": [\n      {\n       \"Gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"IpAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"VlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"Gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"IpAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"VlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    },\n    \"ProxyType\": \"External\",\n    \"SkipRegistration\": false,\n    \"SupportedProtectionTypes\": [\n     \"VM\",\n     \"VM\"\n    ],\n    \"UpdateCredentials\": false,\n    \"VimServerRef\": {\n     \"ObjectId\": \"deserunt n\",\n     \"Type\": \"Object\",\n     \"Vcenter\": {\n      \"HostName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"HypervisorMode\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TcpPort\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ThumbPrint\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"UserName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"UserPassword\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    }\n   },\n   \"Id\": \"ea sunt voluptate cupidatat cillum\",\n   \"Status\": {\n    \"Aliases\": [\n     \"mollit\",\n     \"fugiat ut Duis ut Ut\"\n    ],\n    \"AllottedModes\": [\n     {\n      \"CapacityUnits\": -53225443,\n      \"ReservedBy\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TotalControlSessions\": -72759787,\n      \"TotalTransportSessions\": -45600158\n     },\n     {\n      \"CapacityUnits\": 20213437,\n      \"ReservedBy\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TotalControlSessions\": 11556992,\n      \"TotalTransportSessions\": 54450149\n     }\n    ],\n    \"AllottedNasSessions\": [\n     {\n      \"CapacityUnits\": -52298397,\n      \"ReservedBy\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TotalControlSessions\": -21226166,\n      \"TotalTransportSessions\": 51783104\n     },\n     {\n      \"CapacityUnits\": 90607950,\n      \"ReservedBy\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"TotalControlSessions\": -4748655,\n      \"TotalTransportSessions\": 87739696\n     }\n    ],\n    \"ConfigChange\": {\n     \"PropertyChanges\": [\n      {\n       \"Index\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"NewValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"OldValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Operation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"Index\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"NewValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"OldValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Operation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"Type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"UpdatedTime\": \"1951-09-03T03:12:49.280Z\"\n    },\n    \"DaemonStatus\": [\n     {\n      \"DaemonName\": \"incididunt irure ipsum in sed\",\n      \"Resources\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"Status\": \"Lorem sed aliquip irure\"\n     },\n     {\n      \"DaemonName\": \"pariatur ut in\",\n      \"Resources\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"Status\": \"elit enim minim officia\"\n     }\n    ],\n    \"DatacenterMoref\": \"nostrud nu\",\n    \"Datastores\": [\n     \"cupidatat ut Duis sunt\",\n     \"Lorem tempor ea ad\"\n    ],\n    \"DeployedTime\": \"adipisicing dolor\",\n    \"HostedComputeRes\": {\n     \"MOref\": \"aute \",\n     \"Type\": \"in\"\n    },\n    \"LastCheckedTime\": \"u\",\n    \"LastOperation\": {\n     \"Detail\": \"sit\",\n     \"Operation\": \"setup_network\",\n     \"Status\": \"Cancelling\"\n    },\n    \"ModesAvailable\": {\n     \"CapacityUnits\": -83346741,\n     \"Mode\": \"HotaddPreferred\",\n     \"UseSsl\": true\n    },\n    \"NasSessionsAvailable\": {\n     \"CapacityUnits\": -97520029\n    },\n    \"Networks\": [\n     {\n      \"Connected\": false,\n      \"DeviceLabel\": \"aliquip\",\n      \"Dns\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"GatewayV4\": \"elit sed\",\n      \"GatewayV6\": \"sunt est nisi\",\n      \"IpAddrV4\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"IpAddrV6\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"MAC\": \"\",\n      \"VirtualDeviceId\": 32727218,\n      \"VirtualNetworkName\": \"Duis\"\n     },\n     {\n      \"Connected\": false,\n      \"DeviceLabel\": \"D\",\n      \"Dns\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"GatewayV4\": \"nostrud\",\n      \"GatewayV6\": \"aliquip velit laboris pariatur\",\n      \"IpAddrV4\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"IpAddrV6\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"MAC\": \"dolore\",\n      \"VirtualDeviceId\": -24127279,\n      \"VirtualNetworkName\": \"consequat nostrud Ut ea\"\n     }\n    ],\n    \"PowerState\": \"Suspended\",\n    \"ProxyDeployed\": false,\n    \"ProxyRegistered\": true,\n    \"ProxyState\": \"READY\",\n    \"ProxyStatus\": {\n     \"Detail\": \"consequat irure dolor\",\n     \"Status\": \"Deleted\"\n    },\n    \"RegisteredTime\": \"voluptate\",\n    \"Thumbprint\": \"laborum in Excepteur in id\",\n    \"Uuid\": \"proident\",\n    \"Version\": \"veniam do\",\n    \"VlanStatus\": [\n     {\n      \"Detail\": \"sit eu nisi nulla\",\n      \"IpAddress\": \"deserunt Excepteur laboris sit\",\n      \"Status\": \"FAILURE\",\n      \"VlanId\": 88918866\n     },\n     {\n      \"Detail\": \"reprehenderit\",\n      \"IpAddress\": \"in pariatur nostrud fugiat\",\n      \"Status\": \"CONNECTED\",\n      \"VlanId\": -54789281\n     }\n    ]\n   }\n  }\n ],\n \"page\": {\n  \"number\": 59485919,\n  \"queryState\": \"cillum\",\n  \"size\": -52415146,\n  \"totalElements\": -30738457,\n  \"totalPages\": -83966012\n }\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										},
										{
											"name": "Add protection engine proxy.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxies"
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The ID of the VPE protection engine."
														}
													]
												},
												"description": "Adds a VPE proxy to the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The request was accepted for processing.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": -89522033,\n            \"Datastores\": [\n                \"laborum culpa ullamco dolore\",\n                \"et occaecat nulla\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UseSsl\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserDefined\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"ApplicationData\": {},\n        \"AutoUpdateConfig\": false,\n        \"Credential\": {\n            \"ObjectId\": \"ad irure cillum non dolor\",\n            \"Password\": \"adipisicing ipsum\",\n            \"Type\": \"ObjectId\",\n            \"UserName\": \"non reprehenderit sit\"\n        },\n        \"DeployProxy\": false,\n        \"Disabled\": false,\n        \"HealthCheckInterval\": -24933406,\n        \"HostName\": \"deserunt mollit Excepteur\",\n        \"InstanceUuid\": \"nisi laborum id\",\n        \"MORef\": \"nulla Ut\",\n        \"Operation\": \"version\",\n        \"Port\": 49232648,\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"Dns\": \"Duis in\",\n            \"Fqdn\": \"officia ut dolore\",\n            \"Gateway\": \"do ut minim ipsum\",\n            \"IPProtocol\": \"IPv4\",\n            \"InterfaceName\": \"sit\",\n            \"IpAddress\": \"exercitation\",\n            \"Location\": {\n                \"ClusterMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"DatastoreMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"FolderMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HostMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"NetworkMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ResourcePoolMoref\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"MacAddress\": \"ullamco in\",\n            \"MultiVlanEnabled\": false,\n            \"NTPServer\": \"in Ut sint dolore\",\n            \"NetMask\": \"labore laborum cillum consequat consectetu\",\n            \"NetworkMoref\": \"sit proident enim in\",\n            \"OvaFile\": \"ullamco nulla eu aliqua\",\n            \"RootCredential\": {\n                \"ObjectId\": \"voluptate sunt\",\n                \"Password\": \"fugiat\",\n                \"Type\": \"Object\",\n                \"UserName\": \"fugiat ullamco\"\n            },\n            \"Timezone\": \"dolore dolor tempor\",\n            \"VMName\": \"exercitatio\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Gateway\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"IpAddress\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Mtu\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Netmask\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Routes\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"VlanId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ProxyType\": \"Internal\",\n        \"SkipRegistration\": false,\n        \"SupportedProtectionTypes\": [\n            \"VM\",\n            \"VM\"\n        ],\n        \"UpdateCredentials\": true,\n        \"VimServerRef\": {\n            \"ObjectId\": \"et sint sed\",\n            \"Type\": \"Object\",\n            \"Vcenter\": {\n                \"HostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"HypervisorMode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TcpPort\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"ThumbPrint\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"UserPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"Id\": \"velit commodo\",\n    \"Status\": {\n        \"Aliases\": [\n            \"et\",\n            \"consectetur qui sed\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": 1098108,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -45461940,\n                \"TotalTransportSessions\": 4320785\n            },\n            {\n                \"CapacityUnits\": 27643754,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75368767,\n                \"TotalTransportSessions\": 43020870\n            }\n        ],\n        \"AllottedNasSessions\": [\n            {\n                \"CapacityUnits\": -1660130,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -75852346,\n                \"TotalTransportSessions\": 5762593\n            },\n            {\n                \"CapacityUnits\": 13456427,\n                \"ReservedBy\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"TotalControlSessions\": -69932240,\n                \"TotalTransportSessions\": 1001998\n            }\n        ],\n        \"ConfigChange\": {\n            \"PropertyChanges\": [\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"Index\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"NewValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"OldValue\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Operation\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"Type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n        },\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"mollit ea sint dolor sit\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"adipisicing deserunt fugiat non\"\n            },\n            {\n                \"DaemonName\": \"Duis fugiat\",\n                \"Resources\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"Status\": \"ullamco ut\"\n            }\n        ],\n        \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n        \"Datastores\": [\n            \"commodo aute\",\n            \"nostrud\"\n        ],\n        \"DeployedTime\": \"ex proident elit anim\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"pariatur proident magna\",\n            \"Type\": \"do ipsum\"\n        },\n        \"LastCheckedTime\": \"Lorem quis proident\",\n        \"LastOperation\": {\n            \"Detail\": \"Du\",\n            \"Operation\": \"setup_network\",\n            \"Status\": \"Unmounted\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": 41033937,\n            \"Mode\": \"NbdOnly\",\n            \"UseSsl\": false\n        },\n        \"NasSessionsAvailable\": {\n            \"CapacityUnits\": -51040473\n        },\n        \"Networks\": [\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"ad\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"ea sunt Ut\",\n                \"GatewayV6\": \"quis Excepteur\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"reprehenderit Dui\",\n                \"VirtualDeviceId\": 41755685,\n                \"VirtualNetworkName\": \"sunt sit sed ulla\"\n            },\n            {\n                \"Connected\": false,\n                \"DeviceLabel\": \"quis minim\",\n                \"Dns\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"GatewayV4\": \"qui reprehenderit ex nisi\",\n                \"GatewayV6\": \"amet labore qui\",\n                \"IpAddrV4\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"IpAddrV6\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"MAC\": \"amet ut qui sint\",\n                \"VirtualDeviceId\": 27591431,\n                \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n            }\n        ],\n        \"PowerState\": \"On\",\n        \"ProxyDeployed\": false,\n        \"ProxyRegistered\": false,\n        \"ProxyState\": \"MAINTENANCE\",\n        \"ProxyStatus\": {\n            \"Detail\": \"amet ullamco\",\n            \"Status\": \"Registering\"\n        },\n        \"RegisteredTime\": \"anim magna aliquip ut\",\n        \"Thumbprint\": \"ad consectetur\",\n        \"Uuid\": \"dolo\",\n        \"Version\": \"ut incididunt do dolore\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"nulla dolor\",\n                \"IpAddress\": \"Lorem\",\n                \"Status\": \"FAILURE\",\n                \"VlanId\": -496029\n            },\n            {\n                \"Detail\": \"consectetur esse qui\",\n                \"IpAddress\": \"deserunt Ut amet veniam id\",\n                \"Status\": \"CONNECTED\",\n                \"VlanId\": -76282514\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										}
									]
								},
								{
									"name": "proxy-bundles",
									"item": [
										{
											"name": "{session Id}",
											"item": [
												{
													"name": "Delete protection engine proxy bundle session.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles",
																":sessionId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the VPE protection engine."
																},
																{
																	"key": "sessionId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The log bundle session ID."
																}
															]
														},
														"description": "Deletes protection engine proxy bundle session.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														}
													]
												},
												{
													"name": "Get protection engine proxy bundle session.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles",
																":sessionId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the VPE protection engine."
																},
																{
																	"key": "sessionId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The protection engine proxy bundle session ID."
																}
															]
														},
														"description": "Retrieves the protection engine proxy bundle session.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Successfully returned VPE proxy resource.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": -89522033,\n   \"Datastores\": [\n    \"laborum culpa ullamco dolore\",\n    \"et occaecat nulla\"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UseSsl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserDefined\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": false,\n  \"Credential\": {\n   \"ObjectId\": \"ad irure cillum non dolor\",\n   \"Password\": \"adipisicing ipsum\",\n   \"Type\": \"ObjectId\",\n   \"UserName\": \"non reprehenderit sit\"\n  },\n  \"DeployProxy\": false,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": -24933406,\n  \"HostName\": \"deserunt mollit Excepteur\",\n  \"InstanceUuid\": \"nisi laborum id\",\n  \"MORef\": \"nulla Ut\",\n  \"Operation\": \"version\",\n  \"Port\": 49232648,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"Dns\": \"Duis in\",\n   \"Fqdn\": \"officia ut dolore\",\n   \"Gateway\": \"do ut minim ipsum\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"sit\",\n   \"IpAddress\": \"exercitation\",\n   \"Location\": {\n    \"ClusterMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"DatastoreMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"FolderMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HostMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"NetworkMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ResourcePoolMoref\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"MacAddress\": \"ullamco in\",\n   \"MultiVlanEnabled\": false,\n   \"NTPServer\": \"in Ut sint dolore\",\n   \"NetMask\": \"labore laborum cillum consequat consectetu\",\n   \"NetworkMoref\": \"sit proident enim in\",\n   \"OvaFile\": \"ullamco nulla eu aliqua\",\n   \"RootCredential\": {\n    \"ObjectId\": \"voluptate sunt\",\n    \"Password\": \"fugiat\",\n    \"Type\": \"Object\",\n    \"UserName\": \"fugiat ullamco\"\n   },\n   \"Timezone\": \"dolore dolor tempor\",\n   \"VMName\": \"exercitatio\",\n   \"Vlans\": [\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Gateway\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"IpAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Mtu\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Netmask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Routes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"VlanId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ProxyType\": \"Internal\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"VM\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"et sint sed\",\n   \"Type\": \"Object\",\n   \"Vcenter\": {\n    \"HostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"HypervisorMode\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TcpPort\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ThumbPrint\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"UserPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n },\n \"Id\": \"velit commodo\",\n \"Status\": {\n  \"Aliases\": [\n   \"et\",\n   \"consectetur qui sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": 1098108,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -45461940,\n    \"TotalTransportSessions\": 4320785\n   },\n   {\n    \"CapacityUnits\": 27643754,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75368767,\n    \"TotalTransportSessions\": 43020870\n   }\n  ],\n  \"AllottedNasSessions\": [\n   {\n    \"CapacityUnits\": -1660130,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -75852346,\n    \"TotalTransportSessions\": 5762593\n   },\n   {\n    \"CapacityUnits\": 13456427,\n    \"ReservedBy\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"TotalControlSessions\": -69932240,\n    \"TotalTransportSessions\": 1001998\n   }\n  ],\n  \"ConfigChange\": {\n   \"PropertyChanges\": [\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"Index\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"NewValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"OldValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Operation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"Type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"UpdatedTime\": \"1983-02-25T00:24:21.709Z\"\n  },\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"mollit ea sint dolor sit\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"adipisicing deserunt fugiat non\"\n   },\n   {\n    \"DaemonName\": \"Duis fugiat\",\n    \"Resources\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"Status\": \"ullamco ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"exercitation aute mollit cupidatat\",\n  \"Datastores\": [\n   \"commodo aute\",\n   \"nostrud\"\n  ],\n  \"DeployedTime\": \"ex proident elit anim\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"pariatur proident magna\",\n   \"Type\": \"do ipsum\"\n  },\n  \"LastCheckedTime\": \"Lorem quis proident\",\n  \"LastOperation\": {\n   \"Detail\": \"Du\",\n   \"Operation\": \"setup_network\",\n   \"Status\": \"Unmounted\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": 41033937,\n   \"Mode\": \"NbdOnly\",\n   \"UseSsl\": false\n  },\n  \"NasSessionsAvailable\": {\n   \"CapacityUnits\": -51040473\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ad\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"ea sunt Ut\",\n    \"GatewayV6\": \"quis Excepteur\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"reprehenderit Dui\",\n    \"VirtualDeviceId\": 41755685,\n    \"VirtualNetworkName\": \"sunt sit sed ulla\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"quis minim\",\n    \"Dns\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GatewayV4\": \"qui reprehenderit ex nisi\",\n    \"GatewayV6\": \"amet labore qui\",\n    \"IpAddrV4\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"IpAddrV6\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"MAC\": \"amet ut qui sint\",\n    \"VirtualDeviceId\": 27591431,\n    \"VirtualNetworkName\": \"nisi eiusmod fugiat\"\n   }\n  ],\n  \"PowerState\": \"On\",\n  \"ProxyDeployed\": false,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"MAINTENANCE\",\n  \"ProxyStatus\": {\n   \"Detail\": \"amet ullamco\",\n   \"Status\": \"Registering\"\n  },\n  \"RegisteredTime\": \"anim magna aliquip ut\",\n  \"Thumbprint\": \"ad consectetur\",\n  \"Uuid\": \"dolo\",\n  \"Version\": \"ut incididunt do dolore\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"nulla dolor\",\n    \"IpAddress\": \"Lorem\",\n    \"Status\": \"FAILURE\",\n    \"VlanId\": -496029\n   },\n   {\n    \"Detail\": \"consectetur esse qui\",\n    \"IpAddress\": \"deserunt Ut amet veniam id\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -76282514\n   }\n  ]\n }\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get all protection engine proxy log bundles.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-bundles"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "pageSize",
															"value": "100",
															"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua",
															"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The ID of the VPE protection engine."
														}
													]
												},
												"description": "Retrieves all protection engine proxy log bundles.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successfully returned available proxy bundle sessions.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"Id\": \"ipsum irure enim aute\",\n   \"Config\": {\n    \"AcceptedLanguage\": \"en\",\n    \"ClientSessionData\": {},\n    \"IdleTimeout\": -56341453,\n    \"LogBundleRange\": {\n     \"EndDate\": \"eu pariatur\",\n     \"StartDate\": \"mollit ut veniam cillum\"\n    },\n    \"LogDetail\": \"dolore aliquip irure\",\n    \"LogLevel\": \"anim elit\",\n    \"LogTag\": \"minim nisi voluptate\",\n    \"NoCancelOnTimeout\": true,\n    \"ProxySpec\": [\n     {\n      \"LogBundlePath\": \"officia dolore\",\n      \"ProxySessionId\": \"aliquip tempor in\"\n     },\n     {\n      \"LogBundlePath\": \"nulla laboris cupidatat reprehenderit\",\n      \"ProxySessionId\": \"ut\"\n     }\n    ],\n    \"SessionId\": \"nulla\"\n   },\n   \"Status\": {\n    \"ApplicationData\": \"veniam\",\n    \"ApplicationVersion\": \"ex laborum commodo\",\n    \"Description\": \"sint\",\n    \"EndTime\": \"in consectetur Ut\",\n    \"Error\": {\n     \"Classifications\": [\n      \"veniam in\",\n      \"et exercit\"\n     ],\n     \"Code\": -83473491,\n     \"Remedy\": [\n      \"ullamco do sed ut\",\n      \"sit aute enim aliqua esse\"\n     ],\n     \"Retryable\": false,\n     \"Text\": \"id deserunt\"\n    },\n    \"Progress\": -25885817,\n    \"ProxyLogBundleStatus\": [\n     {\n      \"Error\": {\n       \"Classifications\": [\n        \"consectetur exercitation minim\",\n        \"pariatur et in\"\n       ],\n       \"Code\": 95214935,\n       \"Remedy\": [\n        \"cupid\",\n        \"consectetur dolor\"\n       ],\n       \"Retryable\": false,\n       \"Text\": \"consectetur commodo\"\n      },\n      \"FilesCollected\": 10497810,\n      \"LogBundle\": \"cillum consequat eiusmod\",\n      \"ProxySessionId\": \"quis nulla cillum consectetur\",\n      \"State\": \"Success\"\n     },\n     {\n      \"Error\": {\n       \"Classifications\": [\n        \"sunt deserunt\",\n        \"eiusmod velit\"\n       ],\n       \"Code\": 18840389,\n       \"Remedy\": [\n        \"occaecat fugiat pariatur\",\n        \"Excepteur eu do cillum\"\n       ],\n       \"Retryable\": true,\n       \"Text\": \"sed id nostrud dolor\"\n      },\n      \"FilesCollected\": -67724841,\n      \"LogBundle\": \"Lo\",\n      \"ProxySessionId\": \"Ut ex nulla aliqua\",\n      \"State\": \"Success\"\n     }\n    ],\n    \"StartTime\": \"veniam sint irure laborum ut\",\n    \"State\": \"Mounted\",\n    \"Warnings\": [\n     \"exercitation nisi proident ut\",\n     \"nulla proident\"\n    ]\n   }\n  },\n  {\n   \"Id\": \"sed mollit\",\n   \"Config\": {\n    \"AcceptedLanguage\": \"en\",\n    \"ClientSessionData\": {},\n    \"IdleTimeout\": 78494144,\n    \"LogBundleRange\": {\n     \"EndDate\": \"ut nostrud mollit deserunt\",\n     \"StartDate\": \"magna\"\n    },\n    \"LogDetail\": \"dolore ea\",\n    \"LogLevel\": \"minim\",\n    \"LogTag\": \"proident \",\n    \"NoCancelOnTimeout\": false,\n    \"ProxySpec\": [\n     {\n      \"LogBundlePath\": \"Lorem\",\n      \"ProxySessionId\": \"velit esse deserunt dolor\"\n     },\n     {\n      \"LogBundlePath\": \"ad non\",\n      \"ProxySessionId\": \"elit cillum sed\"\n     }\n    ],\n    \"SessionId\": \"eiusmod occaecat\"\n   },\n   \"Status\": {\n    \"ApplicationData\": \"aute ad deserunt velit\",\n    \"ApplicationVersion\": \"adipisicing commodo\",\n    \"Description\": \"pariatur\",\n    \"EndTime\": \"incididunt voluptate nulla\",\n    \"Error\": {\n     \"Classifications\": [\n      \"laboris proident id ut\",\n      \"minim\"\n     ],\n     \"Code\": 48920316,\n     \"Remedy\": [\n      \"non\",\n      \"dolore exercitation sint officia\"\n     ],\n     \"Retryable\": false,\n     \"Text\": \"aliqua quis magna elit ea\"\n    },\n    \"Progress\": -1769471,\n    \"ProxyLogBundleStatus\": [\n     {\n      \"Error\": {\n       \"Classifications\": [\n        \"ea sit mollit qui\",\n        \"in proident dolor occaecat\"\n       ],\n       \"Code\": 2679947,\n       \"Remedy\": [\n        \"sit aute velit do\",\n        \"eu in elit labore\"\n       ],\n       \"Retryable\": true,\n       \"Text\": \"nostrud nisi\"\n      },\n      \"FilesCollected\": -42078566,\n      \"LogBundle\": \"est adipisicing consequat consectetur\",\n      \"ProxySessionId\": \"magna Lorem Exc\",\n      \"State\": \"Pending\"\n     },\n     {\n      \"Error\": {\n       \"Classifications\": [\n        \"et fugiat\",\n        \"ut id in Ut\"\n       ],\n       \"Code\": 54126306,\n       \"Remedy\": [\n        \"con\",\n        \"ad id\"\n       ],\n       \"Retryable\": false,\n       \"Text\": \"cupidatat anim ullamco irure Lorem\"\n      },\n      \"FilesCollected\": -87240281,\n      \"LogBundle\": \"dolore do \",\n      \"ProxySessionId\": \"sunt in in\",\n      \"State\": \"Stopped\"\n     }\n    ],\n    \"StartTime\": \"dolor ex nostrud in\",\n    \"State\": \"Stopping\",\n    \"Warnings\": [\n     \"nisi officia nulla laboris\",\n     \"Lorem in anim minim\"\n    ]\n   }\n  }\n ],\n \"page\": {\n  \"number\": -68264692,\n  \"queryState\": \"Ut \",\n  \"size\": -46584314,\n  \"totalElements\": 44031843,\n  \"totalPages\": 91128692\n }\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										},
										{
											"name": "Collect protection engine proxy bundles.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"IdleTimeout\": 97696036,\n    \"LogBundleRange\": {\n        \"EndDate\": \"anim ad in deserunt\",\n        \"StartDate\": \"ex dolore sed do\"\n    },\n    \"LogDirectory\": \"labore Excepteur\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-bundles"
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The ID of the VPE protection engine."
														}
													]
												},
												"description": "Collects protection engine proxy bundles.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The request was accepted for processing.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": 97696036,\n    \"LogBundleRange\": {\n        \"EndDate\": \"anim ad in deserunt\",\n        \"StartDate\": \"ex dolore sed do\"\n    },\n    \"LogDirectory\": \"labore Excepteur\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"Id\": \"aliqua incididunt\",\n \"Config\": {\n  \"AcceptedLanguage\": \"en\",\n  \"ClientSessionData\": {},\n  \"IdleTimeout\": -21630231,\n  \"LogBundleRange\": {\n   \"EndDate\": \"quis elit\",\n   \"StartDate\": \"reprehenderit do et ut\"\n  },\n  \"LogDetail\": \"minim sed quis\",\n  \"LogLevel\": \"enim eu aliqua tempor\",\n  \"LogTag\": \"ut ullamco non aliquip\",\n  \"NoCancelOnTimeout\": true,\n  \"ProxySpec\": [\n   {\n    \"LogBundlePath\": \"Lorem\",\n    \"ProxySessionId\": \"Duis mollit\"\n   },\n   {\n    \"LogBundlePath\": \"aliqua Duis consectetur ad reprehenderit\",\n    \"ProxySessionId\": \"anim non deserunt quis\"\n   }\n  ],\n  \"SessionId\": \"sit id dolore\"\n },\n \"Status\": {\n  \"ApplicationData\": \"sunt ullamco\",\n  \"ApplicationVersion\": \"Excepteur exercitation amet in elit\",\n  \"Description\": \"aliqua reprehenderit irure\",\n  \"EndTime\": \"ea qui ex\",\n  \"Error\": {\n   \"Classifications\": [\n    \"do veniam ut in\",\n    \"labore voluptate\"\n   ],\n   \"Code\": 82179441,\n   \"Remedy\": [\n    \"voluptate dolor\",\n    \"veniam exercitation et quis proident\"\n   ],\n   \"Retryable\": true,\n   \"Text\": \"mollit cupidatat ea ut\"\n  },\n  \"Progress\": 638919,\n  \"ProxyLogBundleStatus\": [\n   {\n    \"Error\": {\n     \"Classifications\": [\n      \"proident deserunt nisi\",\n      \"sint quis magna ut\"\n     ],\n     \"Code\": 61558394,\n     \"Remedy\": [\n      \"reprehenderit fugiat officia esse ut\",\n      \"nulla\"\n     ],\n     \"Retryable\": false,\n     \"Text\": \"sed dolor laborum \"\n    },\n    \"FilesCollected\": -58243024,\n    \"LogBundle\": \"sint Duis dolor nostrud\",\n    \"ProxySessionId\": \"sunt occaecat officia\",\n    \"State\": \"Stopped\"\n   },\n   {\n    \"Error\": {\n     \"Classifications\": [\n      \"commodo\",\n      \"ut labore\"\n     ],\n     \"Code\": -94323252,\n     \"Remedy\": [\n      \"incididunt\",\n      \"in reprehenderit veniam\"\n     ],\n     \"Retryable\": true,\n     \"Text\": \"veniam eu\"\n    },\n    \"FilesCollected\": 13584331,\n    \"LogBundle\": \"ea pariatur mollit ullamco\",\n    \"ProxySessionId\": \"in irure\",\n    \"State\": \"Stopping\"\n   }\n  ],\n  \"StartTime\": \"incididunt veniam dolore commodo\",\n  \"State\": \"Cancelled\",\n  \"Warnings\": [\n   \"laboris in exercitation\",\n   \"et laborum sint do\"\n  ]\n }\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": 97696036,\n    \"LogBundleRange\": {\n        \"EndDate\": \"anim ad in deserunt\",\n        \"StartDate\": \"ex dolore sed do\"\n    },\n    \"LogDirectory\": \"labore Excepteur\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": 97696036,\n    \"LogBundleRange\": {\n        \"EndDate\": \"anim ad in deserunt\",\n        \"StartDate\": \"ex dolore sed do\"\n    },\n    \"LogDirectory\": \"labore Excepteur\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": 97696036,\n    \"LogBundleRange\": {\n        \"EndDate\": \"anim ad in deserunt\",\n        \"StartDate\": \"ex dolore sed do\"\n    },\n    \"LogDirectory\": \"labore Excepteur\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"Id\": \"aliqua incididunt\",\n \"Config\": {\n  \"AcceptedLanguage\": \"en\",\n  \"ClientSessionData\": {},\n  \"IdleTimeout\": -21630231,\n  \"LogBundleRange\": {\n   \"EndDate\": \"quis elit\",\n   \"StartDate\": \"reprehenderit do et ut\"\n  },\n  \"LogDetail\": \"minim sed quis\",\n  \"LogLevel\": \"enim eu aliqua tempor\",\n  \"LogTag\": \"ut ullamco non aliquip\",\n  \"NoCancelOnTimeout\": true,\n  \"ProxySpec\": [\n   {\n    \"LogBundlePath\": \"Lorem\",\n    \"ProxySessionId\": \"Duis mollit\"\n   },\n   {\n    \"LogBundlePath\": \"aliqua Duis consectetur ad reprehenderit\",\n    \"ProxySessionId\": \"anim non deserunt quis\"\n   }\n  ],\n  \"SessionId\": \"sit id dolore\"\n },\n \"Status\": {\n  \"ApplicationData\": \"sunt ullamco\",\n  \"ApplicationVersion\": \"Excepteur exercitation amet in elit\",\n  \"Description\": \"aliqua reprehenderit irure\",\n  \"EndTime\": \"ea qui ex\",\n  \"Error\": {\n   \"Classifications\": [\n    \"do veniam ut in\",\n    \"labore voluptate\"\n   ],\n   \"Code\": 82179441,\n   \"Remedy\": [\n    \"voluptate dolor\",\n    \"veniam exercitation et quis proident\"\n   ],\n   \"Retryable\": true,\n   \"Text\": \"mollit cupidatat ea ut\"\n  },\n  \"Progress\": 638919,\n  \"ProxyLogBundleStatus\": [\n   {\n    \"Error\": {\n     \"Classifications\": [\n      \"proident deserunt nisi\",\n      \"sint quis magna ut\"\n     ],\n     \"Code\": 61558394,\n     \"Remedy\": [\n      \"reprehenderit fugiat officia esse ut\",\n      \"nulla\"\n     ],\n     \"Retryable\": false,\n     \"Text\": \"sed dolor laborum \"\n    },\n    \"FilesCollected\": -58243024,\n    \"LogBundle\": \"sint Duis dolor nostrud\",\n    \"ProxySessionId\": \"sunt occaecat officia\",\n    \"State\": \"Stopped\"\n   },\n   {\n    \"Error\": {\n     \"Classifications\": [\n      \"commodo\",\n      \"ut labore\"\n     ],\n     \"Code\": -94323252,\n     \"Remedy\": [\n      \"incididunt\",\n      \"in reprehenderit veniam\"\n     ],\n     \"Retryable\": true,\n     \"Text\": \"veniam eu\"\n    },\n    \"FilesCollected\": 13584331,\n    \"LogBundle\": \"ea pariatur mollit ullamco\",\n    \"ProxySessionId\": \"in irure\",\n    \"State\": \"Stopping\"\n   }\n  ],\n  \"StartTime\": \"incididunt veniam dolore commodo\",\n  \"State\": \"Cancelled\",\n  \"Warnings\": [\n   \"laboris in exercitation\",\n   \"et laborum sint do\"\n  ]\n }\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": 97696036,\n    \"LogBundleRange\": {\n        \"EndDate\": \"anim ad in deserunt\",\n        \"StartDate\": \"ex dolore sed do\"\n    },\n    \"LogDirectory\": \"labore Excepteur\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": 97696036,\n    \"LogBundleRange\": {\n        \"EndDate\": \"anim ad in deserunt\",\n        \"StartDate\": \"ex dolore sed do\"\n    },\n    \"LogDirectory\": \"labore Excepteur\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										}
									]
								},
								{
									"name": "Unregister protection engine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the protection engine to be deleted."
												}
											]
										},
										"description": "Unregisters the protection engine, specified by its ID, from PowerProtect Data Manager.  A prerequisite is that the protection engine with the specified ID is already registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully deleted the protection engine.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get protection engine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the protection engine to be retrieved."
												}
											]
										},
										"description": "Retrieves the registered protection engine with the specified ID.  A prerequisite is that the protection engine with the specified ID is already registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the protection engine.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"eiusmod ex adipisicing tempor ea\",\n \"type\": \"VPE\",\n \"ipAddress\": \"proident Lorem magna sit\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"sed ipsum nostrud\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"noOfProtectedVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalProtectedSizeInBytes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"totalDisabledProxies\": 32435391,\n   \"totalFailedProxies\": -94004334,\n   \"totalReadyProxies\": 48713077,\n   \"vcsStatuses\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"non occaecat eu esse\",\n   \"name\": \"do qui adipisicing cup\"\n  },\n  \"storageSystem\": {\n   \"id\": \"cillum ea f\",\n   \"location\": \"exercitation dolor tempor\",\n   \"name\": \"nisi veniam ut quis\"\n  }\n },\n \"id\": \"tempor ea fugiat sed dolor\",\n \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The protection engine ID does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update protection engine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the protection engine to be updated."
												}
											]
										},
										"description": "Updates the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"eiusmod ex adipisicing tempor ea\",\n \"type\": \"VPE\",\n \"ipAddress\": \"proident Lorem magna sit\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"sed ipsum nostrud\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"noOfProtectedVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalProtectedSizeInBytes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"totalDisabledProxies\": 32435391,\n   \"totalFailedProxies\": -94004334,\n   \"totalReadyProxies\": 48713077,\n   \"vcsStatuses\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"non occaecat eu esse\",\n   \"name\": \"do qui adipisicing cup\"\n  },\n  \"storageSystem\": {\n   \"id\": \"cillum ea f\",\n   \"location\": \"exercitation dolor tempor\",\n   \"name\": \"nisi veniam ut quis\"\n  }\n },\n \"id\": \"tempor ea fugiat sed dolor\",\n \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation as it is not implemented.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"eiusmod ex adipisicing tempor ea\",\n \"type\": \"VPE\",\n \"ipAddress\": \"proident Lorem magna sit\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"sed ipsum nostrud\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"noOfProtectedVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalProtectedSizeInBytes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"totalDisabledProxies\": 32435391,\n   \"totalFailedProxies\": -94004334,\n   \"totalReadyProxies\": 48713077,\n   \"vcsStatuses\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"non occaecat eu esse\",\n   \"name\": \"do qui adipisicing cup\"\n  },\n  \"storageSystem\": {\n   \"id\": \"cillum ea f\",\n   \"location\": \"exercitation dolor tempor\",\n   \"name\": \"nisi veniam ut quis\"\n  }\n },\n \"id\": \"tempor ea fugiat sed dolor\",\n \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Manage protection engine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"engineId\": \"quis non\",\n    \"engineType\": \"VPE\",\n    \"operation\": \"START_PROXIES\",\n    \"jobId\": \"exercitation officia Excepteur minim\",\n    \"options\": {\n        \"minimumProxyVersion\": \"consequat\",\n        \"quiesceWaitTime\": -14274619\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id",
												"management"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the protection engine to be managed."
												}
											]
										},
										"description": "Performs the specified operation (ProtectionManagementResource.operation) on the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"quis non\",\n    \"engineType\": \"VPE\",\n    \"operation\": \"START_PROXIES\",\n    \"jobId\": \"exercitation officia Excepteur minim\",\n    \"options\": {\n        \"minimumProxyVersion\": \"consequat\",\n        \"quiesceWaitTime\": -14274619\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"quis non\",\n    \"engineType\": \"VPE\",\n    \"operation\": \"START_PROXIES\",\n    \"jobId\": \"exercitation officia Excepteur minim\",\n    \"options\": {\n        \"minimumProxyVersion\": \"consequat\",\n        \"quiesceWaitTime\": -14274619\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"quis non\",\n    \"engineType\": \"VPE\",\n    \"operation\": \"START_PROXIES\",\n    \"jobId\": \"exercitation officia Excepteur minim\",\n    \"options\": {\n        \"minimumProxyVersion\": \"consequat\",\n        \"quiesceWaitTime\": -14274619\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"engineId\": \"quis non\",\n \"engineType\": \"VPE\",\n \"operation\": \"START_PROXIES\",\n \"jobId\": \"exercitation officia Excepteur minim\",\n \"options\": {\n  \"minimumProxyVersion\": \"consequat\",\n  \"quiesceWaitTime\": -14274619\n }\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"quis non\",\n    \"engineType\": \"VPE\",\n    \"operation\": \"START_PROXIES\",\n    \"jobId\": \"exercitation officia Excepteur minim\",\n    \"options\": {\n        \"minimumProxyVersion\": \"consequat\",\n        \"quiesceWaitTime\": -14274619\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"quis non\",\n    \"engineType\": \"VPE\",\n    \"operation\": \"START_PROXIES\",\n    \"jobId\": \"exercitation officia Excepteur minim\",\n    \"options\": {\n        \"minimumProxyVersion\": \"consequat\",\n        \"quiesceWaitTime\": -14274619\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"engineId\": \"quis non\",\n \"engineType\": \"VPE\",\n \"operation\": \"START_PROXIES\",\n \"jobId\": \"exercitation officia Excepteur minim\",\n \"options\": {\n  \"minimumProxyVersion\": \"consequat\",\n  \"quiesceWaitTime\": -14274619\n }\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"quis non\",\n    \"engineType\": \"VPE\",\n    \"operation\": \"START_PROXIES\",\n    \"jobId\": \"exercitation officia Excepteur minim\",\n    \"options\": {\n        \"minimumProxyVersion\": \"consequat\",\n        \"quiesceWaitTime\": -14274619\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"quis non\",\n    \"engineType\": \"VPE\",\n    \"operation\": \"START_PROXIES\",\n    \"jobId\": \"exercitation officia Excepteur minim\",\n    \"options\": {\n        \"minimumProxyVersion\": \"consequat\",\n        \"quiesceWaitTime\": -14274619\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get all protection engine proxy images.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id",
												"proxy-images"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the VPE protection engine."
												}
											]
										},
										"description": "Retrieves all protection engine proxy images.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned available proxy OVA files.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"Agents\": [\n   {\n    \"Agent\": \"est\",\n    \"AgentName\": \"qui\",\n    \"OsBits\": -33973460,\n    \"OsType\": \"reprehenderit ut\",\n    \"Version\": \"Ut veniam\"\n   },\n   {\n    \"Agent\": \"laborum ullamco Excepteur amet\",\n    \"AgentName\": \"et minim\",\n    \"OsBits\": 37813242,\n    \"OsType\": \"sint esse \",\n    \"Version\": \"Lorem reprehenderit\"\n   }\n  ],\n  \"LastModified\": \"est Duis ex in cillum\",\n  \"Name\": \"est dolore ullamco dolore\",\n  \"Path\": \"veniam id pariatur\",\n  \"Size\": -83646136,\n  \"Version\": \"adipisicing amet\"\n },\n {\n  \"Agents\": [\n   {\n    \"Agent\": \"velit minim\",\n    \"AgentName\": \"non tempor elit\",\n    \"OsBits\": 40864230,\n    \"OsType\": \"cillum non\",\n    \"Version\": \"cillum reprehenderit dolor aliqua in\"\n   },\n   {\n    \"Agent\": \"culpa ma\",\n    \"AgentName\": \"amet ullamco dolor\",\n    \"OsBits\": 63315776,\n    \"OsType\": \"ut id dolore ullamco\",\n    \"Version\": \"minim ut Duis\"\n   }\n  ],\n  \"LastModified\": \"fugiat irure aute consectetur\",\n  \"Name\": \"dolor tempor magna\",\n  \"Path\": \"mo\",\n  \"Size\": -8572447,\n  \"Version\": \"reprehenderit fugiat et mag\"\n }\n]"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get protection engine supported upgrade type.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n    \"upgradeType\": \"NDU\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id",
												"supported-upgrade"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the protection engine."
												}
											]
										},
										"description": "Retrieves protection engine supported upgrade type.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n    \"upgradeType\": \"NDU\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request completed successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n    \"upgradeType\": \"NDU\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n \"upgradeType\": \"NDU\"\n}"
										},
										{
											"name": "The request could not be completed due to a conflict with the current state of the target resource.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n    \"upgradeType\": \"NDU\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n    \"upgradeType\": \"NDU\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n    \"upgradeType\": \"NDU\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n    \"upgradeType\": \"NDU\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"eiusmod magna enim anim ea\",\n    \"upgradeType\": \"NDU\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all protection engines.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-engines"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all registered protection engines supported by PowerProtect Data Manager.  This list is expected to grow, and for the current release (and upcoming releases), the supported protection engine is VPE.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available protection engine.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"occaecat cupidatat velit consequat\",\n   \"type\": \"VPE\",\n   \"ipAddress\": \"in laborum velit dolor enim\",\n   \"status\": \"REGISTERING, OPERATIONAL\",\n   \"credentials\": {\n    \"id\": \"adipisicing labore qui\"\n   },\n   \"detail\": {\n    \"vpe\": {\n     \"protectionSummary\": {\n      \"maxNoOfProtectableVms\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"noOfProtectedVms\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalProtectedSizeInBytes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"totalDisabledProxies\": 88153430,\n     \"totalFailedProxies\": 55432975,\n     \"totalReadyProxies\": 40178299,\n     \"vcsStatuses\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   },\n   \"_embedded\": {\n    \"dataDomainMtree\": {\n     \"id\": \"ullamco\",\n     \"name\": \"eiusmod\"\n    },\n    \"storageSystem\": {\n     \"id\": \"in esse sint\",\n     \"location\": \"anim sint dolore minim\",\n     \"name\": \"sint\"\n    }\n   },\n   \"id\": \"Ut sint qui consectetur\",\n   \"registeredAt\": \"1991-09-14T16:33:17.450Z\"\n  },\n  {\n   \"name\": \"anim\",\n   \"type\": \"VPE\",\n   \"ipAddress\": \"ex sint\",\n   \"status\": \"REGISTERING, OPERATIONAL\",\n   \"credentials\": {\n    \"id\": \"Excepteur\"\n   },\n   \"detail\": {\n    \"vpe\": {\n     \"protectionSummary\": {\n      \"maxNoOfProtectableVms\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"noOfProtectedVms\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalProtectedSizeInBytes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"totalDisabledProxies\": -68055460,\n     \"totalFailedProxies\": -64822062,\n     \"totalReadyProxies\": 48890190,\n     \"vcsStatuses\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   },\n   \"_embedded\": {\n    \"dataDomainMtree\": {\n     \"id\": \"irure aliqua\",\n     \"name\": \"do ullamco et\"\n    },\n    \"storageSystem\": {\n     \"id\": \"incid\",\n     \"location\": \"labore nostrud nulla\",\n     \"name\": \"exercitation\"\n    }\n   },\n   \"id\": \"id veniam\",\n   \"registeredAt\": \"2002-06-16T06:58:13.346Z\"\n  }\n ],\n \"page\": {\n  \"number\": 82763792,\n  \"queryState\": \"consectetur amet aliqua\",\n  \"size\": 87755300,\n  \"totalElements\": -20175374,\n  \"totalPages\": -4798203\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Register protection engine.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-engines"
									]
								},
								"description": "Registers a protection engine with PowerProtect Data Manager.  This list of possible protection engines is expected to grow; however, for the current release (and upcoming releases), the supported protection engine is VPE.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"eiusmod ex adipisicing tempor ea\",\n \"type\": \"VPE\",\n \"ipAddress\": \"proident Lorem magna sit\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"sed ipsum nostrud\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"noOfProtectedVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalProtectedSizeInBytes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"totalDisabledProxies\": 32435391,\n   \"totalFailedProxies\": -94004334,\n   \"totalReadyProxies\": 48713077,\n   \"vcsStatuses\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"non occaecat eu esse\",\n   \"name\": \"do qui adipisicing cup\"\n  },\n  \"storageSystem\": {\n   \"id\": \"cillum ea f\",\n   \"location\": \"exercitation dolor tempor\",\n   \"name\": \"nisi veniam ut quis\"\n  }\n },\n \"id\": \"tempor ea fugiat sed dolor\",\n \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request was accepted for processing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"eiusmod ex adipisicing tempor ea\",\n \"type\": \"VPE\",\n \"ipAddress\": \"proident Lorem magna sit\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"sed ipsum nostrud\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"noOfProtectedVms\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalProtectedSizeInBytes\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"totalDisabledProxies\": 32435391,\n   \"totalFailedProxies\": -94004334,\n   \"totalReadyProxies\": 48713077,\n   \"vcsStatuses\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"non occaecat eu esse\",\n   \"name\": \"do qui adipisicing cup\"\n  },\n  \"storageSystem\": {\n   \"id\": \"cillum ea f\",\n   \"location\": \"exercitation dolor tempor\",\n   \"name\": \"nisi veniam ut quis\"\n  }\n },\n \"id\": \"tempor ea fugiat sed dolor\",\n \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"eiusmod ex adipisicing tempor ea\",\n    \"type\": \"VPE\",\n    \"ipAddress\": \"proident Lorem magna sit\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"sed ipsum nostrud\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"noOfProtectedVms\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"totalProtectedSizeInBytes\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"totalDisabledProxies\": 32435391,\n            \"totalFailedProxies\": -94004334,\n            \"totalReadyProxies\": 48713077,\n            \"vcsStatuses\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"non occaecat eu esse\",\n            \"name\": \"do qui adipisicing cup\"\n        },\n        \"storageSystem\": {\n            \"id\": \"cillum ea f\",\n            \"location\": \"exercitation dolor tempor\",\n            \"name\": \"nisi veniam ut quis\"\n        }\n    },\n    \"id\": \"tempor ea fugiat sed dolor\",\n    \"registeredAt\": \"1991-05-24T14:27:11.673Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "protection-policies",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "asset-assignments",
									"item": [
										{
											"name": "Get all assets protected by protection policy ID.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-assignments"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "pageSize",
															"value": "100",
															"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua",
															"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The protection policy ID."
														}
													]
												},
												"description": "Retrieves all assets that are protected with the specified protection policy ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "Successfully returned available assets.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"name\": \"ea ut et proident\",\n   \"type\": \"VMWARE_VIRTUAL_MACHINE\",\n   \"details\": {\n    \"database\": {\n     \"appServerId\": \"incididunt eu Excepte\",\n     \"appServerName\": \"ea velit i\",\n     \"appVersion\": \"non tempor mollit quis\",\n     \"asm\": \"Lorem laboris cupidatat\",\n     \"clusterName\": \"sint\",\n     \"clusterType\": \"ut adipisicing\",\n     \"dbId\": \"voluptate officia\",\n     \"lastBackup\": \"1973-05-31T17:04:36.197Z\",\n     \"protectionEngineFlow\": \"APPDIRECT\",\n     \"protectionType\": \"dolor dolore deserunt qui\",\n     \"sid\": \"deserunt laboris enim dolore pariatur\"\n    },\n    \"fileSystem\": {\n     \"fileSystemType\": \"voluptate labore\",\n     \"guid\": \"in veniam\",\n     \"hostName\": \"occaecat\",\n     \"hostOS\": \"cillum ex eiusmod\",\n     \"lastBackup\": \"1968-09-28T22:26:40.183Z\",\n     \"protectionType\": \"laboris tempor laborum cupidatat\"\n    },\n    \"k8s\": {\n     \"externalCreatedAt\": \"exercitation pariatur laboris eiusmod nulla\",\n     \"inventorySourceId\": \"fugiat\",\n     \"inventorySourceName\": \"qui\",\n     \"lastBackup\": \"2011-08-06T16:20:37.670Z\",\n     \"namespace\": \"in sit non ut\",\n     \"persistentVolumeClaim\": {\n      \"accessModes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"excluded\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"storageClassName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"volumeMode\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"volumeName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"size\": 60405285,\n     \"subType\": \"Lor\",\n     \"uid\": \"commodo ut\"\n    },\n    \"nasShare\": {\n     \"fileSystemName\": \"et dolore ullamco est\",\n     \"nasServer\": {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"name\": \"veniam officia\"\n     },\n     \"protocol\": \"NFS\"\n    },\n    \"vm\": {\n     \"clusterName\": \"ut ipsum\",\n     \"dataMoverType\": \"VADP\",\n     \"datacenter\": \"adipisicing pariatur elit\",\n     \"datastore\": [\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"datastoreName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"datastoreName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"disks\": [\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"eagerlyScrub\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"excluded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sizeInBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"thinProvisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"usedBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"eagerlyScrub\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"excluded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sizeInBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"thinProvisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"usedBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"dnsName\": \"eiusmod sit in co\",\n     \"esxName\": \"pariatur\",\n     \"externalId\": \"enim aliqua nisi velit\",\n     \"folder\": \"quis officia\",\n     \"guestOS\": \"incididunt Lorem proident exercitation\",\n     \"hostMoref\": \"elit voluptate ea dolor veniam\",\n     \"hostName\": \"velit in dolore ipsum\",\n     \"inventoryPath\": \"voluptate dolore laborum in nulla\",\n     \"inventorySourceId\": \"exercitation ea consequat ipsum\",\n     \"inventorySourceName\": \"Excepteur aliqua in ea amet\",\n     \"primaryIpAddress\": \"officia aliqua elit\",\n     \"protectedApplication\": \"ORACLE\",\n     \"resourcePool\": \"sunt do\",\n     \"vApp\": \"culpa\",\n     \"vcenterName\": \"incididunt ea ut culpa\",\n     \"vmBiosUuid\": \"non minim occaecat\",\n     \"vmMoref\": \"labore consectetur\"\n    },\n    \"vmaxStorageGroup\": {\n     \"configuration\": {\n      \"backupDevice\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"backupStorage\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"restoreDevice\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"restoreStorage\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"coordinatingHostId\": \"nisi cillum ea\",\n     \"coordinatingHostname\": \"Ut pariatur eiusm\"\n    }\n   },\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"eiusmod nisi dolor ea aliqua\",\n     \"name\": \"in aliquip dolore\",\n     \"protectionEngine\": \"consequat amet ad\",\n     \"type\": \"deserunt aliqua esse\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"Excepteur id cillum\",\n     \"name\": \"minim sunt incididunt\",\n     \"protectionEngine\": \"officia fugiat labore sint\",\n     \"type\": \"et qui sunt\"\n    },\n    \"storageSystem\": {\n     \"id\": \"dolore culpa ullamco\",\n     \"name\": \"in consequat\"\n    }\n   },\n   \"assetGroupId\": \"dolor do laboris dolore\",\n   \"backupDetails\": [\n    {\n     \"backupType\": \"LOG\",\n     \"parallelism\": 44677538\n    },\n    {\n     \"backupType\": \"INCREMENTAL\",\n     \"parallelism\": -17984437\n    }\n   ],\n   \"createdAt\": \"1941-04-22T22:45:04.557Z\",\n   \"credentialId\": \"in\",\n   \"credentials\": [\n    {\n     \"extraInfo\": [\n      {\n       \"name\": \"deserunt pariatur ipsum consectetur tempor\",\n       \"value\": \"occaecat aliqua reprehenderit Ut\"\n      },\n      {\n       \"name\": \"aliqua aliquip\",\n       \"value\": \"culpa in dolor dolore velit\"\n      }\n     ],\n     \"id\": \"magna fugiat non in\",\n     \"type\": \"est eu ut nostrud\"\n    },\n    {\n     \"extraInfo\": [\n      {\n       \"name\": \"occaecat\",\n       \"value\": \"adipisicing ullamco laborum Excepteur velit\"\n      },\n      {\n       \"name\": \"ex exercitation adipisicing\",\n       \"value\": \"occaecat minim amet anim\"\n      }\n     ],\n     \"id\": \"eu tempor\",\n     \"type\": \"sunt occaecat quis\"\n    }\n   ],\n   \"dataTargetIds\": [\n    \"Excepteur quis in amet\",\n    \"exercitation incididun\"\n   ],\n   \"deleted\": false,\n   \"filterIds\": [\n    \"Lo\",\n    \"magna labore anim id temp\"\n   ],\n   \"id\": \"adipisicing laborum occaecat\",\n   \"lastAvailableCopyTime\": \"1984-07-10T09:20:59.715Z\",\n   \"networkLabel\": \"deserunt ad dolor sint\",\n   \"protectable\": true,\n   \"protectionCapacity\": {\n    \"size\": 99694034,\n    \"time\": \"1999-04-05T06:42:04.483Z\"\n   },\n   \"protectionLifeCycleId\": \"aliquip sint dolor\",\n   \"protectionPolicy\": {\n    \"id\": \"nostrud\",\n    \"name\": \"sint\",\n    \"protectionEngine\": \"eu\",\n    \"type\": \"ut ut reprehenderit Excepteur\"\n   },\n   \"protectionPolicyId\": \"quis ea occaecat\",\n   \"ruleId\": \"sint dolor elit consequat aliquip\",\n   \"ruleName\": \"sit sunt cupidatat ullamco\",\n   \"size\": -56360378,\n   \"updatedAt\": \"1993-08-22T08:03:23.350Z\",\n   \"userTags\": [\n    \"velit irure\",\n    \"dolore veniam Duis officia\"\n   ],\n   \"vmMoref\": \"ullamco laborum\"\n  },\n  {\n   \"name\": \"dolore enim culpa ullamco ut\",\n   \"type\": \"VMAX_STORAGE_GROUP\",\n   \"details\": {\n    \"database\": {\n     \"appServerId\": \"quis\",\n     \"appServerName\": \"ullamco nostrud anim\",\n     \"appVersion\": \"Lorem dolore Duis consectetur sed\",\n     \"asm\": \"et officia tempor\",\n     \"clusterName\": \"nulla pa\",\n     \"clusterType\": \"pariatur\",\n     \"dbId\": \"cupidatat labore consectetur ullamco\",\n     \"lastBackup\": \"2017-03-23T07:32:00.824Z\",\n     \"protectionEngineFlow\": \"APPDIRECT\",\n     \"protectionType\": \"enim\",\n     \"sid\": \"pariatur occaecat cupidatat Ut\"\n    },\n    \"fileSystem\": {\n     \"fileSystemType\": \"anim exercit\",\n     \"guid\": \"veli\",\n     \"hostName\": \"enim ex esse voluptate\",\n     \"hostOS\": \"consequat veniam\",\n     \"lastBackup\": \"1944-08-24T23:33:36.352Z\",\n     \"protectionType\": \"nostrud et ad adipisic\"\n    },\n    \"k8s\": {\n     \"externalCreatedAt\": \"cillum esse\",\n     \"inventorySourceId\": \"enim aliqua quis\",\n     \"inventorySourceName\": \"velit Excepteur fugiat\",\n     \"lastBackup\": \"1986-11-28T12:11:39.321Z\",\n     \"namespace\": \"irure eu\",\n     \"persistentVolumeClaim\": {\n      \"accessModes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"excluded\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"storageClassName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"volumeMode\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"volumeName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"size\": 69173611,\n     \"subType\": \"ex in\",\n     \"uid\": \"ea voluptate magna officia\"\n    },\n    \"nasShare\": {\n     \"fileSystemName\": \"irure\",\n     \"nasServer\": {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"name\": \"quis proident\"\n     },\n     \"protocol\": \"NFS\"\n    },\n    \"vm\": {\n     \"clusterName\": \"in voluptate\",\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n     \"datacenter\": \"sunt\",\n     \"datastore\": [\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"datastoreName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"datastoreName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"disks\": [\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"eagerlyScrub\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"excluded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sizeInBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"thinProvisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"usedBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"datastoreMoref\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"eagerlyScrub\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"excluded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sizeInBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"thinProvisioned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"usedBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"dnsName\": \"nostrud enim\",\n     \"esxName\": \"eiusmod cillum non culpa\",\n     \"externalId\": \"commodo ullamco \",\n     \"folder\": \"eu veniam ipsum\",\n     \"guestOS\": \"laborum aute\",\n     \"hostMoref\": \"in ullamco commodo aliquip\",\n     \"hostName\": \"dolor qui ex eu minim\",\n     \"inventoryPath\": \"esse amet\",\n     \"inventorySourceId\": \"Excepteur\",\n     \"inventorySourceName\": \"labore Lorem laboris\",\n     \"primaryIpAddress\": \"in in et\",\n     \"protectedApplication\": \"ORACLE\",\n     \"resourcePool\": \"pariatur ad\",\n     \"vApp\": \"Excepteur et\",\n     \"vcenterName\": \"dolore fugiat minim et\",\n     \"vmBiosUuid\": \"Lorem Duis enim\",\n     \"vmMoref\": \"aliqua non\"\n    },\n    \"vmaxStorageGroup\": {\n     \"configuration\": {\n      \"backupDevice\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"backupStorage\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"restoreDevice\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"restoreStorage\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"coordinatingHostId\": \"in dolore ullamco Ut deserunt\",\n     \"coordinatingHostname\": \"dolor proident nisi ut in\"\n    }\n   },\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"tempor enim\",\n     \"name\": \"est enim nulla cupidatat\",\n     \"protectionEngine\": \"deserunt\",\n     \"type\": \"magna\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"dolore aliqua non\",\n     \"name\": \"voluptate proident\",\n     \"protectionEngine\": \"sint est anim\",\n     \"type\": \"minim in qui tempor\"\n    },\n    \"storageSystem\": {\n     \"id\": \"eu quis\",\n     \"name\": \"sit cupidatat\"\n    }\n   },\n   \"assetGroupId\": \"dolore\",\n   \"backupDetails\": [\n    {\n     \"backupType\": \"SYNTHETIC_FULL\",\n     \"parallelism\": 37170891\n    },\n    {\n     \"backupType\": \"DIFFERENTIAL\",\n     \"parallelism\": -19046500\n    }\n   ],\n   \"createdAt\": \"2007-04-04T00:24:15.596Z\",\n   \"credentialId\": \"qui culpa minim consectetur ex\",\n   \"credentials\": [\n    {\n     \"extraInfo\": [\n      {\n       \"name\": \"commodo do mollit \",\n       \"value\": \"minim Lorem\"\n      },\n      {\n       \"name\": \"culpa Lorem non ut eu\",\n       \"value\": \"quis offici\"\n      }\n     ],\n     \"id\": \"ea enim id\",\n     \"type\": \"mollit nostrud ad\"\n    },\n    {\n     \"extraInfo\": [\n      {\n       \"name\": \"ipsum aute fugiat\",\n       \"value\": \"ea laboris sit ullamco\"\n      },\n      {\n       \"name\": \"do\",\n       \"value\": \"anim cupidatat ex sit id\"\n      }\n     ],\n     \"id\": \"Excepteur voluptate veniam labore aliquip\",\n     \"type\": \"dolor do laborum\"\n    }\n   ],\n   \"dataTargetIds\": [\n    \"in irure\",\n    \"id culpa minim labore\"\n   ],\n   \"deleted\": false,\n   \"filterIds\": [\n    \"irure ut pariatur\",\n    \"nulla cupidatat\"\n   ],\n   \"id\": \"deserunt ea\",\n   \"lastAvailableCopyTime\": \"2011-08-03T21:32:01.958Z\",\n   \"networkLabel\": \"anim consectetur do et\",\n   \"protectable\": false,\n   \"protectionCapacity\": {\n    \"size\": 88218209,\n    \"time\": \"1992-06-03T11:07:47.475Z\"\n   },\n   \"protectionLifeCycleId\": \"elit\",\n   \"protectionPolicy\": {\n    \"id\": \"qui dolore\",\n    \"name\": \"eiusmod ut\",\n    \"protectionEngine\": \"reprehenderit ad do ut\",\n    \"type\": \"fugiat qui\"\n   },\n   \"protectionPolicyId\": \"labore ipsum sunt\",\n   \"ruleId\": \"cupidatat sit commodo sint\",\n   \"ruleName\": \"adipisicing dolore cupidatat ea\",\n   \"size\": 69091766,\n   \"updatedAt\": \"1943-07-07T21:56:28.045Z\",\n   \"userTags\": [\n    \"cillum pariatur esse\",\n    \"cillum nulla\"\n   ],\n   \"vmMoref\": \"sed\"\n  }\n ],\n \"page\": {\n  \"number\": -28924240,\n  \"queryState\": \"consequat\",\n  \"size\": -38143773,\n  \"totalElements\": -83177853,\n  \"totalPages\": -43308394\n }\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										},
										{
											"name": "Assign assets to the protection policy by protection policy ID.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"voluptate officia nulla sint exercitation\",\n    \"elit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-assignments"
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The protection policy ID."
														}
													]
												},
												"description": "Assigns the assets to the protection policy with the specified protection policy ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successfully assign the assets.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete protection policy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The protection policy ID."
												}
											]
										},
										"description": "Deletes protection policy by ID.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully deleted the protection policy.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a protection policy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The protection policy ID."
												}
											]
										},
										"description": "Retrieves a protection policy by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requested protection policy does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the protection policy.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"cupidatat non in\",\n \"name\": \"doid\",\n \"assetType\": \"NAS_SHARE\",\n \"type\": \"EXCLUDED\",\n \"enabled\": false,\n \"priority\": 88033993,\n \"encrypted\": false,\n \"complianceInterval\": \"minim enim in\",\n \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n \"credentials\": {\n  \"id\": \"magna id quis sint ad\",\n  \"type\": \"RMAN_WALLET\"\n },\n \"dataConsistency\": \"CRASH_CONSISTENT\",\n \"description\": \"occaecat dolore\",\n \"details\": {\n  \"oracle\": {\n   \"dbConnection\": {\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"rmanConnection\": {\n    \"credentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"vm\": {\n   \"metadataIndexingEnabled\": true,\n   \"protectionEngine\": \"HYPERVISORDIRECT\"\n  }\n },\n \"filterIds\": [\n  \"ipsum in Excepteur\",\n  \"culpa Ut deserunt adipisicing\"\n ],\n \"forceFull\": true,\n \"passive\": true,\n \"slaId\": \"labore fugiat cupidatat\",\n \"stages\": [\n  {\n   \"id\": \"ut Excepteur occaec\",\n   \"type\": \"CDR\",\n   \"passive\": true,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchange\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fileSystem\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mssql\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oracle\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"protection\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sapHana\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vm\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vmax\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 52189490,\n    \"unit\": \"YEAR\",\n    \"storageSystemRetentionLock\": false\n   },\n   \"slaId\": \"consectetur non\",\n   \"sourceStageId\": \"adipisicing esse est\",\n   \"target\": {\n    \"storageSystemId\": \"consequat elit\",\n    \"dataTargetId\": \"ut do consequat\",\n    \"hardCapacityQuotaLevel\": -93762553,\n    \"hardStreamQuotaLevel\": -95535541,\n    \"preferredInterface\": \"consectetur occaecat commodo\",\n    \"softCapacityQuotaLevel\": -54735662,\n    \"softStreamQuotaLevel\": -82586235\n   }\n  },\n  {\n   \"id\": \"dolor anim consectetur proident\",\n   \"type\": \"PROTECTION\",\n   \"passive\": true,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchange\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fileSystem\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mssql\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oracle\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"protection\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sapHana\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vm\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vmax\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 34268259,\n    \"unit\": \"MONTH\",\n    \"storageSystemRetentionLock\": true\n   },\n   \"slaId\": \"exercitation enim\",\n   \"sourceStageId\": \"qui ut\",\n   \"target\": {\n    \"storageSystemId\": \"consequat elit aliquip\",\n    \"dataTargetId\": \"mollit incididunt est minim\",\n    \"hardCapacityQuotaLevel\": -61930661,\n    \"hardStreamQuotaLevel\": -77456055,\n    \"preferredInterface\": \"est Excepteur anim labore\",\n    \"softCapacityQuotaLevel\": 2857165,\n    \"softStreamQuotaLevel\": 21921541\n   }\n  }\n ],\n \"summary\": {\n  \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n  \"numberOfAssets\": 92487359,\n  \"numberOfJobFailures\": -83074329,\n  \"numberOfSlaFailures\": -89194506,\n  \"numberOfSlaSuccess\": -97856997,\n  \"totalAssetCapacity\": 6735226.772417307,\n  \"totalAssetProtectionCapacity\": -97796728.62653625\n },\n \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
										}
									]
								},
								{
									"name": "Update protection policy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The protection policy ID."
												}
											]
										},
										"description": "Updates protection policy by ID.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the protection policy.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"cupidatat non in\",\n \"name\": \"doid\",\n \"assetType\": \"NAS_SHARE\",\n \"type\": \"EXCLUDED\",\n \"enabled\": false,\n \"priority\": 88033993,\n \"encrypted\": false,\n \"complianceInterval\": \"minim enim in\",\n \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n \"credentials\": {\n  \"id\": \"magna id quis sint ad\",\n  \"type\": \"RMAN_WALLET\"\n },\n \"dataConsistency\": \"CRASH_CONSISTENT\",\n \"description\": \"occaecat dolore\",\n \"details\": {\n  \"oracle\": {\n   \"dbConnection\": {\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"rmanConnection\": {\n    \"credentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"vm\": {\n   \"metadataIndexingEnabled\": true,\n   \"protectionEngine\": \"HYPERVISORDIRECT\"\n  }\n },\n \"filterIds\": [\n  \"ipsum in Excepteur\",\n  \"culpa Ut deserunt adipisicing\"\n ],\n \"forceFull\": true,\n \"passive\": true,\n \"slaId\": \"labore fugiat cupidatat\",\n \"stages\": [\n  {\n   \"id\": \"ut Excepteur occaec\",\n   \"type\": \"CDR\",\n   \"passive\": true,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchange\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fileSystem\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mssql\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oracle\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"protection\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sapHana\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vm\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vmax\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 52189490,\n    \"unit\": \"YEAR\",\n    \"storageSystemRetentionLock\": false\n   },\n   \"slaId\": \"consectetur non\",\n   \"sourceStageId\": \"adipisicing esse est\",\n   \"target\": {\n    \"storageSystemId\": \"consequat elit\",\n    \"dataTargetId\": \"ut do consequat\",\n    \"hardCapacityQuotaLevel\": -93762553,\n    \"hardStreamQuotaLevel\": -95535541,\n    \"preferredInterface\": \"consectetur occaecat commodo\",\n    \"softCapacityQuotaLevel\": -54735662,\n    \"softStreamQuotaLevel\": -82586235\n   }\n  },\n  {\n   \"id\": \"dolor anim consectetur proident\",\n   \"type\": \"PROTECTION\",\n   \"passive\": true,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchange\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fileSystem\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mssql\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oracle\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"protection\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sapHana\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vm\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vmax\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 34268259,\n    \"unit\": \"MONTH\",\n    \"storageSystemRetentionLock\": true\n   },\n   \"slaId\": \"exercitation enim\",\n   \"sourceStageId\": \"qui ut\",\n   \"target\": {\n    \"storageSystemId\": \"consequat elit aliquip\",\n    \"dataTargetId\": \"mollit incididunt est minim\",\n    \"hardCapacityQuotaLevel\": -61930661,\n    \"hardStreamQuotaLevel\": -77456055,\n    \"preferredInterface\": \"est Excepteur anim labore\",\n    \"softCapacityQuotaLevel\": 2857165,\n    \"softStreamQuotaLevel\": 21921541\n   }\n  }\n ],\n \"summary\": {\n  \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n  \"numberOfAssets\": 92487359,\n  \"numberOfJobFailures\": -83074329,\n  \"numberOfSlaFailures\": -89194506,\n  \"numberOfSlaSuccess\": -97856997,\n  \"totalAssetCapacity\": 6735226.772417307,\n  \"totalAssetProtectionCapacity\": -97796728.62653625\n },\n \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
										}
									]
								},
								{
									"name": "Unassign assets protected from the protection policy by protection policy ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id",
												"asset-unassignments"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The protection policy ID."
												}
											]
										},
										"description": "Unassigns protected assets from the specified protection policy ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully unassign the assets.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"Excepteur culpa pariatur non ad\",\n    \"al\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Trigger manual backup at protection policy level.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"assetIds\": [\n        \"ut culpa minim\",\n        \"occaecat enim Ut ex aliqua\"\n    ],\n    \"backupType\": \"AUTO_FULL\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": 98521862,\n        \"unit\": \"WEEK\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id",
												"backups"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The protection policy Id."
												}
											]
										},
										"description": "Trigger All or Selected assets in one protection policy as manual backup.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"nostrud Excepteur\",\n        \"aliquip quis Ut\"\n    ],\n    \"backupType\": \"CUMULATIVE\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": 59672563,\n        \"unit\": \"MONTH\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"nostrud Excepteur\",\n        \"aliquip quis Ut\"\n    ],\n    \"backupType\": \"CUMULATIVE\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": 59672563,\n        \"unit\": \"MONTH\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"nostrud Excepteur\",\n        \"aliquip quis Ut\"\n    ],\n    \"backupType\": \"CUMULATIVE\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": 59672563,\n        \"unit\": \"MONTH\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully triggered the adhoc backup process.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"nostrud Excepteur\",\n        \"aliquip quis Ut\"\n    ],\n    \"backupType\": \"CUMULATIVE\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": 59672563,\n        \"unit\": \"MONTH\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"nostrud Excepteur\",\n        \"aliquip quis Ut\"\n    ],\n    \"backupType\": \"CUMULATIVE\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": 59672563,\n        \"unit\": \"MONTH\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Manually protect assets by policy.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"assetIds\": [\n        \"Ut amet Lorem\",\n        \"nostrud\"\n    ],\n    \"stages\": [\n        {\n            \"id\": \"cillum dolore\",\n            \"operation\": {\n                \"backupType\": \"FULL\"\n            },\n            \"retention\": {\n                \"interval\": 80611048,\n                \"unit\": \"DAY\"\n            }\n        },\n        {\n            \"id\": \"quis cillum aliquip ut\",\n            \"operation\": {\n                \"backupType\": \"SYNTHETIC_FULL\"\n            },\n            \"retention\": {\n                \"interval\": 22556053,\n                \"unit\": \"DAY\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id/protections",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id",
												"protections"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the protection policy."
												}
											]
										},
										"description": "Manually protect assets at the protection policy level."
									},
									"response": [
										{
											"name": "The requested is accepted for processing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"ipsum reprehenderit\",\n        \"mollit consequat id\"\n    ],\n    \"stages\": [\n        {\n            \"id\": \"eu voluptate Excepteur\",\n            \"operation\": {\n                \"backupType\": \"GEN0\"\n            },\n            \"retention\": {\n                \"interval\": 98780117,\n                \"unit\": \"MONTH\"\n            }\n        },\n        {\n            \"id\": \"tempor magna voluptate quis\",\n            \"operation\": {\n                \"backupType\": \"GEN0\"\n            },\n            \"retention\": {\n                \"interval\": 40856820,\n                \"unit\": \"MONTH\"\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/protections",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"protections"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"results\": [\n  {\n   \"activityId\": \"sunt ullamco ex\",\n   \"stageId\": \"labore ea sint\",\n   \"status\": \"aliqua nisi dolore deserunt fugiat\"\n  },\n  {\n   \"activityId\": \"ea esse\",\n   \"stageId\": \"nostrud\",\n   \"status\": \"amet officia \"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all protection policies.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-policies"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all protection policies.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available protection policies.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"est id cillum commodo\",\n   \"name\": \"ea s\",\n   \"assetType\": \"FILE_SYSTEM\",\n   \"type\": \"ACTIVE\",\n   \"enabled\": true,\n   \"priority\": 70143069,\n   \"encrypted\": false,\n   \"complianceInterval\": \"Lorem laborum sunt reprehenderit\",\n   \"createdAt\": \"1986-04-06T16:50:52.944Z\",\n   \"credentials\": {\n    \"id\": \"in commodo ex est ipsum\",\n    \"type\": \"DBUSER\"\n   },\n   \"dataConsistency\": \"CRASH_CONSISTENT\",\n   \"description\": \"nostrud cupidatat ea\",\n   \"details\": {\n    \"oracle\": {\n     \"dbConnection\": {\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"rmanConnection\": {\n      \"credentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    },\n    \"vm\": {\n     \"metadataIndexingEnabled\": false,\n     \"protectionEngine\": \"VMDIRECT\"\n    }\n   },\n   \"filterIds\": [\n    \"id in officia\",\n    \"aliqua sunt cillum labore\"\n   ],\n   \"forceFull\": false,\n   \"passive\": true,\n   \"slaId\": \"fugiat et dolor\",\n   \"stages\": [\n    {\n     \"id\": \"nulla ut et\",\n     \"type\": \"PROMOTION\",\n     \"passive\": true,\n     \"attributes\": {\n      \"cloudTier\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileSystem\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mssql\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oracle\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"protection\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sapHana\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vm\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vmax\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"operations\": [\n      {\n       \"backupType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"schedule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"options\": {\n      \"promotionType\": \"ALL\",\n      \"skipSimpleDatabase\": true\n     },\n     \"retention\": {\n      \"interval\": 23281269,\n      \"unit\": \"WEEK\",\n      \"storageSystemRetentionLock\": false\n     },\n     \"slaId\": \"labor\",\n     \"sourceStageId\": \"aliquip adipisicing consectetur in sed\",\n     \"target\": {\n      \"storageSystemId\": \"Duis amet proident rep\",\n      \"dataTargetId\": \"est exercitation voluptate\",\n      \"hardCapacityQuotaLevel\": -22870689,\n      \"hardStreamQuotaLevel\": -14336705,\n      \"preferredInterface\": \"amet occaecat cupidatat\",\n      \"softCapacityQuotaLevel\": -44026051,\n      \"softStreamQuotaLevel\": -44227331\n     }\n    },\n    {\n     \"id\": \"ex irure do\",\n     \"type\": \"PROMOTION\",\n     \"passive\": false,\n     \"attributes\": {\n      \"cloudTier\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileSystem\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mssql\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oracle\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"protection\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sapHana\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vm\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vmax\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"operations\": [\n      {\n       \"backupType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"schedule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"options\": {\n      \"promotionType\": \"NONE_WITH_WARNINGS\",\n      \"skipSimpleDatabase\": false\n     },\n     \"retention\": {\n      \"interval\": 55932848,\n      \"unit\": \"WEEK\",\n      \"storageSystemRetentionLock\": true\n     },\n     \"slaId\": \"tempor sint\",\n     \"sourceStageId\": \"ad\",\n     \"target\": {\n      \"storageSystemId\": \"eiusmod magna\",\n      \"dataTargetId\": \"proide\",\n      \"hardCapacityQuotaLevel\": -74199983,\n      \"hardStreamQuotaLevel\": -36803996,\n      \"preferredInterface\": \"amet incididunt\",\n      \"softCapacityQuotaLevel\": -24539463,\n      \"softStreamQuotaLevel\": -96352735\n     }\n    }\n   ],\n   \"summary\": {\n    \"lastExecutionStatus\": \"FAILED\",\n    \"numberOfAssets\": 15976219,\n    \"numberOfJobFailures\": -91682093,\n    \"numberOfSlaFailures\": 19519130,\n    \"numberOfSlaSuccess\": -87623634,\n    \"totalAssetCapacity\": -16712809.763299048,\n    \"totalAssetProtectionCapacity\": 91061359.3770333\n   },\n   \"targetStorageProvisionStrategy\": \"AUTO_PROVISION\",\n   \"updatedAt\": \"2002-11-16T23:38:53.878Z\"\n  },\n  {\n   \"id\": \"esse\",\n   \"name\": \"null\",\n   \"assetType\": \"VMAX_STORAGE_GROUP\",\n   \"type\": \"EXCLUDED\",\n   \"enabled\": false,\n   \"priority\": 48515596,\n   \"encrypted\": true,\n   \"complianceInterval\": \"aute Duis deserunt ut\",\n   \"createdAt\": \"1970-12-13T01:49:13.083Z\",\n   \"credentials\": {\n    \"id\": \"magna nostr\",\n    \"type\": \"DBUSER\"\n   },\n   \"dataConsistency\": \"APPLICATION_CONSISTENT\",\n   \"description\": \"officia ut culpa fugiat\",\n   \"details\": {\n    \"oracle\": {\n     \"dbConnection\": {\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"rmanConnection\": {\n      \"credentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsAdmin\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tnsName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    },\n    \"vm\": {\n     \"metadataIndexingEnabled\": false,\n     \"protectionEngine\": \"HYPERVISORDIRECT\"\n    }\n   },\n   \"filterIds\": [\n    \"minim adipisicing incididunt ut\",\n    \"qui ipsum Excepteur dolore\"\n   ],\n   \"forceFull\": false,\n   \"passive\": true,\n   \"slaId\": \"ut minim elit\",\n   \"stages\": [\n    {\n     \"id\": \"eu ullamco adipisicing elit\",\n     \"type\": \"PROMOTION\",\n     \"passive\": true,\n     \"attributes\": {\n      \"cloudTier\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileSystem\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mssql\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oracle\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"protection\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sapHana\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vm\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vmax\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"operations\": [\n      {\n       \"backupType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"schedule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"options\": {\n      \"promotionType\": \"ALL\",\n      \"skipSimpleDatabase\": false\n     },\n     \"retention\": {\n      \"interval\": 71483935,\n      \"unit\": \"YEAR\",\n      \"storageSystemRetentionLock\": false\n     },\n     \"slaId\": \"velit elit\",\n     \"sourceStageId\": \"fugiat\",\n     \"target\": {\n      \"storageSystemId\": \"minim fugiat ipsum\",\n      \"dataTargetId\": \"cillum in\",\n      \"hardCapacityQuotaLevel\": 67715010,\n      \"hardStreamQuotaLevel\": -71584596,\n      \"preferredInterface\": \"incidid\",\n      \"softCapacityQuotaLevel\": 6603424,\n      \"softStreamQuotaLevel\": -36601978\n     }\n    },\n    {\n     \"id\": \"Lorem cillum\",\n     \"type\": \"PRIMARY\",\n     \"passive\": false,\n     \"attributes\": {\n      \"cloudTier\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileSystem\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mssql\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oracle\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"protection\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sapHana\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vm\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vmax\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"operations\": [\n      {\n       \"backupType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"schedule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"options\": {\n      \"promotionType\": \"ALL\",\n      \"skipSimpleDatabase\": false\n     },\n     \"retention\": {\n      \"interval\": 83568814,\n      \"unit\": \"DAY\",\n      \"storageSystemRetentionLock\": true\n     },\n     \"slaId\": \"sed aute ullamco esse\",\n     \"sourceStageId\": \"consectetur nulla qui non\",\n     \"target\": {\n      \"storageSystemId\": \"aute qui magna\",\n      \"dataTargetId\": \"irure Duis ut\",\n      \"hardCapacityQuotaLevel\": 92809386,\n      \"hardStreamQuotaLevel\": -55456913,\n      \"preferredInterface\": \"commodo\",\n      \"softCapacityQuotaLevel\": -1862472,\n      \"softStreamQuotaLevel\": 85401753\n     }\n    }\n   ],\n   \"summary\": {\n    \"lastExecutionStatus\": \"CANCELLED\",\n    \"numberOfAssets\": -34057945,\n    \"numberOfJobFailures\": 34658161,\n    \"numberOfSlaFailures\": -35867353,\n    \"numberOfSlaSuccess\": -6831880,\n    \"totalAssetCapacity\": -47519382.81457458,\n    \"totalAssetProtectionCapacity\": 8979576.0650298\n   },\n   \"targetStorageProvisionStrategy\": \"AUTO_PROVISION\",\n   \"updatedAt\": \"2000-07-30T00:56:09.595Z\"\n  }\n ],\n \"page\": {\n  \"number\": -59747681,\n  \"queryState\": \"consectetur proident magna in\",\n  \"size\": 58401383,\n  \"totalElements\": -43295218,\n  \"totalPages\": -99307127\n }\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create a protection policy.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-policies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-policies"
									]
								},
								"description": "Creates a protection policy.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully created the protection policy.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"cupidatat non in\",\n \"name\": \"doid\",\n \"assetType\": \"NAS_SHARE\",\n \"type\": \"EXCLUDED\",\n \"enabled\": false,\n \"priority\": 88033993,\n \"encrypted\": false,\n \"complianceInterval\": \"minim enim in\",\n \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n \"credentials\": {\n  \"id\": \"magna id quis sint ad\",\n  \"type\": \"RMAN_WALLET\"\n },\n \"dataConsistency\": \"CRASH_CONSISTENT\",\n \"description\": \"occaecat dolore\",\n \"details\": {\n  \"oracle\": {\n   \"dbConnection\": {\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"rmanConnection\": {\n    \"credentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsAdmin\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tnsName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  \"vm\": {\n   \"metadataIndexingEnabled\": true,\n   \"protectionEngine\": \"HYPERVISORDIRECT\"\n  }\n },\n \"filterIds\": [\n  \"ipsum in Excepteur\",\n  \"culpa Ut deserunt adipisicing\"\n ],\n \"forceFull\": true,\n \"passive\": true,\n \"slaId\": \"labore fugiat cupidatat\",\n \"stages\": [\n  {\n   \"id\": \"ut Excepteur occaec\",\n   \"type\": \"CDR\",\n   \"passive\": true,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchange\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fileSystem\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mssql\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oracle\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"protection\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sapHana\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vm\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vmax\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 52189490,\n    \"unit\": \"YEAR\",\n    \"storageSystemRetentionLock\": false\n   },\n   \"slaId\": \"consectetur non\",\n   \"sourceStageId\": \"adipisicing esse est\",\n   \"target\": {\n    \"storageSystemId\": \"consequat elit\",\n    \"dataTargetId\": \"ut do consequat\",\n    \"hardCapacityQuotaLevel\": -93762553,\n    \"hardStreamQuotaLevel\": -95535541,\n    \"preferredInterface\": \"consectetur occaecat commodo\",\n    \"softCapacityQuotaLevel\": -54735662,\n    \"softStreamQuotaLevel\": -82586235\n   }\n  },\n  {\n   \"id\": \"dolor anim consectetur proident\",\n   \"type\": \"PROTECTION\",\n   \"passive\": true,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exchange\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fileSystem\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mssql\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oracle\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"protection\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sapHana\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vm\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vmax\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 34268259,\n    \"unit\": \"MONTH\",\n    \"storageSystemRetentionLock\": true\n   },\n   \"slaId\": \"exercitation enim\",\n   \"sourceStageId\": \"qui ut\",\n   \"target\": {\n    \"storageSystemId\": \"consequat elit aliquip\",\n    \"dataTargetId\": \"mollit incididunt est minim\",\n    \"hardCapacityQuotaLevel\": -61930661,\n    \"hardStreamQuotaLevel\": -77456055,\n    \"preferredInterface\": \"est Excepteur anim labore\",\n    \"softCapacityQuotaLevel\": 2857165,\n    \"softStreamQuotaLevel\": 21921541\n   }\n  }\n ],\n \"summary\": {\n  \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n  \"numberOfAssets\": 92487359,\n  \"numberOfJobFailures\": -83074329,\n  \"numberOfSlaFailures\": -89194506,\n  \"numberOfSlaSuccess\": -97856997,\n  \"totalAssetCapacity\": 6735226.772417307,\n  \"totalAssetProtectionCapacity\": -97796728.62653625\n },\n \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"cupidatat non in\",\n    \"name\": \"doid\",\n    \"assetType\": \"NAS_SHARE\",\n    \"type\": \"EXCLUDED\",\n    \"enabled\": false,\n    \"priority\": 88033993,\n    \"encrypted\": false,\n    \"complianceInterval\": \"minim enim in\",\n    \"createdAt\": \"1970-06-28T10:09:58.747Z\",\n    \"credentials\": {\n        \"id\": \"magna id quis sint ad\",\n        \"type\": \"RMAN_WALLET\"\n    },\n    \"dataConsistency\": \"CRASH_CONSISTENT\",\n    \"description\": \"occaecat dolore\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"rmanConnection\": {\n                \"credentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsAdmin\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tnsName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": true,\n            \"protectionEngine\": \"HYPERVISORDIRECT\"\n        }\n    },\n    \"filterIds\": [\n        \"ipsum in Excepteur\",\n        \"culpa Ut deserunt adipisicing\"\n    ],\n    \"forceFull\": true,\n    \"passive\": true,\n    \"slaId\": \"labore fugiat cupidatat\",\n    \"stages\": [\n        {\n            \"id\": \"ut Excepteur occaec\",\n            \"type\": \"CDR\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 52189490,\n                \"unit\": \"YEAR\",\n                \"storageSystemRetentionLock\": false\n            },\n            \"slaId\": \"consectetur non\",\n            \"sourceStageId\": \"adipisicing esse est\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit\",\n                \"dataTargetId\": \"ut do consequat\",\n                \"hardCapacityQuotaLevel\": -93762553,\n                \"hardStreamQuotaLevel\": -95535541,\n                \"preferredInterface\": \"consectetur occaecat commodo\",\n                \"softCapacityQuotaLevel\": -54735662,\n                \"softStreamQuotaLevel\": -82586235\n            }\n        },\n        {\n            \"id\": \"dolor anim consectetur proident\",\n            \"type\": \"PROTECTION\",\n            \"passive\": true,\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"exchange\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fileSystem\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"mssql\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oracle\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"protection\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"sapHana\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vm\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmax\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"schedule\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"NONE_WITH_WARNINGS\",\n                \"skipSimpleDatabase\": true\n            },\n            \"retention\": {\n                \"interval\": 34268259,\n                \"unit\": \"MONTH\",\n                \"storageSystemRetentionLock\": true\n            },\n            \"slaId\": \"exercitation enim\",\n            \"sourceStageId\": \"qui ut\",\n            \"target\": {\n                \"storageSystemId\": \"consequat elit aliquip\",\n                \"dataTargetId\": \"mollit incididunt est minim\",\n                \"hardCapacityQuotaLevel\": -61930661,\n                \"hardStreamQuotaLevel\": -77456055,\n                \"preferredInterface\": \"est Excepteur anim labore\",\n                \"softCapacityQuotaLevel\": 2857165,\n                \"softStreamQuotaLevel\": 21921541\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"COMPLETED_WITH_EXCEPTIONS\",\n        \"numberOfAssets\": 92487359,\n        \"numberOfJobFailures\": -83074329,\n        \"numberOfSlaFailures\": -89194506,\n        \"numberOfSlaSuccess\": -97856997,\n        \"totalAssetCapacity\": 6735226.772417307,\n        \"totalAssetProtectionCapacity\": -97796728.62653625\n    },\n    \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n    \"updatedAt\": \"2006-01-29T00:59:11.114Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "protection-rules",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete protection rule by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the protection rule."
												}
											]
										},
										"description": "Deletes protection rule by specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully deleted the protection rule.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get a protection rule by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the protection rule."
												}
											]
										},
										"description": "Retrieves a protection rule by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requested protection rule does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the protection rule.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"enim consectetur occaecat ipsum\",\n \"action\": \"NOT_SUPPORTED\",\n \"actionResult\": \"elit aliquip do\",\n \"conditions\": [\n  {\n   \"assetAttributeName\": \"enim consequat\",\n   \"assetAttributeValue\": \"labore sit dolore\",\n   \"operator\": \"GREATER_THAN\"\n  },\n  {\n   \"assetAttributeName\": \"voluptate nulla quis\",\n   \"assetAttributeValue\": \"ipsum pariatur tempor\",\n   \"operator\": \"EQUALS\"\n  }\n ],\n \"conditionConnector\": \"OR\",\n \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n \"priority\": 79405956,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod exercitation\",\n   \"name\": \"sunt ea velit nostrud\",\n   \"protectionEngine\": \"fugiat nisi Duis\",\n   \"type\": \"nis\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"amet dolore est\",\n   \"name\": \"dolore in esse \",\n   \"protectionEngine\": \"dolor magna dolore\",\n   \"type\": \"incididunt veniam aliquip\"\n  },\n  \"storageSystem\": {\n   \"id\": \"nisi\",\n   \"name\": \"ullamco officia Excepteur\"\n  }\n },\n \"assignedAssetsCount\": -52895295,\n \"description\": \"minim amet\",\n \"displayDescription\": \"ea consectetur reprehenderit\",\n \"id\": \"dolore mollit et in\",\n \"lastRunAt\": \"2020-05-04T03:06:36.158Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"cupid\"\n }\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update protection rule by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the protection rule."
												}
											]
										},
										"description": "Update protection rule by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the protection rule.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"enim consectetur occaecat ipsum\",\n \"action\": \"NOT_SUPPORTED\",\n \"actionResult\": \"elit aliquip do\",\n \"conditions\": [\n  {\n   \"assetAttributeName\": \"enim consequat\",\n   \"assetAttributeValue\": \"labore sit dolore\",\n   \"operator\": \"GREATER_THAN\"\n  },\n  {\n   \"assetAttributeName\": \"voluptate nulla quis\",\n   \"assetAttributeValue\": \"ipsum pariatur tempor\",\n   \"operator\": \"EQUALS\"\n  }\n ],\n \"conditionConnector\": \"OR\",\n \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n \"priority\": 79405956,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod exercitation\",\n   \"name\": \"sunt ea velit nostrud\",\n   \"protectionEngine\": \"fugiat nisi Duis\",\n   \"type\": \"nis\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"amet dolore est\",\n   \"name\": \"dolore in esse \",\n   \"protectionEngine\": \"dolor magna dolore\",\n   \"type\": \"incididunt veniam aliquip\"\n  },\n  \"storageSystem\": {\n   \"id\": \"nisi\",\n   \"name\": \"ullamco officia Excepteur\"\n  }\n },\n \"assignedAssetsCount\": -52895295,\n \"description\": \"minim amet\",\n \"displayDescription\": \"ea consectetur reprehenderit\",\n \"id\": \"dolore mollit et in\",\n \"lastRunAt\": \"2020-05-04T03:06:36.158Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"cupid\"\n }\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all protection rules.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all protection rules\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available protection rules.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"incididunt sunt\",\n   \"action\": \"MOVE_TO_GROUP\",\n   \"actionResult\": \"laboris\",\n   \"conditions\": [\n    {\n     \"assetAttributeName\": \"qui\",\n     \"assetAttributeValue\": \"veniam eiusmod aute\",\n     \"operator\": \"GREATER_THAN\"\n    },\n    {\n     \"assetAttributeName\": \"esse ut eu\",\n     \"assetAttributeValue\": \"minim\",\n     \"operator\": \"DOES_NOT_EQUAL\"\n    }\n   ],\n   \"conditionConnector\": \"AND\",\n   \"inventorySourceType\": \"KUBERNETES\",\n   \"priority\": -73618127,\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"ut elit dolore nostrud eu\",\n     \"name\": \"commodo labore ipsum\",\n     \"protectionEngine\": \"non enim sint aliquip pariatur\",\n     \"type\": \"tempor est ullamco\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"esse tempor aliquip\",\n     \"name\": \"exercitation id dolor\",\n     \"protectionEngine\": \"et mollit\",\n     \"type\": \"consequat sint\"\n    },\n    \"storageSystem\": {\n     \"id\": \"quis\",\n     \"name\": \"Excepteur nulla\"\n    }\n   },\n   \"assignedAssetsCount\": -96007135,\n   \"description\": \"dolore velit magna\",\n   \"displayDescription\": \"est dolore enim\",\n   \"id\": \"culpa ipsum ut adipisicin\",\n   \"lastRunAt\": \"1987-03-08T23:51:13.428Z\",\n   \"managedBy\": \"null\",\n   \"tenant\": {\n    \"id\": \"Excepteur ut dolor in\"\n   }\n  },\n  {\n   \"name\": \"consequat\",\n   \"action\": \"NOT_SUPPORTED\",\n   \"actionResult\": \"qui cupidatat ad\",\n   \"conditions\": [\n    {\n     \"assetAttributeName\": \"ullamco anim occaecat eu\",\n     \"assetAttributeValue\": \"dolore amet laborum ullamco sit\",\n     \"operator\": \"BEGINS_WITH\"\n    },\n    {\n     \"assetAttributeName\": \"minim ex est ullamco\",\n     \"assetAttributeValue\": \"laborum in adipi\",\n     \"operator\": \"GREATER_THAN\"\n    }\n   ],\n   \"conditionConnector\": \"AND\",\n   \"inventorySourceType\": \"VMWARE_VIRTUAL_MACHINE\",\n   \"priority\": 35562698,\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"laborum\",\n     \"name\": \"laborum qui in ex\",\n     \"protectionEngine\": \"sit dolore in ad\",\n     \"type\": \"ad do esse\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"cillum proident eiusmod\",\n     \"name\": \"ipsum dolor enim sunt\",\n     \"protectionEngine\": \"do veniam in non\",\n     \"type\": \"exercitation ex fugiat quis\"\n    },\n    \"storageSystem\": {\n     \"id\": \"ipsum laboris Excepteur\",\n     \"name\": \"ullamco nulla\"\n    }\n   },\n   \"assignedAssetsCount\": 6765228,\n   \"description\": \"enim fugiat laborum ea\",\n   \"displayDescription\": \"aliqua reprehen\",\n   \"id\": \"dolore eiusmod\",\n   \"lastRunAt\": \"1966-03-22T19:28:40.908Z\",\n   \"managedBy\": \"null\",\n   \"tenant\": {\n    \"id\": \"sint nulla\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": 82915355,\n  \"queryState\": \"non labore dolore dol\",\n  \"size\": -13191543,\n  \"totalElements\": 18092157,\n  \"totalPages\": 14773301\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create a protection rule.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules"
									]
								},
								"description": "Create a protection rule.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successful operation. ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"enim consectetur occaecat ipsum\",\n \"action\": \"NOT_SUPPORTED\",\n \"actionResult\": \"elit aliquip do\",\n \"conditions\": [\n  {\n   \"assetAttributeName\": \"enim consequat\",\n   \"assetAttributeValue\": \"labore sit dolore\",\n   \"operator\": \"GREATER_THAN\"\n  },\n  {\n   \"assetAttributeName\": \"voluptate nulla quis\",\n   \"assetAttributeValue\": \"ipsum pariatur tempor\",\n   \"operator\": \"EQUALS\"\n  }\n ],\n \"conditionConnector\": \"OR\",\n \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n \"priority\": 79405956,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod exercitation\",\n   \"name\": \"sunt ea velit nostrud\",\n   \"protectionEngine\": \"fugiat nisi Duis\",\n   \"type\": \"nis\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"amet dolore est\",\n   \"name\": \"dolore in esse \",\n   \"protectionEngine\": \"dolor magna dolore\",\n   \"type\": \"incididunt veniam aliquip\"\n  },\n  \"storageSystem\": {\n   \"id\": \"nisi\",\n   \"name\": \"ullamco officia Excepteur\"\n  }\n },\n \"assignedAssetsCount\": -52895295,\n \"description\": \"minim amet\",\n \"displayDescription\": \"ea consectetur reprehenderit\",\n \"id\": \"dolore mollit et in\",\n \"lastRunAt\": \"2020-05-04T03:06:36.158Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"cupid\"\n }\n}"
								},
								{
									"name": "Successfully created the protection rule.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"enim consectetur occaecat ipsum\",\n \"action\": \"NOT_SUPPORTED\",\n \"actionResult\": \"elit aliquip do\",\n \"conditions\": [\n  {\n   \"assetAttributeName\": \"enim consequat\",\n   \"assetAttributeValue\": \"labore sit dolore\",\n   \"operator\": \"GREATER_THAN\"\n  },\n  {\n   \"assetAttributeName\": \"voluptate nulla quis\",\n   \"assetAttributeValue\": \"ipsum pariatur tempor\",\n   \"operator\": \"EQUALS\"\n  }\n ],\n \"conditionConnector\": \"OR\",\n \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n \"priority\": 79405956,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod exercitation\",\n   \"name\": \"sunt ea velit nostrud\",\n   \"protectionEngine\": \"fugiat nisi Duis\",\n   \"type\": \"nis\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"amet dolore est\",\n   \"name\": \"dolore in esse \",\n   \"protectionEngine\": \"dolor magna dolore\",\n   \"type\": \"incididunt veniam aliquip\"\n  },\n  \"storageSystem\": {\n   \"id\": \"nisi\",\n   \"name\": \"ullamco officia Excepteur\"\n  }\n },\n \"assignedAssetsCount\": -52895295,\n \"description\": \"minim amet\",\n \"displayDescription\": \"ea consectetur reprehenderit\",\n \"id\": \"dolore mollit et in\",\n \"lastRunAt\": \"2020-05-04T03:06:36.158Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"cupid\"\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"id te\",\n    \"action\": \"NOT_SUPPORTED\",\n    \"actionResult\": \"aute\",\n    \"conditions\": [\n        {\n            \"assetAttributeName\": \"commodo id\",\n            \"assetAttributeValue\": \"nostrud qui enim occaecat\",\n            \"operator\": \"GREATER_THAN\"\n        },\n        {\n            \"assetAttributeName\": \"labore\",\n            \"assetAttributeValue\": \"id Ut ad \",\n            \"operator\": \"CONTAINS\"\n        }\n    ],\n    \"conditionConnector\": \"AND\",\n    \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n    \"priority\": -28459730,\n    \"assignedAssetsCount\": 67941411,\n    \"description\": \"Ut sunt\",\n    \"displayDescription\": \"do exercitation laborum officia\",\n    \"id\": \"eiusmod dolore Duis ut eu\",\n    \"lastRunAt\": \"2010-03-18T20:47:32.913Z\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"nostrud\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "remote-services-gateway",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Unregister the device from the ESRS gateway.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The UUID of the Remote Services Gateway connection."
												}
											]
										},
										"description": "Removes appliance registration from the remote services gateway.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Unregistered and deleted the device from the remote services gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Cannot find a remote services connection with the given ID.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get the remote services gateway connections.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The UUID of the remote services gateway connection."
												}
											]
										},
										"description": "Retrieves list of connections to the remote services gateway.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a remote services connection with the given ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request was successful and returned the requested resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"automaticDownloadUpgradePackage\": false,\n \"createdDate\": \"dolor amet\",\n \"deploymentStatus\": \"eiusmod in\",\n \"deviceStatus\": \"minim sint labore\",\n \"emcSupportPassword\": \"ex\",\n \"emcSupportUsername\": \"dolore ea ad in\",\n \"gatewayHostAddress\": \"sunt in con\",\n \"gatewaySerialNumber\": \"reprehenderit sunt\",\n \"id\": \"consecte\"\n}"
										},
										{
											"name": "Occurs if component state is RESTORE.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Patch an updated value of automatic download upgrade package.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The UUID of the remote services gateway connection."
												}
											]
										},
										"description": "Enables or disables automatic download upgrade package.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Some fields in the request body are not valid or required fields are not supplied.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Failed to contact the remote services backend or an error occurred in the remote services backend.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Failed Dependency (WebDAV) (RFC 4918)",
											"code": 424,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a remote services connection with the given ID.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the remote services connection with the new gateway address.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"automaticDownloadUpgradePackage\": false,\n \"createdDate\": \"dolor amet\",\n \"deploymentStatus\": \"eiusmod in\",\n \"deviceStatus\": \"minim sint labore\",\n \"emcSupportPassword\": \"ex\",\n \"emcSupportUsername\": \"dolore ea ad in\",\n \"gatewayHostAddress\": \"sunt in con\",\n \"gatewaySerialNumber\": \"reprehenderit sunt\",\n \"id\": \"consecte\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get the remote services gateway resource.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"remote-services-gateway"
									]
								},
								"description": "Retrieves a list of connections to the remote services gateway.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Occurs if component state is RESTORE.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"automaticDownloadUpgradePackage\": true,\n   \"createdDate\": \"enim dolore non\",\n   \"deploymentStatus\": \"laborum consectetur\",\n   \"deviceStatus\": \"reprehenderit consectetur veniam\",\n   \"emcSupportPassword\": \"dolor in labore do\",\n   \"emcSupportUsername\": \"laborum mollit ex aliquip consequat\",\n   \"gatewayHostAddress\": \"\",\n   \"gatewaySerialNumber\": \"anim cupidatat reprehenderit\",\n   \"id\": \"laborum ut Ut nulla\"\n  },\n  {\n   \"automaticDownloadUpgradePackage\": false,\n   \"createdDate\": \"aliquip in\",\n   \"deploymentStatus\": \"aute\",\n   \"deviceStatus\": \"cillum culpa ea commodo elit\",\n   \"emcSupportPassword\": \"in amet officia consectetur ipsum\",\n   \"emcSupportUsername\": \"incididunt\",\n   \"gatewayHostAddress\": \"occaecat cupidatat exercitation do\",\n   \"gatewaySerialNumber\": \"culpa fugiat ut\",\n   \"id\": \"fugiat aliqua pariatur tempor Ut\"\n  }\n ],\n \"page\": {\n  \"number\": -93039912,\n  \"queryState\": \"aliquip proident\",\n  \"size\": -46083793,\n  \"totalElements\": 23416294,\n  \"totalPages\": -97085321\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Register a device for telemetry management.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"remote-services-gateway"
									]
								},
								"description": "Registers the PowerProtect Data Manager appliance with a remote services gateway.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operationr.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Failed to contact the remote services backend or an error occurred in the remote services backend.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Failed Dependency (WebDAV) (RFC 4918)",
									"code": 424,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The JSON syntax is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Some fields in the request body are not valid or required fields are not supplied.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Registered the device with the remote services gateway.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"automaticDownloadUpgradePackage\": true,\n \"emcSupportUsername\": \"Lorem\",\n \"gatewayHostAddress\": \"fugiat labore ea\",\n \"gatewaySerialNumber\": \"non nulla consectet\",\n \"id\": \"\"\n}"
								},
								{
									"name": "A valid license does not exist for the system.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": false,\n    \"createdDate\": \"dolor amet\",\n    \"deploymentStatus\": \"eiusmod in\",\n    \"deviceStatus\": \"minim sint labore\",\n    \"emcSupportPassword\": \"ex\",\n    \"emcSupportUsername\": \"dolore ea ad in\",\n    \"gatewayHostAddress\": \"sunt in con\",\n    \"gatewaySerialNumber\": \"reprehenderit sunt\",\n    \"id\": \"consecte\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "remote-upgrade-packages",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Download the remote upgrade package that is assigned to the product.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The UUID of the remote services gateway connection."
												}
											]
										},
										"description": "Starts file download for the remote upgrade package of the specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Occurs if the state of the upgrade package for the given ID is DOWNLOADING, DOWNLOADED, IGNORED; the metadata of the file has been changed in the remote services backend; or the downloaded package already exists on the appliance.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An error occurred in the ESRS backend, or the file was not found in the backend.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Failed Dependency (WebDAV) (RFC 4918)",
											"code": 424,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a device connection to the remote services gateway or the upgrade package with the given ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The Telemetry Manager component is in the RESTORE state.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Accepted and processing the download request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get remote upgrade package download progress.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages",
												":id",
												"download-status"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The UUID of the remote services gateway connection."
												}
											]
										},
										"description": "Retieves the download progress percentage and package transfer rate in MBPS.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The Telemetry Manager component is in the RESTORE state.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An error occurred in the remote services backend, or the upgrade package was deleted from the appliance while the download was in progress.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Failed Dependency (WebDAV) (RFC 4918)",
											"code": 424,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The download for the given file ID has not started or the state of the upgrade package for the given ID is DOWNLOADED.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request was successful and returned the requested resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errorMsg\": \"aute velit\",\n \"percentageCompleted\": -57380837.343601376,\n \"transferRate\": -25236216.25520894\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get the list of available upgrade packages.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"remote-upgrade-packages"
									]
								},
								"description": "Retrieves list of remote upgrade packages from the database.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The Telemetry Manager component is in the RESTORE state.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to contact the remote services backend, or an error occurred in the remote services backend.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Failed Dependency (WebDAV) (RFC 4918)",
									"code": 424,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot find a device connection to the ESRS gateway.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request was successful and returned the requested resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"checksum\": \"do officia\",\n   \"description\": \"exercitation nostrud mollit elit\",\n   \"id\": \"veniam Duis in Lorem labore\",\n   \"lastUpdated\": \"2012-11-05T07:56:34.429Z\",\n   \"madeAvailable\": \"1999-02-19T04:48:33.260Z\",\n   \"packageName\": \"aute adipisicing\",\n   \"packageVersion\": \"fugiat dolore aliquip Ut\",\n   \"sizeInBytes\": -23090465.09203711,\n   \"state\": \"FAILED\",\n   \"title\": \"pariatur in\"\n  },\n  {\n   \"checksum\": \"est laboris culpa\",\n   \"description\": \"Lorem velit laborum voluptate\",\n   \"id\": \"ex deserunt\",\n   \"lastUpdated\": \"1953-04-09T10:22:45.016Z\",\n   \"madeAvailable\": \"2011-08-26T17:22:29.884Z\",\n   \"packageName\": \"in voluptate esse\",\n   \"packageVersion\": \"mollit Duis\",\n   \"sizeInBytes\": 30852675.888097942,\n   \"state\": \"AVAILABLE\",\n   \"title\": \"elit\"\n  }\n ],\n \"page\": {\n  \"number\": 57130352,\n  \"queryState\": \"non ullamco\",\n  \"size\": -17374345,\n  \"totalElements\": -17598350,\n  \"totalPages\": 93849460\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "restored-copies",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a restored copy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The restored copy ID."
												}
											]
										},
										"description": "Retrieves a restored copy by the specified ID. The restored copies define which copies of an asset already are restored. Each restored asset corresponds to a restored copy.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the requested restored copy.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"enim nostrud cillum\",\n \"restoreType\": \"TO_PRODUCTION\",\n \"activityId\": \"consectetur nisi\",\n \"completionTime\": \"2015-07-01T16:32:10.903Z\",\n \"copyId\": \"do qui\",\n \"copyIds\": [\n  \"aliqua dolore deserunt velit sed\",\n  \"amet incididunt do exercitation\"\n ],\n \"expirationTime\": \"2002-03-30T21:35:59.998Z\",\n \"id\": \"labore voluptate\",\n \"options\": {\n  \"allowOverwrite\": \"qui\",\n  \"enableDebug\": true,\n  \"fileRelocationOptions\": {\n   \"targetDataFileLocation\": \"nisi ut\",\n   \"targetLogFileLocation\": \"tempor aliquip do dolor\",\n   \"type\": \"ORIGINAL_LOCATION\"\n  },\n  \"forceDatabaseOverwrite\": false,\n  \"performTailLogBackup\": false,\n  \"recoveryState\": \"NO_RECOVERY\",\n  \"restoreOriginalMachineConfig\": true,\n  \"stopAtTime\": \"commodo in non laborum\",\n  \"vcenterId\": \"consequat amet\"\n },\n \"restoreEntireBackupTransaction\": false,\n \"restoredCopiesDetails\": {\n  \"targetCloudInfo\": {\n   \"drType\": \"consequat\",\n   \"networkId\": \"minim deserunt adipisicing sint\",\n   \"securityGroupIds\": [\n    \"quis cillum\",\n    \"proident ad\"\n   ]\n  },\n  \"targetDatabaseInfo\": {\n   \"applicationSystemId\": \"voluptate eu\",\n   \"assetName\": \"cupidatat cillum\",\n   \"hostId\": \"nisi elit\"\n  },\n  \"targetFileSystemInfo\": {\n   \"location\": \"consectetur\",\n   \"conflictStrategy\": \"TO_ALTERNATE\",\n   \"hostId\": \"laboris pariatur\",\n   \"mountUrl\": \"occaecat Excepteur cupidatat\",\n   \"sources\": [\n    \"ad\",\n    \"aliquip Ut pariatur sit\"\n   ]\n  },\n  \"targetK8sInfo\": {\n   \"namespace\": \"fu\",\n   \"overwritePersistentVolumeClaim\": false,\n   \"persistentVolumeClaims\": [\n    {\n     \"alternateStorageClass\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"alternateStorageClass\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"skipNamespaceResources\": false,\n   \"targetInventorySourceId\": \"consequat Excepteur occaecat\"\n  },\n  \"targetNasInfo\": {\n   \"assetId\": \"ut consequat\",\n   \"sources\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  \"targetStorageInfo\": {\n   \"groupName\": \"occaecat ex\",\n   \"targetDetails\": [\n    {\n     \"restoredAssetId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"storageGroupName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"storageSystemId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"restoredAssetId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"storageGroupName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"storageSystemId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"targetHostId\": \"qui do labore\"\n  },\n  \"targetVmInfo\": {\n   \"inventorySourceId\": \"ut ut eu\",\n   \"vmName\": \"ullamco proident qui\",\n   \"dataCenterMoref\": \"veniam ut\",\n   \"clusterMoref\": \"exercitation sed officia\",\n   \"hostMoref\": \"laborum aliqua aute\",\n   \"dataStoreMoref\": \"nisi sint Lorem\",\n   \"credentials\": {\n    \"adminCredentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userCredentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"deleteBackingFile\": false,\n   \"disks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"esxHost\": {\n    \"hostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"folderMoref\": \"proident consectetur commodo\",\n   \"recoverConfig\": true,\n   \"resourcePoolMoref\": \"non ea\",\n   \"restoredVmAsset\": {\n    \"assetRef\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vmRef\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"spbmRestoreDirective\": \"FROM_COPY\",\n   \"tagRestoreDirective\": \"FROM_COPY\",\n   \"vmPowerOn\": false,\n   \"vmReconnectNic\": false\n  }\n },\n \"startTime\": \"2001-06-26T14:33:01.995Z\",\n \"state\": \"WAITING\",\n \"status\": \"SUCCESS\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Extend the expiration time of the Live VM/Instant Access session.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"extendedDay\": 19123420\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies",
												":id",
												"expiration"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The exported copy resource ID."
												}
											]
										},
										"description": "Handles the request to extend, by specifying the number of days, the expiration time of the Live VM/Instant Access session.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": 19123420\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": 19123420\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": 19123420\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": 19123420\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully extend the expiration time.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": 19123420\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskId\": \"ex\"\n}"
										}
									]
								},
								{
									"name": "Unmount the NAS datastore and clean up the VM proxy restore session resource.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies",
												":id",
												"remove"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) "
												}
											]
										},
										"description": "Unmounts the NAS datastore and cleans up the VM proxy restore session resource.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully removed NAS datastore and restored session resource.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskId\": \"ex\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Vmotion a VM from an instant-access restore to permanent storage",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"cillum cu\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"voluptate\",\n            \"diskLabel\": \"eu nulla mollit fugiat\",\n            \"key\": -81852409,\n            \"provisioningType\": \"THICK_EAGER\",\n            \"uuid\": \"sint in non consectetur incididunt\"\n        },\n        {\n            \"dataStoreMoref\": \"elit\",\n            \"diskLabel\": \"amet quis dolor\",\n            \"key\": -26193616,\n            \"provisioningType\": \"THICK_LAZY\",\n            \"uuid\": \"aliquip adipisicing in do\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"cu\",\n    \"targetFolderMoref\": \"Lorem ullamco sint exercitation\",\n    \"targetHostMoref\": \"ut id nisi sunt\",\n    \"targetResourcePoolMoref\": \"Excep\",\n    \"vmMoref\": \"dolore occaeca\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies",
												":id",
												"vmotion"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The restored copy resource ID."
												}
											]
										},
										"description": "vMotions a VM that is deployed as an instant access restore to permanent storage. In an instant access restore, the VM is deployed to an NFS share that is attached to a specified ESX host, cluster, or resource pool. This API call migrates the VM from the temporary NFS share to permanent storage.\n\nThe VM configuration files and VMDK files can be migrated to different datastores.\n\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"temp\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"sint eu\",\n            \"diskLabel\": \"eu\",\n            \"key\": -37655559,\n            \"provisioningType\": \"THICK_EAGER\",\n            \"uuid\": \"nostrud\"\n        },\n        {\n            \"dataStoreMoref\": \"irure dolor\",\n            \"diskLabel\": \"laboris consecte\",\n            \"key\": -87544943,\n            \"provisioningType\": \"THICK_LAZY\",\n            \"uuid\": \"irure cupidatat tempor eu pariatur\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"quis\",\n    \"targetFolderMoref\": \"sed dolor ut laboris qui\",\n    \"targetHostMoref\": \"labore dolor tempor\",\n    \"targetResourcePoolMoref\": \"ut commodo in\",\n    \"vmMoref\": \"in ex voluptat\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully Vmotion the VM files.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"temp\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"sint eu\",\n            \"diskLabel\": \"eu\",\n            \"key\": -37655559,\n            \"provisioningType\": \"THICK_EAGER\",\n            \"uuid\": \"nostrud\"\n        },\n        {\n            \"dataStoreMoref\": \"irure dolor\",\n            \"diskLabel\": \"laboris consecte\",\n            \"key\": -87544943,\n            \"provisioningType\": \"THICK_LAZY\",\n            \"uuid\": \"irure cupidatat tempor eu pariatur\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"quis\",\n    \"targetFolderMoref\": \"sed dolor ut laboris qui\",\n    \"targetHostMoref\": \"labore dolor tempor\",\n    \"targetResourcePoolMoref\": \"ut commodo in\",\n    \"vmMoref\": \"in ex voluptat\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskId\": \"ex\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"temp\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"sint eu\",\n            \"diskLabel\": \"eu\",\n            \"key\": -37655559,\n            \"provisioningType\": \"THICK_EAGER\",\n            \"uuid\": \"nostrud\"\n        },\n        {\n            \"dataStoreMoref\": \"irure dolor\",\n            \"diskLabel\": \"laboris consecte\",\n            \"key\": -87544943,\n            \"provisioningType\": \"THICK_LAZY\",\n            \"uuid\": \"irure cupidatat tempor eu pariatur\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"quis\",\n    \"targetFolderMoref\": \"sed dolor ut laboris qui\",\n    \"targetHostMoref\": \"labore dolor tempor\",\n    \"targetResourcePoolMoref\": \"ut commodo in\",\n    \"vmMoref\": \"in ex voluptat\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"temp\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"sint eu\",\n            \"diskLabel\": \"eu\",\n            \"key\": -37655559,\n            \"provisioningType\": \"THICK_EAGER\",\n            \"uuid\": \"nostrud\"\n        },\n        {\n            \"dataStoreMoref\": \"irure dolor\",\n            \"diskLabel\": \"laboris consecte\",\n            \"key\": -87544943,\n            \"provisioningType\": \"THICK_LAZY\",\n            \"uuid\": \"irure cupidatat tempor eu pariatur\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"quis\",\n    \"targetFolderMoref\": \"sed dolor ut laboris qui\",\n    \"targetHostMoref\": \"labore dolor tempor\",\n    \"targetResourcePoolMoref\": \"ut commodo in\",\n    \"vmMoref\": \"in ex voluptat\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"temp\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"sint eu\",\n            \"diskLabel\": \"eu\",\n            \"key\": -37655559,\n            \"provisioningType\": \"THICK_EAGER\",\n            \"uuid\": \"nostrud\"\n        },\n        {\n            \"dataStoreMoref\": \"irure dolor\",\n            \"diskLabel\": \"laboris consecte\",\n            \"key\": -87544943,\n            \"provisioningType\": \"THICK_LAZY\",\n            \"uuid\": \"irure cupidatat tempor eu pariatur\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"quis\",\n    \"targetFolderMoref\": \"sed dolor ut laboris qui\",\n    \"targetHostMoref\": \"labore dolor tempor\",\n    \"targetResourcePoolMoref\": \"ut commodo in\",\n    \"vmMoref\": \"in ex voluptat\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all restored copies.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restored-copies"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all restored copies by parameters. The restored copies define which copies of an asset are already restored.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available restored copies.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"description\": \"in velit minim ut\",\n   \"restoreType\": \"DIRECT_TO_ESX\",\n   \"activityId\": \"voluptate\",\n   \"completionTime\": \"1949-06-04T08:37:48.744Z\",\n   \"copyId\": \"enim repreh\",\n   \"copyIds\": [\n    \"sed\",\n    \"exercitation fu\"\n   ],\n   \"expirationTime\": \"1963-10-13T01:15:44.478Z\",\n   \"id\": \"ut labo\",\n   \"options\": {\n    \"allowOverwrite\": \"dolore incididunt ipsum ad\",\n    \"enableDebug\": false,\n    \"fileRelocationOptions\": {\n     \"targetDataFileLocation\": \"mo\",\n     \"targetLogFileLocation\": \"labore velit elit commodo\",\n     \"type\": \"ORIGINAL_LOCATION\"\n    },\n    \"forceDatabaseOverwrite\": false,\n    \"performTailLogBackup\": true,\n    \"recoveryState\": \"NO_RECOVERY\",\n    \"restoreOriginalMachineConfig\": false,\n    \"stopAtTime\": \"dolor dolor cillum\",\n    \"vcenterId\": \"velit cillum mollit cupidatat\"\n   },\n   \"restoreEntireBackupTransaction\": false,\n   \"restoredCopiesDetails\": {\n    \"targetCloudInfo\": {\n     \"drType\": \"eu exercitation officia\",\n     \"networkId\": \"et cillum\",\n     \"securityGroupIds\": [\n      \"in\",\n      \"dolore\"\n     ]\n    },\n    \"targetDatabaseInfo\": {\n     \"applicationSystemId\": \"veniam nulla\",\n     \"assetName\": \"ut exercitation in\",\n     \"hostId\": \"ullamco nostr\"\n    },\n    \"targetFileSystemInfo\": {\n     \"location\": \"ea\",\n     \"conflictStrategy\": \"TO_ALTERNATE\",\n     \"hostId\": \"laborum est proident\",\n     \"mountUrl\": \"nisi in enim\",\n     \"sources\": [\n      \"in do\",\n      \"labore\"\n     ]\n    },\n    \"targetK8sInfo\": {\n     \"namespace\": \"pariatur aut\",\n     \"overwritePersistentVolumeClaim\": false,\n     \"persistentVolumeClaims\": [\n      {\n       \"alternateStorageClass\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"alternateStorageClass\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"skipNamespaceResources\": false,\n     \"targetInventorySourceId\": \"commodo Duis\"\n    },\n    \"targetNasInfo\": {\n     \"assetId\": \"aliqua\",\n     \"sources\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    \"targetStorageInfo\": {\n     \"groupName\": \"Duis anim l\",\n     \"targetDetails\": [\n      {\n       \"restoredAssetId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"storageGroupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"storageSystemId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"restoredAssetId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"storageGroupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"storageSystemId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"targetHostId\": \"velit Lorem enim\"\n    },\n    \"targetVmInfo\": {\n     \"inventorySourceId\": \"consequat exercitation\",\n     \"vmName\": \"eiusmod\",\n     \"dataCenterMoref\": \"ut et in\",\n     \"clusterMoref\": \"minim proident quis\",\n     \"hostMoref\": \"nostrud tempor\",\n     \"dataStoreMoref\": \"quis Duis\",\n     \"credentials\": {\n      \"adminCredentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCredentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"deleteBackingFile\": true,\n     \"disks\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"esxHost\": {\n      \"hostName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userPassword\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"folderMoref\": \"sint anim\",\n     \"recoverConfig\": false,\n     \"resourcePoolMoref\": \"cillum magna\",\n     \"restoredVmAsset\": {\n      \"assetRef\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vmRef\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"spbmRestoreDirective\": \"FROM_COPY\",\n     \"tagRestoreDirective\": \"FROM_COPY\",\n     \"vmPowerOn\": true,\n     \"vmReconnectNic\": false\n    }\n   },\n   \"startTime\": \"1979-09-06T07:00:01.700Z\",\n   \"state\": \"MOUNTED\",\n   \"status\": \"PARTIALCANCELLED\"\n  },\n  {\n   \"description\": \"pariatur dolore labore nulla\",\n   \"restoreType\": \"TO_EXPORT\",\n   \"activityId\": \"Lorem Ut velit in anim\",\n   \"completionTime\": \"1984-01-01T09:35:41.143Z\",\n   \"copyId\": \"in eiusmod\",\n   \"copyIds\": [\n    \"nulla\",\n    \"sunt\"\n   ],\n   \"expirationTime\": \"1966-12-12T16:32:50.179Z\",\n   \"id\": \"incididunt ex\",\n   \"options\": {\n    \"allowOverwrite\": \"in fugiat veniam eu cupidatat\",\n    \"enableDebug\": false,\n    \"fileRelocationOptions\": {\n     \"targetDataFileLocation\": \"dolore eu et\",\n     \"targetLogFileLocation\": \"nostrud officia Duis elit dolore\",\n     \"type\": \"DEFAULT_LOCATION\"\n    },\n    \"forceDatabaseOverwrite\": false,\n    \"performTailLogBackup\": false,\n    \"recoveryState\": \"RECOVERY\",\n    \"restoreOriginalMachineConfig\": true,\n    \"stopAtTime\": \"dolore in consequat irure in\",\n    \"vcenterId\": \"voluptate cupidatat elit mollit minim\"\n   },\n   \"restoreEntireBackupTransaction\": false,\n   \"restoredCopiesDetails\": {\n    \"targetCloudInfo\": {\n     \"drType\": \"laborum in enim cupidatat quis\",\n     \"networkId\": \"irure veniam aute reprehenderit\",\n     \"securityGroupIds\": [\n      \"Lorem quis aute\",\n      \"quis pariatur esse fugi\"\n     ]\n    },\n    \"targetDatabaseInfo\": {\n     \"applicationSystemId\": \"consectetur labore\",\n     \"assetName\": \"fugiat ad aliqua laborum\",\n     \"hostId\": \"enim dolor ex\"\n    },\n    \"targetFileSystemInfo\": {\n     \"location\": \"enim deserunt Duis\",\n     \"conflictStrategy\": \"TO_ALTERNATE\",\n     \"hostId\": \"dolore eu magna consequat\",\n     \"mountUrl\": \"sunt eiusmod occae\",\n     \"sources\": [\n      \"eiusmod veniam Excepteur id\",\n      \"ea cillum consectetur\"\n     ]\n    },\n    \"targetK8sInfo\": {\n     \"namespace\": \"do non elit dolore\",\n     \"overwritePersistentVolumeClaim\": true,\n     \"persistentVolumeClaims\": [\n      {\n       \"alternateStorageClass\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"alternateStorageClass\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"skipNamespaceResources\": false,\n     \"targetInventorySourceId\": \"ullamco\"\n    },\n    \"targetNasInfo\": {\n     \"assetId\": \"non quis fugiat ut\",\n     \"sources\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    \"targetStorageInfo\": {\n     \"groupName\": \"consectetur ullamco laboris\",\n     \"targetDetails\": [\n      {\n       \"restoredAssetId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"storageGroupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"storageSystemId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"restoredAssetId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"storageGroupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"storageSystemId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"targetHostId\": \"commodo aliquip\"\n    },\n    \"targetVmInfo\": {\n     \"inventorySourceId\": \"exercitation cupidatat velit Excepteur ea\",\n     \"vmName\": \"nostrud ullamco in\",\n     \"dataCenterMoref\": \"sunt est minim dolore\",\n     \"clusterMoref\": \"lab\",\n     \"hostMoref\": \"id irure fugi\",\n     \"dataStoreMoref\": \"quis\",\n     \"credentials\": {\n      \"adminCredentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCredentialId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"deleteBackingFile\": false,\n     \"disks\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"esxHost\": {\n      \"hostName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userPassword\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"folderMoref\": \"eu sint quis\",\n     \"recoverConfig\": true,\n     \"resourcePoolMoref\": \"dolore laboris veniam occaecat nostru\",\n     \"restoredVmAsset\": {\n      \"assetRef\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vmRef\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"spbmRestoreDirective\": \"OFF\",\n     \"tagRestoreDirective\": \"FROM_COPY\",\n     \"vmPowerOn\": true,\n     \"vmReconnectNic\": false\n    }\n   },\n   \"startTime\": \"1952-12-03T20:10:59.169Z\",\n   \"state\": \"MOUNTED\",\n   \"status\": \"PARTIALCANCELLED\"\n  }\n ],\n \"page\": {\n  \"number\": -26791607,\n  \"queryState\": \"cillum dolor in\",\n  \"size\": 43548043,\n  \"totalElements\": -63854054,\n  \"totalPages\": -17793187\n }\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create a restored copy.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"enim nostrud cillum\",\n    \"restoreType\": \"TO_PRODUCTION\",\n    \"activityId\": \"consectetur nisi\",\n    \"completionTime\": \"2015-07-01T16:32:10.903Z\",\n    \"copyId\": \"do qui\",\n    \"copyIds\": [\n        \"aliqua dolore deserunt velit sed\",\n        \"amet incididunt do exercitation\"\n    ],\n    \"expirationTime\": \"2002-03-30T21:35:59.998Z\",\n    \"id\": \"labore voluptate\",\n    \"options\": {\n        \"allowOverwrite\": \"qui\",\n        \"enableDebug\": true,\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"nisi ut\",\n            \"targetLogFileLocation\": \"tempor aliquip do dolor\",\n            \"type\": \"ORIGINAL_LOCATION\"\n        },\n        \"forceDatabaseOverwrite\": false,\n        \"performTailLogBackup\": false,\n        \"recoveryState\": \"NO_RECOVERY\",\n        \"restoreOriginalMachineConfig\": true,\n        \"stopAtTime\": \"commodo in non laborum\",\n        \"vcenterId\": \"consequat amet\"\n    },\n    \"restoreEntireBackupTransaction\": false,\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"consequat\",\n            \"networkId\": \"minim deserunt adipisicing sint\",\n            \"securityGroupIds\": [\n                \"quis cillum\",\n                \"proident ad\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"voluptate eu\",\n            \"assetName\": \"cupidatat cillum\",\n            \"hostId\": \"nisi elit\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"consectetur\",\n            \"conflictStrategy\": \"TO_ALTERNATE\",\n            \"hostId\": \"laboris pariatur\",\n            \"mountUrl\": \"occaecat Excepteur cupidatat\",\n            \"sources\": [\n                \"ad\",\n                \"aliquip Ut pariatur sit\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"fu\",\n            \"overwritePersistentVolumeClaim\": false,\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"skipNamespaceResources\": false,\n            \"targetInventorySourceId\": \"consequat Excepteur occaecat\"\n        },\n        \"targetNasInfo\": {\n            \"assetId\": \"ut consequat\",\n            \"sources\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"occaecat ex\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"targetHostId\": \"qui do labore\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"ut ut eu\",\n            \"vmName\": \"ullamco proident qui\",\n            \"dataCenterMoref\": \"veniam ut\",\n            \"clusterMoref\": \"exercitation sed officia\",\n            \"hostMoref\": \"laborum aliqua aute\",\n            \"dataStoreMoref\": \"nisi sint Lorem\",\n            \"credentials\": {\n                \"adminCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"deleteBackingFile\": false,\n            \"disks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"folderMoref\": \"proident consectetur commodo\",\n            \"recoverConfig\": true,\n            \"resourcePoolMoref\": \"non ea\",\n            \"restoredVmAsset\": {\n                \"assetRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"spbmRestoreDirective\": \"FROM_COPY\",\n            \"tagRestoreDirective\": \"FROM_COPY\",\n            \"vmPowerOn\": false,\n            \"vmReconnectNic\": false\n        }\n    },\n    \"startTime\": \"2001-06-26T14:33:01.995Z\",\n    \"state\": \"WAITING\",\n    \"status\": \"SUCCESS\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/restored-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restored-copies"
									]
								},
								"description": "Creates a restored copy by request body. The restored copies define which copies of an asset already are restored.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"enim nostrud cillum\",\n    \"restoreType\": \"TO_PRODUCTION\",\n    \"activityId\": \"consectetur nisi\",\n    \"completionTime\": \"2015-07-01T16:32:10.903Z\",\n    \"copyId\": \"do qui\",\n    \"copyIds\": [\n        \"aliqua dolore deserunt velit sed\",\n        \"amet incididunt do exercitation\"\n    ],\n    \"expirationTime\": \"2002-03-30T21:35:59.998Z\",\n    \"id\": \"labore voluptate\",\n    \"options\": {\n        \"allowOverwrite\": \"qui\",\n        \"enableDebug\": true,\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"nisi ut\",\n            \"targetLogFileLocation\": \"tempor aliquip do dolor\",\n            \"type\": \"ORIGINAL_LOCATION\"\n        },\n        \"forceDatabaseOverwrite\": false,\n        \"performTailLogBackup\": false,\n        \"recoveryState\": \"NO_RECOVERY\",\n        \"restoreOriginalMachineConfig\": true,\n        \"stopAtTime\": \"commodo in non laborum\",\n        \"vcenterId\": \"consequat amet\"\n    },\n    \"restoreEntireBackupTransaction\": false,\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"consequat\",\n            \"networkId\": \"minim deserunt adipisicing sint\",\n            \"securityGroupIds\": [\n                \"quis cillum\",\n                \"proident ad\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"voluptate eu\",\n            \"assetName\": \"cupidatat cillum\",\n            \"hostId\": \"nisi elit\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"consectetur\",\n            \"conflictStrategy\": \"TO_ALTERNATE\",\n            \"hostId\": \"laboris pariatur\",\n            \"mountUrl\": \"occaecat Excepteur cupidatat\",\n            \"sources\": [\n                \"ad\",\n                \"aliquip Ut pariatur sit\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"fu\",\n            \"overwritePersistentVolumeClaim\": false,\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"skipNamespaceResources\": false,\n            \"targetInventorySourceId\": \"consequat Excepteur occaecat\"\n        },\n        \"targetNasInfo\": {\n            \"assetId\": \"ut consequat\",\n            \"sources\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"occaecat ex\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"targetHostId\": \"qui do labore\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"ut ut eu\",\n            \"vmName\": \"ullamco proident qui\",\n            \"dataCenterMoref\": \"veniam ut\",\n            \"clusterMoref\": \"exercitation sed officia\",\n            \"hostMoref\": \"laborum aliqua aute\",\n            \"dataStoreMoref\": \"nisi sint Lorem\",\n            \"credentials\": {\n                \"adminCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"deleteBackingFile\": false,\n            \"disks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"folderMoref\": \"proident consectetur commodo\",\n            \"recoverConfig\": true,\n            \"resourcePoolMoref\": \"non ea\",\n            \"restoredVmAsset\": {\n                \"assetRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"spbmRestoreDirective\": \"FROM_COPY\",\n            \"tagRestoreDirective\": \"FROM_COPY\",\n            \"vmPowerOn\": false,\n            \"vmReconnectNic\": false\n        }\n    },\n    \"startTime\": \"2001-06-26T14:33:01.995Z\",\n    \"state\": \"WAITING\",\n    \"status\": \"SUCCESS\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"enim nostrud cillum\",\n \"restoreType\": \"TO_PRODUCTION\",\n \"activityId\": \"consectetur nisi\",\n \"completionTime\": \"2015-07-01T16:32:10.903Z\",\n \"copyId\": \"do qui\",\n \"copyIds\": [\n  \"aliqua dolore deserunt velit sed\",\n  \"amet incididunt do exercitation\"\n ],\n \"expirationTime\": \"2002-03-30T21:35:59.998Z\",\n \"id\": \"labore voluptate\",\n \"options\": {\n  \"allowOverwrite\": \"qui\",\n  \"enableDebug\": true,\n  \"fileRelocationOptions\": {\n   \"targetDataFileLocation\": \"nisi ut\",\n   \"targetLogFileLocation\": \"tempor aliquip do dolor\",\n   \"type\": \"ORIGINAL_LOCATION\"\n  },\n  \"forceDatabaseOverwrite\": false,\n  \"performTailLogBackup\": false,\n  \"recoveryState\": \"NO_RECOVERY\",\n  \"restoreOriginalMachineConfig\": true,\n  \"stopAtTime\": \"commodo in non laborum\",\n  \"vcenterId\": \"consequat amet\"\n },\n \"restoreEntireBackupTransaction\": false,\n \"restoredCopiesDetails\": {\n  \"targetCloudInfo\": {\n   \"drType\": \"consequat\",\n   \"networkId\": \"minim deserunt adipisicing sint\",\n   \"securityGroupIds\": [\n    \"quis cillum\",\n    \"proident ad\"\n   ]\n  },\n  \"targetDatabaseInfo\": {\n   \"applicationSystemId\": \"voluptate eu\",\n   \"assetName\": \"cupidatat cillum\",\n   \"hostId\": \"nisi elit\"\n  },\n  \"targetFileSystemInfo\": {\n   \"location\": \"consectetur\",\n   \"conflictStrategy\": \"TO_ALTERNATE\",\n   \"hostId\": \"laboris pariatur\",\n   \"mountUrl\": \"occaecat Excepteur cupidatat\",\n   \"sources\": [\n    \"ad\",\n    \"aliquip Ut pariatur sit\"\n   ]\n  },\n  \"targetK8sInfo\": {\n   \"namespace\": \"fu\",\n   \"overwritePersistentVolumeClaim\": false,\n   \"persistentVolumeClaims\": [\n    {\n     \"alternateStorageClass\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"alternateStorageClass\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"skipNamespaceResources\": false,\n   \"targetInventorySourceId\": \"consequat Excepteur occaecat\"\n  },\n  \"targetNasInfo\": {\n   \"assetId\": \"ut consequat\",\n   \"sources\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  \"targetStorageInfo\": {\n   \"groupName\": \"occaecat ex\",\n   \"targetDetails\": [\n    {\n     \"restoredAssetId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"storageGroupName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"storageSystemId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"restoredAssetId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"storageGroupName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"storageSystemId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"targetHostId\": \"qui do labore\"\n  },\n  \"targetVmInfo\": {\n   \"inventorySourceId\": \"ut ut eu\",\n   \"vmName\": \"ullamco proident qui\",\n   \"dataCenterMoref\": \"veniam ut\",\n   \"clusterMoref\": \"exercitation sed officia\",\n   \"hostMoref\": \"laborum aliqua aute\",\n   \"dataStoreMoref\": \"nisi sint Lorem\",\n   \"credentials\": {\n    \"adminCredentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userCredentialId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"deleteBackingFile\": false,\n   \"disks\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"esxHost\": {\n    \"hostName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userName\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userPassword\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"folderMoref\": \"proident consectetur commodo\",\n   \"recoverConfig\": true,\n   \"resourcePoolMoref\": \"non ea\",\n   \"restoredVmAsset\": {\n    \"assetRef\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vmRef\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"spbmRestoreDirective\": \"FROM_COPY\",\n   \"tagRestoreDirective\": \"FROM_COPY\",\n   \"vmPowerOn\": false,\n   \"vmReconnectNic\": false\n  }\n },\n \"startTime\": \"2001-06-26T14:33:01.995Z\",\n \"state\": \"WAITING\",\n \"status\": \"SUCCESS\"\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"enim nostrud cillum\",\n    \"restoreType\": \"TO_PRODUCTION\",\n    \"activityId\": \"consectetur nisi\",\n    \"completionTime\": \"2015-07-01T16:32:10.903Z\",\n    \"copyId\": \"do qui\",\n    \"copyIds\": [\n        \"aliqua dolore deserunt velit sed\",\n        \"amet incididunt do exercitation\"\n    ],\n    \"expirationTime\": \"2002-03-30T21:35:59.998Z\",\n    \"id\": \"labore voluptate\",\n    \"options\": {\n        \"allowOverwrite\": \"qui\",\n        \"enableDebug\": true,\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"nisi ut\",\n            \"targetLogFileLocation\": \"tempor aliquip do dolor\",\n            \"type\": \"ORIGINAL_LOCATION\"\n        },\n        \"forceDatabaseOverwrite\": false,\n        \"performTailLogBackup\": false,\n        \"recoveryState\": \"NO_RECOVERY\",\n        \"restoreOriginalMachineConfig\": true,\n        \"stopAtTime\": \"commodo in non laborum\",\n        \"vcenterId\": \"consequat amet\"\n    },\n    \"restoreEntireBackupTransaction\": false,\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"consequat\",\n            \"networkId\": \"minim deserunt adipisicing sint\",\n            \"securityGroupIds\": [\n                \"quis cillum\",\n                \"proident ad\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"voluptate eu\",\n            \"assetName\": \"cupidatat cillum\",\n            \"hostId\": \"nisi elit\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"consectetur\",\n            \"conflictStrategy\": \"TO_ALTERNATE\",\n            \"hostId\": \"laboris pariatur\",\n            \"mountUrl\": \"occaecat Excepteur cupidatat\",\n            \"sources\": [\n                \"ad\",\n                \"aliquip Ut pariatur sit\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"fu\",\n            \"overwritePersistentVolumeClaim\": false,\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"skipNamespaceResources\": false,\n            \"targetInventorySourceId\": \"consequat Excepteur occaecat\"\n        },\n        \"targetNasInfo\": {\n            \"assetId\": \"ut consequat\",\n            \"sources\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"occaecat ex\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"targetHostId\": \"qui do labore\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"ut ut eu\",\n            \"vmName\": \"ullamco proident qui\",\n            \"dataCenterMoref\": \"veniam ut\",\n            \"clusterMoref\": \"exercitation sed officia\",\n            \"hostMoref\": \"laborum aliqua aute\",\n            \"dataStoreMoref\": \"nisi sint Lorem\",\n            \"credentials\": {\n                \"adminCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"deleteBackingFile\": false,\n            \"disks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"folderMoref\": \"proident consectetur commodo\",\n            \"recoverConfig\": true,\n            \"resourcePoolMoref\": \"non ea\",\n            \"restoredVmAsset\": {\n                \"assetRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"spbmRestoreDirective\": \"FROM_COPY\",\n            \"tagRestoreDirective\": \"FROM_COPY\",\n            \"vmPowerOn\": false,\n            \"vmReconnectNic\": false\n        }\n    },\n    \"startTime\": \"2001-06-26T14:33:01.995Z\",\n    \"state\": \"WAITING\",\n    \"status\": \"SUCCESS\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"enim nostrud cillum\",\n    \"restoreType\": \"TO_PRODUCTION\",\n    \"activityId\": \"consectetur nisi\",\n    \"completionTime\": \"2015-07-01T16:32:10.903Z\",\n    \"copyId\": \"do qui\",\n    \"copyIds\": [\n        \"aliqua dolore deserunt velit sed\",\n        \"amet incididunt do exercitation\"\n    ],\n    \"expirationTime\": \"2002-03-30T21:35:59.998Z\",\n    \"id\": \"labore voluptate\",\n    \"options\": {\n        \"allowOverwrite\": \"qui\",\n        \"enableDebug\": true,\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"nisi ut\",\n            \"targetLogFileLocation\": \"tempor aliquip do dolor\",\n            \"type\": \"ORIGINAL_LOCATION\"\n        },\n        \"forceDatabaseOverwrite\": false,\n        \"performTailLogBackup\": false,\n        \"recoveryState\": \"NO_RECOVERY\",\n        \"restoreOriginalMachineConfig\": true,\n        \"stopAtTime\": \"commodo in non laborum\",\n        \"vcenterId\": \"consequat amet\"\n    },\n    \"restoreEntireBackupTransaction\": false,\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"consequat\",\n            \"networkId\": \"minim deserunt adipisicing sint\",\n            \"securityGroupIds\": [\n                \"quis cillum\",\n                \"proident ad\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"voluptate eu\",\n            \"assetName\": \"cupidatat cillum\",\n            \"hostId\": \"nisi elit\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"consectetur\",\n            \"conflictStrategy\": \"TO_ALTERNATE\",\n            \"hostId\": \"laboris pariatur\",\n            \"mountUrl\": \"occaecat Excepteur cupidatat\",\n            \"sources\": [\n                \"ad\",\n                \"aliquip Ut pariatur sit\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"fu\",\n            \"overwritePersistentVolumeClaim\": false,\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"skipNamespaceResources\": false,\n            \"targetInventorySourceId\": \"consequat Excepteur occaecat\"\n        },\n        \"targetNasInfo\": {\n            \"assetId\": \"ut consequat\",\n            \"sources\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"occaecat ex\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"targetHostId\": \"qui do labore\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"ut ut eu\",\n            \"vmName\": \"ullamco proident qui\",\n            \"dataCenterMoref\": \"veniam ut\",\n            \"clusterMoref\": \"exercitation sed officia\",\n            \"hostMoref\": \"laborum aliqua aute\",\n            \"dataStoreMoref\": \"nisi sint Lorem\",\n            \"credentials\": {\n                \"adminCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"deleteBackingFile\": false,\n            \"disks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"folderMoref\": \"proident consectetur commodo\",\n            \"recoverConfig\": true,\n            \"resourcePoolMoref\": \"non ea\",\n            \"restoredVmAsset\": {\n                \"assetRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"spbmRestoreDirective\": \"FROM_COPY\",\n            \"tagRestoreDirective\": \"FROM_COPY\",\n            \"vmPowerOn\": false,\n            \"vmReconnectNic\": false\n        }\n    },\n    \"startTime\": \"2001-06-26T14:33:01.995Z\",\n    \"state\": \"WAITING\",\n    \"status\": \"SUCCESS\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"enim nostrud cillum\",\n    \"restoreType\": \"TO_PRODUCTION\",\n    \"activityId\": \"consectetur nisi\",\n    \"completionTime\": \"2015-07-01T16:32:10.903Z\",\n    \"copyId\": \"do qui\",\n    \"copyIds\": [\n        \"aliqua dolore deserunt velit sed\",\n        \"amet incididunt do exercitation\"\n    ],\n    \"expirationTime\": \"2002-03-30T21:35:59.998Z\",\n    \"id\": \"labore voluptate\",\n    \"options\": {\n        \"allowOverwrite\": \"qui\",\n        \"enableDebug\": true,\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"nisi ut\",\n            \"targetLogFileLocation\": \"tempor aliquip do dolor\",\n            \"type\": \"ORIGINAL_LOCATION\"\n        },\n        \"forceDatabaseOverwrite\": false,\n        \"performTailLogBackup\": false,\n        \"recoveryState\": \"NO_RECOVERY\",\n        \"restoreOriginalMachineConfig\": true,\n        \"stopAtTime\": \"commodo in non laborum\",\n        \"vcenterId\": \"consequat amet\"\n    },\n    \"restoreEntireBackupTransaction\": false,\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"consequat\",\n            \"networkId\": \"minim deserunt adipisicing sint\",\n            \"securityGroupIds\": [\n                \"quis cillum\",\n                \"proident ad\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"voluptate eu\",\n            \"assetName\": \"cupidatat cillum\",\n            \"hostId\": \"nisi elit\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"consectetur\",\n            \"conflictStrategy\": \"TO_ALTERNATE\",\n            \"hostId\": \"laboris pariatur\",\n            \"mountUrl\": \"occaecat Excepteur cupidatat\",\n            \"sources\": [\n                \"ad\",\n                \"aliquip Ut pariatur sit\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"fu\",\n            \"overwritePersistentVolumeClaim\": false,\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"skipNamespaceResources\": false,\n            \"targetInventorySourceId\": \"consequat Excepteur occaecat\"\n        },\n        \"targetNasInfo\": {\n            \"assetId\": \"ut consequat\",\n            \"sources\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"occaecat ex\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"targetHostId\": \"qui do labore\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"ut ut eu\",\n            \"vmName\": \"ullamco proident qui\",\n            \"dataCenterMoref\": \"veniam ut\",\n            \"clusterMoref\": \"exercitation sed officia\",\n            \"hostMoref\": \"laborum aliqua aute\",\n            \"dataStoreMoref\": \"nisi sint Lorem\",\n            \"credentials\": {\n                \"adminCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"deleteBackingFile\": false,\n            \"disks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"folderMoref\": \"proident consectetur commodo\",\n            \"recoverConfig\": true,\n            \"resourcePoolMoref\": \"non ea\",\n            \"restoredVmAsset\": {\n                \"assetRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"spbmRestoreDirective\": \"FROM_COPY\",\n            \"tagRestoreDirective\": \"FROM_COPY\",\n            \"vmPowerOn\": false,\n            \"vmReconnectNic\": false\n        }\n    },\n    \"startTime\": \"2001-06-26T14:33:01.995Z\",\n    \"state\": \"WAITING\",\n    \"status\": \"SUCCESS\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"enim nostrud cillum\",\n    \"restoreType\": \"TO_PRODUCTION\",\n    \"activityId\": \"consectetur nisi\",\n    \"completionTime\": \"2015-07-01T16:32:10.903Z\",\n    \"copyId\": \"do qui\",\n    \"copyIds\": [\n        \"aliqua dolore deserunt velit sed\",\n        \"amet incididunt do exercitation\"\n    ],\n    \"expirationTime\": \"2002-03-30T21:35:59.998Z\",\n    \"id\": \"labore voluptate\",\n    \"options\": {\n        \"allowOverwrite\": \"qui\",\n        \"enableDebug\": true,\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"nisi ut\",\n            \"targetLogFileLocation\": \"tempor aliquip do dolor\",\n            \"type\": \"ORIGINAL_LOCATION\"\n        },\n        \"forceDatabaseOverwrite\": false,\n        \"performTailLogBackup\": false,\n        \"recoveryState\": \"NO_RECOVERY\",\n        \"restoreOriginalMachineConfig\": true,\n        \"stopAtTime\": \"commodo in non laborum\",\n        \"vcenterId\": \"consequat amet\"\n    },\n    \"restoreEntireBackupTransaction\": false,\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"consequat\",\n            \"networkId\": \"minim deserunt adipisicing sint\",\n            \"securityGroupIds\": [\n                \"quis cillum\",\n                \"proident ad\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"voluptate eu\",\n            \"assetName\": \"cupidatat cillum\",\n            \"hostId\": \"nisi elit\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"consectetur\",\n            \"conflictStrategy\": \"TO_ALTERNATE\",\n            \"hostId\": \"laboris pariatur\",\n            \"mountUrl\": \"occaecat Excepteur cupidatat\",\n            \"sources\": [\n                \"ad\",\n                \"aliquip Ut pariatur sit\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"fu\",\n            \"overwritePersistentVolumeClaim\": false,\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"alternateStorageClass\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"skipNamespaceResources\": false,\n            \"targetInventorySourceId\": \"consequat Excepteur occaecat\"\n        },\n        \"targetNasInfo\": {\n            \"assetId\": \"ut consequat\",\n            \"sources\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"occaecat ex\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"restoredAssetId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageGroupName\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"storageSystemId\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ],\n            \"targetHostId\": \"qui do labore\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"ut ut eu\",\n            \"vmName\": \"ullamco proident qui\",\n            \"dataCenterMoref\": \"veniam ut\",\n            \"clusterMoref\": \"exercitation sed officia\",\n            \"hostMoref\": \"laborum aliqua aute\",\n            \"dataStoreMoref\": \"nisi sint Lorem\",\n            \"credentials\": {\n                \"adminCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userCredentialId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"deleteBackingFile\": false,\n            \"disks\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userName\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"userPassword\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"folderMoref\": \"proident consectetur commodo\",\n            \"recoverConfig\": true,\n            \"resourcePoolMoref\": \"non ea\",\n            \"restoredVmAsset\": {\n                \"assetRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"vmRef\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"spbmRestoreDirective\": \"FROM_COPY\",\n            \"tagRestoreDirective\": \"FROM_COPY\",\n            \"vmPowerOn\": false,\n            \"vmReconnectNic\": false\n        }\n    },\n    \"startTime\": \"2001-06-26T14:33:01.995Z\",\n    \"state\": \"WAITING\",\n    \"status\": \"SUCCESS\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "roles",
					"item": [
						{
							"name": "Get all roles.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves the list of all the assignable system roles and their descriptions. This list contains information about the role privileges.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the list of roles.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"description\": \"magna Ut officia labor\",\n   \"hiddenRole\": false,\n   \"id\": \"Ut ea anim mollit\",\n   \"name\": \"n n \",\n   \"privilegeList\": [\n    {\n     \"category\": \"dolor Duis sint\",\n     \"description\": \"dolore incididunt fugiat consectetur\",\n     \"name\": \"qui cupidatat sit deserunt\"\n    },\n    {\n     \"category\": \"esse ad dolore\",\n     \"description\": \"consequat culpa eiusmod aliqua\",\n     \"name\": \"anim officia aute\"\n    }\n   ],\n   \"systemRole\": true,\n   \"transferable\": true\n  },\n  {\n   \"description\": \"sed culpa p\",\n   \"hiddenRole\": true,\n   \"id\": \"sunt reprehenderit ullamco et ipsum\",\n   \"name\": \"Nt77\",\n   \"privilegeList\": [\n    {\n     \"category\": \"enim mollit labore Ut\",\n     \"description\": \"occaecat deserunt dolore sed\",\n     \"name\": \"ex ut aliqua\"\n    },\n    {\n     \"category\": \"sed est adipisicing\",\n     \"description\": \"dolore\",\n     \"name\": \"elit lab\"\n    }\n   ],\n   \"systemRole\": false,\n   \"transferable\": true\n  }\n ],\n \"page\": {\n  \"number\": 55773321,\n  \"queryState\": \"mag\",\n  \"size\": 38893000,\n  \"totalElements\": -6930954,\n  \"totalPages\": 52020378\n }\n}"
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a role.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) Role ID."
										}
									]
								},
								"description": "Retrieves a role by ID. The role information contains the role description and role privileges. Each local user is assigned a role.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the specified role.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"Duis amet esse qui in\",\n \"hiddenRole\": true,\n \"id\": \"aliquip in anim incididunt\",\n \"name\": \"gKxP\",\n \"privilegeList\": [\n  {\n   \"category\": \"tempor ipsum\",\n   \"description\": \"ad\",\n   \"name\": \"voluptate laborum\"\n  },\n  {\n   \"category\": \"et occaecat ut cupidatat\",\n   \"description\": \"veniam Ut quis occaecat\",\n   \"name\": \"nostrud exercitation irure\"\n  }\n ],\n \"systemRole\": true,\n \"transferable\": true\n}"
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The specified role was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "search-clusters",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "nodes",
									"item": [
										{
											"name": "{node Id}",
											"item": [
												{
													"name": "Remove search cluster node.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes",
																":nodeId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster."
																},
																{
																	"key": "nodeId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster node to be removed."
																}
															]
														},
														"description": "Removes a search cluster node.\n> This endpoint supports execution by the following roles: admin\n"
													},
													"response": [
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"hostName\": \"Ut aliquip aliqua\",\n \"nodeType\": \"veniam incididunt sit p\",\n \"inventorySourceId\": \"nostrud magna in Lorem est\",\n \"deploymentConfig\": {\n  \"fqdn\": \"incididunt\",\n  \"vmName\": \"amet sit\",\n  \"ipAddress\": \"voluptate veniam\",\n  \"dns\": \"dolor esse ut tempor\",\n  \"gateway\": \"ipsum Duis magna veniam\",\n  \"netMask\": \"dolor elit deserunt\",\n  \"networkMoref\": \"ad\",\n  \"ipProtocol\": \"dolor anim venia\",\n  \"ovafile\": \"enim laboris\",\n  \"location\": {\n   \"datastoreMoref\": \"nostrud\",\n   \"clusterMoref\": \"in\",\n   \"folderMoref\": \"ullamc\",\n   \"hostMoref\": \"ad amet\",\n   \"resourcePoolMoref\": \"aliqua est\"\n  },\n  \"additionalVMNetworks\": [\n   {\n    \"fqdn\": \"ad Excepteur fugiat ex\",\n    \"gateway\": \"esse occaecat magna in\",\n    \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n    \"ipAddress\": \"consectetur sint cillum\",\n    \"ipProtocol\": \"IPv4\",\n    \"macAddress\": \"culpa qui\",\n    \"multiVlanEnabled\": false,\n    \"netMask\": \"non ut o\",\n    \"networkMoref\": \"consectetur in est sunt\",\n    \"vlans\": [\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"fqdn\": \"fugiat sit ea sed\",\n    \"gateway\": \"ullamco eiusmod voluptat\",\n    \"interfaceName\": \"sint exercitation\",\n    \"ipAddress\": \"est aliquip\",\n    \"ipProtocol\": \"IPv6\",\n    \"macAddress\": \"ali\",\n    \"multiVlanEnabled\": false,\n    \"netMask\": \"laboris sit sed dolor\",\n    \"networkMoref\": \"cillum est\",\n    \"vlans\": [\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"multiVlanEnabled\": true,\n  \"timeZone\": \"sunt eu aliqua\",\n  \"vlans\": [\n   {\n    \"gateway\": \"enim voluptate\",\n    \"ipAddress\": \"adipisicing eiusmod\",\n    \"mtu\": 10981990,\n    \"netmask\": \"fugiat occaecat irure\",\n    \"routes\": [\n     {\n      \"gateway\": \"sint Excepteur culpa\",\n      \"netmask\": \"aliqua ut\",\n      \"source\": \"officia nisi velit ipsum\",\n      \"type\": \"fugiat adipisicing et\"\n     },\n     {\n      \"gateway\": \"in elit dolor\",\n      \"netmask\": \"ea\",\n      \"source\": \"aute tempor ut incididunt\",\n      \"type\": \"cons\"\n     }\n    ],\n    \"vlanId\": -80543793\n   },\n   {\n    \"gateway\": \"consectetur consequat Excepteur\",\n    \"ipAddress\": \"labore velit ullamco\",\n    \"mtu\": 23934595,\n    \"netmask\": \"ad dolore id magna\",\n    \"routes\": [\n     {\n      \"gateway\": \"fugiat Ut dolore dolor\",\n      \"netmask\": \"officia laborum Ut\",\n      \"source\": \"mollit minim incididunt\",\n      \"type\": \"sed dolor Duis adipisicing\"\n     },\n     {\n      \"gateway\": \"veniam reprehenderit\",\n      \"netmask\": \"cillum\",\n      \"source\": \"irure nostrud\",\n      \"type\": \"tempor rep\"\n     }\n    ],\n    \"vlanId\": -49218318\n   }\n  ]\n },\n \"adminCredentials\": {\n  \"id\": \"aute sint ut fugiat\"\n },\n \"id\": \"eu culpa incididunt\",\n \"instanceUuid\": \"cillum velit amet anim occaecat\",\n \"rootCredentials\": {\n  \"id\": \"id sint consectetur consequat sunt\"\n },\n \"status\": {\n  \"aliases\": [\n   \"dolor enim amet\",\n   \"aliqua eiusmod velit qui commodo\"\n  ],\n  \"deployed\": false,\n  \"deployedTime\": \"occaecat\",\n  \"hostedComputeResource\": \"ea\",\n  \"lastCheckedTime\": \"sit cupidatat veniam\",\n  \"nodeStats\": {\n   \"diskCapacity\": -75786700,\n   \"diskUsage\": -60195455\n  },\n  \"nodeStatus\": \"Poweredoff\",\n  \"nodeStatusDetail\": \"in anim dolor\",\n  \"powerState\": \"fugiat cillum\",\n  \"vcenterName\": \"est Ut nulla voluptate\",\n  \"version\": \"laboris Excepteur\"\n },\n \"vmMoref\": \"id veniam aute Duis\"\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														}
													]
												},
												{
													"name": "Get search cluster node by ID.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes",
																":nodeId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster node."
																},
																{
																	"key": "nodeId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster node."
																}
															]
														},
														"description": "Retrieves a search cluster node by its ID.\n> This endpoint supports execution by the following roles: admin\n"
													},
													"response": [
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Successfully returned the search cluster node.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"hostName\": \"Ut aliquip aliqua\",\n \"nodeType\": \"veniam incididunt sit p\",\n \"inventorySourceId\": \"nostrud magna in Lorem est\",\n \"deploymentConfig\": {\n  \"fqdn\": \"incididunt\",\n  \"vmName\": \"amet sit\",\n  \"ipAddress\": \"voluptate veniam\",\n  \"dns\": \"dolor esse ut tempor\",\n  \"gateway\": \"ipsum Duis magna veniam\",\n  \"netMask\": \"dolor elit deserunt\",\n  \"networkMoref\": \"ad\",\n  \"ipProtocol\": \"dolor anim venia\",\n  \"ovafile\": \"enim laboris\",\n  \"location\": {\n   \"datastoreMoref\": \"nostrud\",\n   \"clusterMoref\": \"in\",\n   \"folderMoref\": \"ullamc\",\n   \"hostMoref\": \"ad amet\",\n   \"resourcePoolMoref\": \"aliqua est\"\n  },\n  \"additionalVMNetworks\": [\n   {\n    \"fqdn\": \"ad Excepteur fugiat ex\",\n    \"gateway\": \"esse occaecat magna in\",\n    \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n    \"ipAddress\": \"consectetur sint cillum\",\n    \"ipProtocol\": \"IPv4\",\n    \"macAddress\": \"culpa qui\",\n    \"multiVlanEnabled\": false,\n    \"netMask\": \"non ut o\",\n    \"networkMoref\": \"consectetur in est sunt\",\n    \"vlans\": [\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"fqdn\": \"fugiat sit ea sed\",\n    \"gateway\": \"ullamco eiusmod voluptat\",\n    \"interfaceName\": \"sint exercitation\",\n    \"ipAddress\": \"est aliquip\",\n    \"ipProtocol\": \"IPv6\",\n    \"macAddress\": \"ali\",\n    \"multiVlanEnabled\": false,\n    \"netMask\": \"laboris sit sed dolor\",\n    \"networkMoref\": \"cillum est\",\n    \"vlans\": [\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"multiVlanEnabled\": true,\n  \"timeZone\": \"sunt eu aliqua\",\n  \"vlans\": [\n   {\n    \"gateway\": \"enim voluptate\",\n    \"ipAddress\": \"adipisicing eiusmod\",\n    \"mtu\": 10981990,\n    \"netmask\": \"fugiat occaecat irure\",\n    \"routes\": [\n     {\n      \"gateway\": \"sint Excepteur culpa\",\n      \"netmask\": \"aliqua ut\",\n      \"source\": \"officia nisi velit ipsum\",\n      \"type\": \"fugiat adipisicing et\"\n     },\n     {\n      \"gateway\": \"in elit dolor\",\n      \"netmask\": \"ea\",\n      \"source\": \"aute tempor ut incididunt\",\n      \"type\": \"cons\"\n     }\n    ],\n    \"vlanId\": -80543793\n   },\n   {\n    \"gateway\": \"consectetur consequat Excepteur\",\n    \"ipAddress\": \"labore velit ullamco\",\n    \"mtu\": 23934595,\n    \"netmask\": \"ad dolore id magna\",\n    \"routes\": [\n     {\n      \"gateway\": \"fugiat Ut dolore dolor\",\n      \"netmask\": \"officia laborum Ut\",\n      \"source\": \"mollit minim incididunt\",\n      \"type\": \"sed dolor Duis adipisicing\"\n     },\n     {\n      \"gateway\": \"veniam reprehenderit\",\n      \"netmask\": \"cillum\",\n      \"source\": \"irure nostrud\",\n      \"type\": \"tempor rep\"\n     }\n    ],\n    \"vlanId\": -49218318\n   }\n  ]\n },\n \"adminCredentials\": {\n  \"id\": \"aute sint ut fugiat\"\n },\n \"id\": \"eu culpa incididunt\",\n \"instanceUuid\": \"cillum velit amet anim occaecat\",\n \"rootCredentials\": {\n  \"id\": \"id sint consectetur consequat sunt\"\n },\n \"status\": {\n  \"aliases\": [\n   \"dolor enim amet\",\n   \"aliqua eiusmod velit qui commodo\"\n  ],\n  \"deployed\": false,\n  \"deployedTime\": \"occaecat\",\n  \"hostedComputeResource\": \"ea\",\n  \"lastCheckedTime\": \"sit cupidatat veniam\",\n  \"nodeStats\": {\n   \"diskCapacity\": -75786700,\n   \"diskUsage\": -60195455\n  },\n  \"nodeStatus\": \"Poweredoff\",\n  \"nodeStatusDetail\": \"in anim dolor\",\n  \"powerState\": \"fugiat cillum\",\n  \"vcenterName\": \"est Ut nulla voluptate\",\n  \"version\": \"laboris Excepteur\"\n },\n \"vmMoref\": \"id veniam aute Duis\"\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														}
													]
												},
												{
													"name": "Manage search cluster node.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"nodeId\": \"ullamco id minim consectetur\",\n    \"operation\": \"DECOMMISSION\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes",
																":nodeId",
																"management"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster."
																},
																{
																	"key": "nodeId",
																	"value": "aute ut id cillum aliqua",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster node to be managed."
																}
															]
														},
														"description": "Manages the search cluster node.\n> This endpoint supports execution by the following roles: admin\n"
													},
													"response": [
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"ullamco id minim consectetur\",\n    \"operation\": \"DECOMMISSION\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"nodeId\": \"ullamco id minim consectetur\",\n \"operation\": \"DECOMMISSION\"\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"ullamco id minim consectetur\",\n    \"operation\": \"DECOMMISSION\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"ullamco id minim consectetur\",\n    \"operation\": \"DECOMMISSION\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"ullamco id minim consectetur\",\n    \"operation\": \"DECOMMISSION\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "Successful operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"ullamco id minim consectetur\",\n    \"operation\": \"DECOMMISSION\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"nodeId\": \"ullamco id minim consectetur\",\n \"operation\": \"DECOMMISSION\"\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"ullamco id minim consectetur\",\n    \"operation\": \"DECOMMISSION\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"ullamco id minim consectetur\",\n    \"operation\": \"DECOMMISSION\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get all search cluster nodes.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"nodes"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "pageSize",
															"value": "100",
															"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "filter",
															"value": "aute ut id cillum aliqua",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														},
														{
															"key": "orderby",
															"value": "aute ut id cillum aliqua",
															"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The ID of the search cluster."
														}
													]
												},
												"description": "Retrieves all search cluster nodes.\n> This endpoint supports execution by the following roles: admin\n"
											},
											"response": [
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successfully returned available nodes.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"hostName\": \"cupidatat nulla aliquip Lorem\",\n  \"nodeType\": \"exercitation Excepteur Lorem reprehenderit\",\n  \"inventorySourceId\": \"deserunt officia ipsum occaecat\",\n  \"deploymentConfig\": {\n   \"fqdn\": \"ex\",\n   \"vmName\": \"occaecat\",\n   \"ipAddress\": \"nostrud\",\n   \"dns\": \"ipsum\",\n   \"gateway\": \"proident sit ut\",\n   \"netMask\": \"irure dolor in ipsum sed\",\n   \"networkMoref\": \"commodo laboris est\",\n   \"ipProtocol\": \"proident\",\n   \"ovafile\": \"ea\",\n   \"location\": {\n    \"datastoreMoref\": \"consequat voluptate nulla sed irure\",\n    \"clusterMoref\": \"sint anim in ullamco\",\n    \"folderMoref\": \"id anim sunt\",\n    \"hostMoref\": \"ex aliquip irure dolor\",\n    \"resourcePoolMoref\": \"ullamco id enim\"\n   },\n   \"additionalVMNetworks\": [\n    {\n     \"fqdn\": \"anim labore id minim\",\n     \"gateway\": \"dolor est id\",\n     \"interfaceName\": \"magna est\",\n     \"ipAddress\": \"sed in culpa minim\",\n     \"ipProtocol\": \"IPv6\",\n     \"macAddress\": \"ut dolor Lorem enim irure\",\n     \"multiVlanEnabled\": true,\n     \"netMask\": \"commodo in\",\n     \"networkMoref\": \"voluptate laborum nostrud\",\n     \"vlans\": [\n      {\n       \"gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"vlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"vlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    },\n    {\n     \"fqdn\": \"in culpa laborum officia\",\n     \"gateway\": \"aliqua nisi laboris\",\n     \"interfaceName\": \"laboris nostrud commodo id Duis\",\n     \"ipAddress\": \"dolor cillum Excepteur nisi\",\n     \"ipProtocol\": \"IPv4\",\n     \"macAddress\": \"ea\",\n     \"multiVlanEnabled\": false,\n     \"netMask\": \"ut dolor proident amet qui\",\n     \"networkMoref\": \"exercitation id enim\",\n     \"vlans\": [\n      {\n       \"gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"vlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"vlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    }\n   ],\n   \"multiVlanEnabled\": true,\n   \"timeZone\": \"est incididunt\",\n   \"vlans\": [\n    {\n     \"gateway\": \"aliqua\",\n     \"ipAddress\": \"sit non\",\n     \"mtu\": -75997300,\n     \"netmask\": \"sunt enim magna consequat tempor\",\n     \"routes\": [\n      {\n       \"gateway\": \"ex est do\",\n       \"netmask\": \"veniam laboris qui min\",\n       \"source\": \"sint nisi\",\n       \"type\": \"enim Lorem labore consectetur qui\"\n      },\n      {\n       \"gateway\": \"Ut\",\n       \"netmask\": \"dolor sit exercitation\",\n       \"source\": \"tempor\",\n       \"type\": \"in esse\"\n      }\n     ],\n     \"vlanId\": -35534991\n    },\n    {\n     \"gateway\": \"officia magna al\",\n     \"ipAddress\": \"voluptate officia m\",\n     \"mtu\": 69903201,\n     \"netmask\": \"dolor laboris nulla\",\n     \"routes\": [\n      {\n       \"gateway\": \"eu commodo adipisicing ut\",\n       \"netmask\": \"nostrud in ad laboris\",\n       \"source\": \"sunt in laborum amet\",\n       \"type\": \"dolor\"\n      },\n      {\n       \"gateway\": \"labore deserunt in ad ullamco\",\n       \"netmask\": \"exercitation cupidatat ullamco sint\",\n       \"source\": \"in consectetur\",\n       \"type\": \"ad consectetur\"\n      }\n     ],\n     \"vlanId\": 43249208\n    }\n   ]\n  },\n  \"adminCredentials\": {\n   \"id\": \"ex magna\"\n  },\n  \"id\": \"in consequat dolore nostrud sunt\",\n  \"instanceUuid\": \"consequat in\",\n  \"rootCredentials\": {\n   \"id\": \"aute minim\"\n  },\n  \"status\": {\n   \"aliases\": [\n    \"vol\",\n    \"laborum fugiat adipisicing\"\n   ],\n   \"deployed\": false,\n   \"deployedTime\": \"nisi proident veniam\",\n   \"hostedComputeResource\": \"fugiat sit\",\n   \"lastCheckedTime\": \"non Excepteur occaecat sit dolor\",\n   \"nodeStats\": {\n    \"diskCapacity\": 37227141,\n    \"diskUsage\": -94328804\n   },\n   \"nodeStatus\": \"Registered\",\n   \"nodeStatusDetail\": \"ipsum occaecat\",\n   \"powerState\": \"in\",\n   \"vcenterName\": \"dolor\",\n   \"version\": \"sit nostrud enim ut reprehenderit\"\n  },\n  \"vmMoref\": \"aliqua in exercitation\"\n },\n {\n  \"hostName\": \"non incididunt deserunt mollit culpa\",\n  \"nodeType\": \"adipisicing consectetur velit veniam culpa\",\n  \"inventorySourceId\": \"amet reprehenderit adipisicing pariatur\",\n  \"deploymentConfig\": {\n   \"fqdn\": \"irure eu deserunt \",\n   \"vmName\": \"exercitation Excepteur\",\n   \"ipAddress\": \"Ut ut in\",\n   \"dns\": \"ipsum consequat officia commodo\",\n   \"gateway\": \"minim et\",\n   \"netMask\": \"consectetur pariatur esse\",\n   \"networkMoref\": \"in\",\n   \"ipProtocol\": \"laboris sit\",\n   \"ovafile\": \"sed eiusmod qu\",\n   \"location\": {\n    \"datastoreMoref\": \"ut incididunt tempor pro\",\n    \"clusterMoref\": \"sint elit in et\",\n    \"folderMoref\": \"ex non\",\n    \"hostMoref\": \"in elit laboris\",\n    \"resourcePoolMoref\": \"velit ad voluptate consequat\"\n   },\n   \"additionalVMNetworks\": [\n    {\n     \"fqdn\": \"enim in qui proident deserunt\",\n     \"gateway\": \"ut Ut sint\",\n     \"interfaceName\": \"do et exercitation aliqua\",\n     \"ipAddress\": \"nostrud in\",\n     \"ipProtocol\": \"IPv6\",\n     \"macAddress\": \"commodo\",\n     \"multiVlanEnabled\": false,\n     \"netMask\": \"velit Excepteur\",\n     \"networkMoref\": \"anim Lorem non\",\n     \"vlans\": [\n      {\n       \"gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"vlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"vlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    },\n    {\n     \"fqdn\": \"do proident\",\n     \"gateway\": \"dolore\",\n     \"interfaceName\": \"aliquip E\",\n     \"ipAddress\": \"irure mollit\",\n     \"ipProtocol\": \"IPv6\",\n     \"macAddress\": \"in est esse m\",\n     \"multiVlanEnabled\": false,\n     \"netMask\": \"deserunt aliqua voluptate sint\",\n     \"networkMoref\": \"incididunt nisi quis\",\n     \"vlans\": [\n      {\n       \"gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"vlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"gateway\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"mtu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"netmask\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"routes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"vlanId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    }\n   ],\n   \"multiVlanEnabled\": true,\n   \"timeZone\": \"in esse labore\",\n   \"vlans\": [\n    {\n     \"gateway\": \"sunt incidid\",\n     \"ipAddress\": \"sunt\",\n     \"mtu\": -36556745,\n     \"netmask\": \"ullamco dolor\",\n     \"routes\": [\n      {\n       \"gateway\": \"ea do fugiat esse Lorem\",\n       \"netmask\": \"irure Ut\",\n       \"source\": \"Excepteur Ut veniam fugiat dolore\",\n       \"type\": \"aute Duis\"\n      },\n      {\n       \"gateway\": \"exercitation nisi fugiat\",\n       \"netmask\": \"aliqua sit ut et\",\n       \"source\": \"ipsum velit\",\n       \"type\": \"adipisicing esse eu\"\n      }\n     ],\n     \"vlanId\": 57525255\n    },\n    {\n     \"gateway\": \"ea eiusmod sit\",\n     \"ipAddress\": \"non\",\n     \"mtu\": -59145212,\n     \"netmask\": \"cupidatat\",\n     \"routes\": [\n      {\n       \"gateway\": \"in ullamco et adi\",\n       \"netmask\": \"sit nisi\",\n       \"source\": \"culpa non\",\n       \"type\": \"esse qui dolore occaecat culpa\"\n      },\n      {\n       \"gateway\": \"labore sunt\",\n       \"netmask\": \"consequat\",\n       \"source\": \"aliqua mollit\",\n       \"type\": \"eu velit cupidatat Lorem\"\n      }\n     ],\n     \"vlanId\": -31736591\n    }\n   ]\n  },\n  \"adminCredentials\": {\n   \"id\": \"incidid\"\n  },\n  \"id\": \"nulla pariatur velit elit\",\n  \"instanceUuid\": \"nulla aute\",\n  \"rootCredentials\": {\n   \"id\": \"non ipsum tempor adipisicing\"\n  },\n  \"status\": {\n   \"aliases\": [\n    \"consequat esse ex elit\",\n    \"mollit non cillum sunt nostrud\"\n   ],\n   \"deployed\": false,\n   \"deployedTime\": \"consequat\",\n   \"hostedComputeResource\": \"veniam pariatur nisi exercitation in\",\n   \"lastCheckedTime\": \"sunt Ut quis ullamco qui\",\n   \"nodeStats\": {\n    \"diskCapacity\": -27617157,\n    \"diskUsage\": 89416479\n   },\n   \"nodeStatus\": \"DeletePending\",\n   \"nodeStatusDetail\": \"ex\",\n   \"powerState\": \"incididunt occaecat elit\",\n   \"vcenterName\": \"quis\",\n   \"version\": \"esse nostrud\"\n  },\n  \"vmMoref\": \"sed exercitation labore ipsum\"\n }\n]"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "aute ut id cillum aliqua"
																},
																{
																	"key": "orderby",
																	"value": "aute ut id cillum aliqua"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										},
										{
											"name": "Deploy a search cluster node.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hostName\": \"Ut aliquip aliqua\",\n    \"nodeType\": \"veniam incididunt sit p\",\n    \"inventorySourceId\": \"nostrud magna in Lorem est\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"incididunt\",\n        \"vmName\": \"amet sit\",\n        \"ipAddress\": \"voluptate veniam\",\n        \"dns\": \"dolor esse ut tempor\",\n        \"gateway\": \"ipsum Duis magna veniam\",\n        \"netMask\": \"dolor elit deserunt\",\n        \"networkMoref\": \"ad\",\n        \"ipProtocol\": \"dolor anim venia\",\n        \"ovafile\": \"enim laboris\",\n        \"location\": {\n            \"datastoreMoref\": \"nostrud\",\n            \"clusterMoref\": \"in\",\n            \"folderMoref\": \"ullamc\",\n            \"hostMoref\": \"ad amet\",\n            \"resourcePoolMoref\": \"aliqua est\"\n        },\n        \"additionalVMNetworks\": [\n            {\n                \"fqdn\": \"ad Excepteur fugiat ex\",\n                \"gateway\": \"esse occaecat magna in\",\n                \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n                \"ipAddress\": \"consectetur sint cillum\",\n                \"ipProtocol\": \"IPv4\",\n                \"macAddress\": \"culpa qui\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"non ut o\",\n                \"networkMoref\": \"consectetur in est sunt\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"fqdn\": \"fugiat sit ea sed\",\n                \"gateway\": \"ullamco eiusmod voluptat\",\n                \"interfaceName\": \"sint exercitation\",\n                \"ipAddress\": \"est aliquip\",\n                \"ipProtocol\": \"IPv6\",\n                \"macAddress\": \"ali\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"laboris sit sed dolor\",\n                \"networkMoref\": \"cillum est\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            }\n        ],\n        \"multiVlanEnabled\": true,\n        \"timeZone\": \"sunt eu aliqua\",\n        \"vlans\": [\n            {\n                \"gateway\": \"enim voluptate\",\n                \"ipAddress\": \"adipisicing eiusmod\",\n                \"mtu\": 10981990,\n                \"netmask\": \"fugiat occaecat irure\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"sint Excepteur culpa\",\n                        \"netmask\": \"aliqua ut\",\n                        \"source\": \"officia nisi velit ipsum\",\n                        \"type\": \"fugiat adipisicing et\"\n                    },\n                    {\n                        \"gateway\": \"in elit dolor\",\n                        \"netmask\": \"ea\",\n                        \"source\": \"aute tempor ut incididunt\",\n                        \"type\": \"cons\"\n                    }\n                ],\n                \"vlanId\": -80543793\n            },\n            {\n                \"gateway\": \"consectetur consequat Excepteur\",\n                \"ipAddress\": \"labore velit ullamco\",\n                \"mtu\": 23934595,\n                \"netmask\": \"ad dolore id magna\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"fugiat Ut dolore dolor\",\n                        \"netmask\": \"officia laborum Ut\",\n                        \"source\": \"mollit minim incididunt\",\n                        \"type\": \"sed dolor Duis adipisicing\"\n                    },\n                    {\n                        \"gateway\": \"veniam reprehenderit\",\n                        \"netmask\": \"cillum\",\n                        \"source\": \"irure nostrud\",\n                        \"type\": \"tempor rep\"\n                    }\n                ],\n                \"vlanId\": -49218318\n            }\n        ]\n    },\n    \"adminCredentials\": {\n        \"id\": \"aute sint ut fugiat\"\n    },\n    \"id\": \"eu culpa incididunt\",\n    \"instanceUuid\": \"cillum velit amet anim occaecat\",\n    \"rootCredentials\": {\n        \"id\": \"id sint consectetur consequat sunt\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"dolor enim amet\",\n            \"aliqua eiusmod velit qui commodo\"\n        ],\n        \"deployed\": false,\n        \"deployedTime\": \"occaecat\",\n        \"hostedComputeResource\": \"ea\",\n        \"lastCheckedTime\": \"sit cupidatat veniam\",\n        \"nodeStats\": {\n            \"diskCapacity\": -75786700,\n            \"diskUsage\": -60195455\n        },\n        \"nodeStatus\": \"Poweredoff\",\n        \"nodeStatusDetail\": \"in anim dolor\",\n        \"powerState\": \"fugiat cillum\",\n        \"vcenterName\": \"est Ut nulla voluptate\",\n        \"version\": \"laboris Excepteur\"\n    },\n    \"vmMoref\": \"id veniam aute Duis\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"nodes"
													],
													"variable": [
														{
															"key": "id",
															"value": "aute ut id cillum aliqua",
															"type": "string",
															"description": "(Required) The id of the search cluster"
														}
													]
												},
												"description": "Deploys a search cluster node.\n> This endpoint supports execution by the following roles: admin\n"
											},
											"response": [
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"Ut aliquip aliqua\",\n    \"nodeType\": \"veniam incididunt sit p\",\n    \"inventorySourceId\": \"nostrud magna in Lorem est\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"incididunt\",\n        \"vmName\": \"amet sit\",\n        \"ipAddress\": \"voluptate veniam\",\n        \"dns\": \"dolor esse ut tempor\",\n        \"gateway\": \"ipsum Duis magna veniam\",\n        \"netMask\": \"dolor elit deserunt\",\n        \"networkMoref\": \"ad\",\n        \"ipProtocol\": \"dolor anim venia\",\n        \"ovafile\": \"enim laboris\",\n        \"location\": {\n            \"datastoreMoref\": \"nostrud\",\n            \"clusterMoref\": \"in\",\n            \"folderMoref\": \"ullamc\",\n            \"hostMoref\": \"ad amet\",\n            \"resourcePoolMoref\": \"aliqua est\"\n        },\n        \"additionalVMNetworks\": [\n            {\n                \"fqdn\": \"ad Excepteur fugiat ex\",\n                \"gateway\": \"esse occaecat magna in\",\n                \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n                \"ipAddress\": \"consectetur sint cillum\",\n                \"ipProtocol\": \"IPv4\",\n                \"macAddress\": \"culpa qui\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"non ut o\",\n                \"networkMoref\": \"consectetur in est sunt\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"fqdn\": \"fugiat sit ea sed\",\n                \"gateway\": \"ullamco eiusmod voluptat\",\n                \"interfaceName\": \"sint exercitation\",\n                \"ipAddress\": \"est aliquip\",\n                \"ipProtocol\": \"IPv6\",\n                \"macAddress\": \"ali\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"laboris sit sed dolor\",\n                \"networkMoref\": \"cillum est\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            }\n        ],\n        \"multiVlanEnabled\": true,\n        \"timeZone\": \"sunt eu aliqua\",\n        \"vlans\": [\n            {\n                \"gateway\": \"enim voluptate\",\n                \"ipAddress\": \"adipisicing eiusmod\",\n                \"mtu\": 10981990,\n                \"netmask\": \"fugiat occaecat irure\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"sint Excepteur culpa\",\n                        \"netmask\": \"aliqua ut\",\n                        \"source\": \"officia nisi velit ipsum\",\n                        \"type\": \"fugiat adipisicing et\"\n                    },\n                    {\n                        \"gateway\": \"in elit dolor\",\n                        \"netmask\": \"ea\",\n                        \"source\": \"aute tempor ut incididunt\",\n                        \"type\": \"cons\"\n                    }\n                ],\n                \"vlanId\": -80543793\n            },\n            {\n                \"gateway\": \"consectetur consequat Excepteur\",\n                \"ipAddress\": \"labore velit ullamco\",\n                \"mtu\": 23934595,\n                \"netmask\": \"ad dolore id magna\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"fugiat Ut dolore dolor\",\n                        \"netmask\": \"officia laborum Ut\",\n                        \"source\": \"mollit minim incididunt\",\n                        \"type\": \"sed dolor Duis adipisicing\"\n                    },\n                    {\n                        \"gateway\": \"veniam reprehenderit\",\n                        \"netmask\": \"cillum\",\n                        \"source\": \"irure nostrud\",\n                        \"type\": \"tempor rep\"\n                    }\n                ],\n                \"vlanId\": -49218318\n            }\n        ]\n    },\n    \"adminCredentials\": {\n        \"id\": \"aute sint ut fugiat\"\n    },\n    \"id\": \"eu culpa incididunt\",\n    \"instanceUuid\": \"cillum velit amet anim occaecat\",\n    \"rootCredentials\": {\n        \"id\": \"id sint consectetur consequat sunt\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"dolor enim amet\",\n            \"aliqua eiusmod velit qui commodo\"\n        ],\n        \"deployed\": false,\n        \"deployedTime\": \"occaecat\",\n        \"hostedComputeResource\": \"ea\",\n        \"lastCheckedTime\": \"sit cupidatat veniam\",\n        \"nodeStats\": {\n            \"diskCapacity\": -75786700,\n            \"diskUsage\": -60195455\n        },\n        \"nodeStatus\": \"Poweredoff\",\n        \"nodeStatusDetail\": \"in anim dolor\",\n        \"powerState\": \"fugiat cillum\",\n        \"vcenterName\": \"est Ut nulla voluptate\",\n        \"version\": \"laboris Excepteur\"\n    },\n    \"vmMoref\": \"id veniam aute Duis\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"Ut aliquip aliqua\",\n    \"nodeType\": \"veniam incididunt sit p\",\n    \"inventorySourceId\": \"nostrud magna in Lorem est\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"incididunt\",\n        \"vmName\": \"amet sit\",\n        \"ipAddress\": \"voluptate veniam\",\n        \"dns\": \"dolor esse ut tempor\",\n        \"gateway\": \"ipsum Duis magna veniam\",\n        \"netMask\": \"dolor elit deserunt\",\n        \"networkMoref\": \"ad\",\n        \"ipProtocol\": \"dolor anim venia\",\n        \"ovafile\": \"enim laboris\",\n        \"location\": {\n            \"datastoreMoref\": \"nostrud\",\n            \"clusterMoref\": \"in\",\n            \"folderMoref\": \"ullamc\",\n            \"hostMoref\": \"ad amet\",\n            \"resourcePoolMoref\": \"aliqua est\"\n        },\n        \"additionalVMNetworks\": [\n            {\n                \"fqdn\": \"ad Excepteur fugiat ex\",\n                \"gateway\": \"esse occaecat magna in\",\n                \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n                \"ipAddress\": \"consectetur sint cillum\",\n                \"ipProtocol\": \"IPv4\",\n                \"macAddress\": \"culpa qui\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"non ut o\",\n                \"networkMoref\": \"consectetur in est sunt\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"fqdn\": \"fugiat sit ea sed\",\n                \"gateway\": \"ullamco eiusmod voluptat\",\n                \"interfaceName\": \"sint exercitation\",\n                \"ipAddress\": \"est aliquip\",\n                \"ipProtocol\": \"IPv6\",\n                \"macAddress\": \"ali\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"laboris sit sed dolor\",\n                \"networkMoref\": \"cillum est\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            }\n        ],\n        \"multiVlanEnabled\": true,\n        \"timeZone\": \"sunt eu aliqua\",\n        \"vlans\": [\n            {\n                \"gateway\": \"enim voluptate\",\n                \"ipAddress\": \"adipisicing eiusmod\",\n                \"mtu\": 10981990,\n                \"netmask\": \"fugiat occaecat irure\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"sint Excepteur culpa\",\n                        \"netmask\": \"aliqua ut\",\n                        \"source\": \"officia nisi velit ipsum\",\n                        \"type\": \"fugiat adipisicing et\"\n                    },\n                    {\n                        \"gateway\": \"in elit dolor\",\n                        \"netmask\": \"ea\",\n                        \"source\": \"aute tempor ut incididunt\",\n                        \"type\": \"cons\"\n                    }\n                ],\n                \"vlanId\": -80543793\n            },\n            {\n                \"gateway\": \"consectetur consequat Excepteur\",\n                \"ipAddress\": \"labore velit ullamco\",\n                \"mtu\": 23934595,\n                \"netmask\": \"ad dolore id magna\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"fugiat Ut dolore dolor\",\n                        \"netmask\": \"officia laborum Ut\",\n                        \"source\": \"mollit minim incididunt\",\n                        \"type\": \"sed dolor Duis adipisicing\"\n                    },\n                    {\n                        \"gateway\": \"veniam reprehenderit\",\n                        \"netmask\": \"cillum\",\n                        \"source\": \"irure nostrud\",\n                        \"type\": \"tempor rep\"\n                    }\n                ],\n                \"vlanId\": -49218318\n            }\n        ]\n    },\n    \"adminCredentials\": {\n        \"id\": \"aute sint ut fugiat\"\n    },\n    \"id\": \"eu culpa incididunt\",\n    \"instanceUuid\": \"cillum velit amet anim occaecat\",\n    \"rootCredentials\": {\n        \"id\": \"id sint consectetur consequat sunt\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"dolor enim amet\",\n            \"aliqua eiusmod velit qui commodo\"\n        ],\n        \"deployed\": false,\n        \"deployedTime\": \"occaecat\",\n        \"hostedComputeResource\": \"ea\",\n        \"lastCheckedTime\": \"sit cupidatat veniam\",\n        \"nodeStats\": {\n            \"diskCapacity\": -75786700,\n            \"diskUsage\": -60195455\n        },\n        \"nodeStatus\": \"Poweredoff\",\n        \"nodeStatusDetail\": \"in anim dolor\",\n        \"powerState\": \"fugiat cillum\",\n        \"vcenterName\": \"est Ut nulla voluptate\",\n        \"version\": \"laboris Excepteur\"\n    },\n    \"vmMoref\": \"id veniam aute Duis\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "The request was accepted for processing.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"Ut aliquip aliqua\",\n    \"nodeType\": \"veniam incididunt sit p\",\n    \"inventorySourceId\": \"nostrud magna in Lorem est\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"incididunt\",\n        \"vmName\": \"amet sit\",\n        \"ipAddress\": \"voluptate veniam\",\n        \"dns\": \"dolor esse ut tempor\",\n        \"gateway\": \"ipsum Duis magna veniam\",\n        \"netMask\": \"dolor elit deserunt\",\n        \"networkMoref\": \"ad\",\n        \"ipProtocol\": \"dolor anim venia\",\n        \"ovafile\": \"enim laboris\",\n        \"location\": {\n            \"datastoreMoref\": \"nostrud\",\n            \"clusterMoref\": \"in\",\n            \"folderMoref\": \"ullamc\",\n            \"hostMoref\": \"ad amet\",\n            \"resourcePoolMoref\": \"aliqua est\"\n        },\n        \"additionalVMNetworks\": [\n            {\n                \"fqdn\": \"ad Excepteur fugiat ex\",\n                \"gateway\": \"esse occaecat magna in\",\n                \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n                \"ipAddress\": \"consectetur sint cillum\",\n                \"ipProtocol\": \"IPv4\",\n                \"macAddress\": \"culpa qui\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"non ut o\",\n                \"networkMoref\": \"consectetur in est sunt\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"fqdn\": \"fugiat sit ea sed\",\n                \"gateway\": \"ullamco eiusmod voluptat\",\n                \"interfaceName\": \"sint exercitation\",\n                \"ipAddress\": \"est aliquip\",\n                \"ipProtocol\": \"IPv6\",\n                \"macAddress\": \"ali\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"laboris sit sed dolor\",\n                \"networkMoref\": \"cillum est\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            }\n        ],\n        \"multiVlanEnabled\": true,\n        \"timeZone\": \"sunt eu aliqua\",\n        \"vlans\": [\n            {\n                \"gateway\": \"enim voluptate\",\n                \"ipAddress\": \"adipisicing eiusmod\",\n                \"mtu\": 10981990,\n                \"netmask\": \"fugiat occaecat irure\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"sint Excepteur culpa\",\n                        \"netmask\": \"aliqua ut\",\n                        \"source\": \"officia nisi velit ipsum\",\n                        \"type\": \"fugiat adipisicing et\"\n                    },\n                    {\n                        \"gateway\": \"in elit dolor\",\n                        \"netmask\": \"ea\",\n                        \"source\": \"aute tempor ut incididunt\",\n                        \"type\": \"cons\"\n                    }\n                ],\n                \"vlanId\": -80543793\n            },\n            {\n                \"gateway\": \"consectetur consequat Excepteur\",\n                \"ipAddress\": \"labore velit ullamco\",\n                \"mtu\": 23934595,\n                \"netmask\": \"ad dolore id magna\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"fugiat Ut dolore dolor\",\n                        \"netmask\": \"officia laborum Ut\",\n                        \"source\": \"mollit minim incididunt\",\n                        \"type\": \"sed dolor Duis adipisicing\"\n                    },\n                    {\n                        \"gateway\": \"veniam reprehenderit\",\n                        \"netmask\": \"cillum\",\n                        \"source\": \"irure nostrud\",\n                        \"type\": \"tempor rep\"\n                    }\n                ],\n                \"vlanId\": -49218318\n            }\n        ]\n    },\n    \"adminCredentials\": {\n        \"id\": \"aute sint ut fugiat\"\n    },\n    \"id\": \"eu culpa incididunt\",\n    \"instanceUuid\": \"cillum velit amet anim occaecat\",\n    \"rootCredentials\": {\n        \"id\": \"id sint consectetur consequat sunt\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"dolor enim amet\",\n            \"aliqua eiusmod velit qui commodo\"\n        ],\n        \"deployed\": false,\n        \"deployedTime\": \"occaecat\",\n        \"hostedComputeResource\": \"ea\",\n        \"lastCheckedTime\": \"sit cupidatat veniam\",\n        \"nodeStats\": {\n            \"diskCapacity\": -75786700,\n            \"diskUsage\": -60195455\n        },\n        \"nodeStatus\": \"Poweredoff\",\n        \"nodeStatusDetail\": \"in anim dolor\",\n        \"powerState\": \"fugiat cillum\",\n        \"vcenterName\": \"est Ut nulla voluptate\",\n        \"version\": \"laboris Excepteur\"\n    },\n    \"vmMoref\": \"id veniam aute Duis\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"hostName\": \"Ut aliquip aliqua\",\n \"nodeType\": \"veniam incididunt sit p\",\n \"inventorySourceId\": \"nostrud magna in Lorem est\",\n \"deploymentConfig\": {\n  \"fqdn\": \"incididunt\",\n  \"vmName\": \"amet sit\",\n  \"ipAddress\": \"voluptate veniam\",\n  \"dns\": \"dolor esse ut tempor\",\n  \"gateway\": \"ipsum Duis magna veniam\",\n  \"netMask\": \"dolor elit deserunt\",\n  \"networkMoref\": \"ad\",\n  \"ipProtocol\": \"dolor anim venia\",\n  \"ovafile\": \"enim laboris\",\n  \"location\": {\n   \"datastoreMoref\": \"nostrud\",\n   \"clusterMoref\": \"in\",\n   \"folderMoref\": \"ullamc\",\n   \"hostMoref\": \"ad amet\",\n   \"resourcePoolMoref\": \"aliqua est\"\n  },\n  \"additionalVMNetworks\": [\n   {\n    \"fqdn\": \"ad Excepteur fugiat ex\",\n    \"gateway\": \"esse occaecat magna in\",\n    \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n    \"ipAddress\": \"consectetur sint cillum\",\n    \"ipProtocol\": \"IPv4\",\n    \"macAddress\": \"culpa qui\",\n    \"multiVlanEnabled\": false,\n    \"netMask\": \"non ut o\",\n    \"networkMoref\": \"consectetur in est sunt\",\n    \"vlans\": [\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"fqdn\": \"fugiat sit ea sed\",\n    \"gateway\": \"ullamco eiusmod voluptat\",\n    \"interfaceName\": \"sint exercitation\",\n    \"ipAddress\": \"est aliquip\",\n    \"ipProtocol\": \"IPv6\",\n    \"macAddress\": \"ali\",\n    \"multiVlanEnabled\": false,\n    \"netMask\": \"laboris sit sed dolor\",\n    \"networkMoref\": \"cillum est\",\n    \"vlans\": [\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"multiVlanEnabled\": true,\n  \"timeZone\": \"sunt eu aliqua\",\n  \"vlans\": [\n   {\n    \"gateway\": \"enim voluptate\",\n    \"ipAddress\": \"adipisicing eiusmod\",\n    \"mtu\": 10981990,\n    \"netmask\": \"fugiat occaecat irure\",\n    \"routes\": [\n     {\n      \"gateway\": \"sint Excepteur culpa\",\n      \"netmask\": \"aliqua ut\",\n      \"source\": \"officia nisi velit ipsum\",\n      \"type\": \"fugiat adipisicing et\"\n     },\n     {\n      \"gateway\": \"in elit dolor\",\n      \"netmask\": \"ea\",\n      \"source\": \"aute tempor ut incididunt\",\n      \"type\": \"cons\"\n     }\n    ],\n    \"vlanId\": -80543793\n   },\n   {\n    \"gateway\": \"consectetur consequat Excepteur\",\n    \"ipAddress\": \"labore velit ullamco\",\n    \"mtu\": 23934595,\n    \"netmask\": \"ad dolore id magna\",\n    \"routes\": [\n     {\n      \"gateway\": \"fugiat Ut dolore dolor\",\n      \"netmask\": \"officia laborum Ut\",\n      \"source\": \"mollit minim incididunt\",\n      \"type\": \"sed dolor Duis adipisicing\"\n     },\n     {\n      \"gateway\": \"veniam reprehenderit\",\n      \"netmask\": \"cillum\",\n      \"source\": \"irure nostrud\",\n      \"type\": \"tempor rep\"\n     }\n    ],\n    \"vlanId\": -49218318\n   }\n  ]\n },\n \"adminCredentials\": {\n  \"id\": \"aute sint ut fugiat\"\n },\n \"id\": \"eu culpa incididunt\",\n \"instanceUuid\": \"cillum velit amet anim occaecat\",\n \"rootCredentials\": {\n  \"id\": \"id sint consectetur consequat sunt\"\n },\n \"status\": {\n  \"aliases\": [\n   \"dolor enim amet\",\n   \"aliqua eiusmod velit qui commodo\"\n  ],\n  \"deployed\": false,\n  \"deployedTime\": \"occaecat\",\n  \"hostedComputeResource\": \"ea\",\n  \"lastCheckedTime\": \"sit cupidatat veniam\",\n  \"nodeStats\": {\n   \"diskCapacity\": -75786700,\n   \"diskUsage\": -60195455\n  },\n  \"nodeStatus\": \"Poweredoff\",\n  \"nodeStatusDetail\": \"in anim dolor\",\n  \"powerState\": \"fugiat cillum\",\n  \"vcenterName\": \"est Ut nulla voluptate\",\n  \"version\": \"laboris Excepteur\"\n },\n \"vmMoref\": \"id veniam aute Duis\"\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"Ut aliquip aliqua\",\n    \"nodeType\": \"veniam incididunt sit p\",\n    \"inventorySourceId\": \"nostrud magna in Lorem est\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"incididunt\",\n        \"vmName\": \"amet sit\",\n        \"ipAddress\": \"voluptate veniam\",\n        \"dns\": \"dolor esse ut tempor\",\n        \"gateway\": \"ipsum Duis magna veniam\",\n        \"netMask\": \"dolor elit deserunt\",\n        \"networkMoref\": \"ad\",\n        \"ipProtocol\": \"dolor anim venia\",\n        \"ovafile\": \"enim laboris\",\n        \"location\": {\n            \"datastoreMoref\": \"nostrud\",\n            \"clusterMoref\": \"in\",\n            \"folderMoref\": \"ullamc\",\n            \"hostMoref\": \"ad amet\",\n            \"resourcePoolMoref\": \"aliqua est\"\n        },\n        \"additionalVMNetworks\": [\n            {\n                \"fqdn\": \"ad Excepteur fugiat ex\",\n                \"gateway\": \"esse occaecat magna in\",\n                \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n                \"ipAddress\": \"consectetur sint cillum\",\n                \"ipProtocol\": \"IPv4\",\n                \"macAddress\": \"culpa qui\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"non ut o\",\n                \"networkMoref\": \"consectetur in est sunt\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"fqdn\": \"fugiat sit ea sed\",\n                \"gateway\": \"ullamco eiusmod voluptat\",\n                \"interfaceName\": \"sint exercitation\",\n                \"ipAddress\": \"est aliquip\",\n                \"ipProtocol\": \"IPv6\",\n                \"macAddress\": \"ali\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"laboris sit sed dolor\",\n                \"networkMoref\": \"cillum est\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            }\n        ],\n        \"multiVlanEnabled\": true,\n        \"timeZone\": \"sunt eu aliqua\",\n        \"vlans\": [\n            {\n                \"gateway\": \"enim voluptate\",\n                \"ipAddress\": \"adipisicing eiusmod\",\n                \"mtu\": 10981990,\n                \"netmask\": \"fugiat occaecat irure\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"sint Excepteur culpa\",\n                        \"netmask\": \"aliqua ut\",\n                        \"source\": \"officia nisi velit ipsum\",\n                        \"type\": \"fugiat adipisicing et\"\n                    },\n                    {\n                        \"gateway\": \"in elit dolor\",\n                        \"netmask\": \"ea\",\n                        \"source\": \"aute tempor ut incididunt\",\n                        \"type\": \"cons\"\n                    }\n                ],\n                \"vlanId\": -80543793\n            },\n            {\n                \"gateway\": \"consectetur consequat Excepteur\",\n                \"ipAddress\": \"labore velit ullamco\",\n                \"mtu\": 23934595,\n                \"netmask\": \"ad dolore id magna\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"fugiat Ut dolore dolor\",\n                        \"netmask\": \"officia laborum Ut\",\n                        \"source\": \"mollit minim incididunt\",\n                        \"type\": \"sed dolor Duis adipisicing\"\n                    },\n                    {\n                        \"gateway\": \"veniam reprehenderit\",\n                        \"netmask\": \"cillum\",\n                        \"source\": \"irure nostrud\",\n                        \"type\": \"tempor rep\"\n                    }\n                ],\n                \"vlanId\": -49218318\n            }\n        ]\n    },\n    \"adminCredentials\": {\n        \"id\": \"aute sint ut fugiat\"\n    },\n    \"id\": \"eu culpa incididunt\",\n    \"instanceUuid\": \"cillum velit amet anim occaecat\",\n    \"rootCredentials\": {\n        \"id\": \"id sint consectetur consequat sunt\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"dolor enim amet\",\n            \"aliqua eiusmod velit qui commodo\"\n        ],\n        \"deployed\": false,\n        \"deployedTime\": \"occaecat\",\n        \"hostedComputeResource\": \"ea\",\n        \"lastCheckedTime\": \"sit cupidatat veniam\",\n        \"nodeStats\": {\n            \"diskCapacity\": -75786700,\n            \"diskUsage\": -60195455\n        },\n        \"nodeStatus\": \"Poweredoff\",\n        \"nodeStatusDetail\": \"in anim dolor\",\n        \"powerState\": \"fugiat cillum\",\n        \"vcenterName\": \"est Ut nulla voluptate\",\n        \"version\": \"laboris Excepteur\"\n    },\n    \"vmMoref\": \"id veniam aute Duis\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												},
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"Ut aliquip aliqua\",\n    \"nodeType\": \"veniam incididunt sit p\",\n    \"inventorySourceId\": \"nostrud magna in Lorem est\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"incididunt\",\n        \"vmName\": \"amet sit\",\n        \"ipAddress\": \"voluptate veniam\",\n        \"dns\": \"dolor esse ut tempor\",\n        \"gateway\": \"ipsum Duis magna veniam\",\n        \"netMask\": \"dolor elit deserunt\",\n        \"networkMoref\": \"ad\",\n        \"ipProtocol\": \"dolor anim venia\",\n        \"ovafile\": \"enim laboris\",\n        \"location\": {\n            \"datastoreMoref\": \"nostrud\",\n            \"clusterMoref\": \"in\",\n            \"folderMoref\": \"ullamc\",\n            \"hostMoref\": \"ad amet\",\n            \"resourcePoolMoref\": \"aliqua est\"\n        },\n        \"additionalVMNetworks\": [\n            {\n                \"fqdn\": \"ad Excepteur fugiat ex\",\n                \"gateway\": \"esse occaecat magna in\",\n                \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n                \"ipAddress\": \"consectetur sint cillum\",\n                \"ipProtocol\": \"IPv4\",\n                \"macAddress\": \"culpa qui\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"non ut o\",\n                \"networkMoref\": \"consectetur in est sunt\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"fqdn\": \"fugiat sit ea sed\",\n                \"gateway\": \"ullamco eiusmod voluptat\",\n                \"interfaceName\": \"sint exercitation\",\n                \"ipAddress\": \"est aliquip\",\n                \"ipProtocol\": \"IPv6\",\n                \"macAddress\": \"ali\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"laboris sit sed dolor\",\n                \"networkMoref\": \"cillum est\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            }\n        ],\n        \"multiVlanEnabled\": true,\n        \"timeZone\": \"sunt eu aliqua\",\n        \"vlans\": [\n            {\n                \"gateway\": \"enim voluptate\",\n                \"ipAddress\": \"adipisicing eiusmod\",\n                \"mtu\": 10981990,\n                \"netmask\": \"fugiat occaecat irure\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"sint Excepteur culpa\",\n                        \"netmask\": \"aliqua ut\",\n                        \"source\": \"officia nisi velit ipsum\",\n                        \"type\": \"fugiat adipisicing et\"\n                    },\n                    {\n                        \"gateway\": \"in elit dolor\",\n                        \"netmask\": \"ea\",\n                        \"source\": \"aute tempor ut incididunt\",\n                        \"type\": \"cons\"\n                    }\n                ],\n                \"vlanId\": -80543793\n            },\n            {\n                \"gateway\": \"consectetur consequat Excepteur\",\n                \"ipAddress\": \"labore velit ullamco\",\n                \"mtu\": 23934595,\n                \"netmask\": \"ad dolore id magna\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"fugiat Ut dolore dolor\",\n                        \"netmask\": \"officia laborum Ut\",\n                        \"source\": \"mollit minim incididunt\",\n                        \"type\": \"sed dolor Duis adipisicing\"\n                    },\n                    {\n                        \"gateway\": \"veniam reprehenderit\",\n                        \"netmask\": \"cillum\",\n                        \"source\": \"irure nostrud\",\n                        \"type\": \"tempor rep\"\n                    }\n                ],\n                \"vlanId\": -49218318\n            }\n        ]\n    },\n    \"adminCredentials\": {\n        \"id\": \"aute sint ut fugiat\"\n    },\n    \"id\": \"eu culpa incididunt\",\n    \"instanceUuid\": \"cillum velit amet anim occaecat\",\n    \"rootCredentials\": {\n        \"id\": \"id sint consectetur consequat sunt\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"dolor enim amet\",\n            \"aliqua eiusmod velit qui commodo\"\n        ],\n        \"deployed\": false,\n        \"deployedTime\": \"occaecat\",\n        \"hostedComputeResource\": \"ea\",\n        \"lastCheckedTime\": \"sit cupidatat veniam\",\n        \"nodeStats\": {\n            \"diskCapacity\": -75786700,\n            \"diskUsage\": -60195455\n        },\n        \"nodeStatus\": \"Poweredoff\",\n        \"nodeStatusDetail\": \"in anim dolor\",\n        \"powerState\": \"fugiat cillum\",\n        \"vcenterName\": \"est Ut nulla voluptate\",\n        \"version\": \"laboris Excepteur\"\n    },\n    \"vmMoref\": \"id veniam aute Duis\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"hostName\": \"Ut aliquip aliqua\",\n \"nodeType\": \"veniam incididunt sit p\",\n \"inventorySourceId\": \"nostrud magna in Lorem est\",\n \"deploymentConfig\": {\n  \"fqdn\": \"incididunt\",\n  \"vmName\": \"amet sit\",\n  \"ipAddress\": \"voluptate veniam\",\n  \"dns\": \"dolor esse ut tempor\",\n  \"gateway\": \"ipsum Duis magna veniam\",\n  \"netMask\": \"dolor elit deserunt\",\n  \"networkMoref\": \"ad\",\n  \"ipProtocol\": \"dolor anim venia\",\n  \"ovafile\": \"enim laboris\",\n  \"location\": {\n   \"datastoreMoref\": \"nostrud\",\n   \"clusterMoref\": \"in\",\n   \"folderMoref\": \"ullamc\",\n   \"hostMoref\": \"ad amet\",\n   \"resourcePoolMoref\": \"aliqua est\"\n  },\n  \"additionalVMNetworks\": [\n   {\n    \"fqdn\": \"ad Excepteur fugiat ex\",\n    \"gateway\": \"esse occaecat magna in\",\n    \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n    \"ipAddress\": \"consectetur sint cillum\",\n    \"ipProtocol\": \"IPv4\",\n    \"macAddress\": \"culpa qui\",\n    \"multiVlanEnabled\": false,\n    \"netMask\": \"non ut o\",\n    \"networkMoref\": \"consectetur in est sunt\",\n    \"vlans\": [\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"fqdn\": \"fugiat sit ea sed\",\n    \"gateway\": \"ullamco eiusmod voluptat\",\n    \"interfaceName\": \"sint exercitation\",\n    \"ipAddress\": \"est aliquip\",\n    \"ipProtocol\": \"IPv6\",\n    \"macAddress\": \"ali\",\n    \"multiVlanEnabled\": false,\n    \"netMask\": \"laboris sit sed dolor\",\n    \"networkMoref\": \"cillum est\",\n    \"vlans\": [\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"gateway\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mtu\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netmask\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"routes\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vlanId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"multiVlanEnabled\": true,\n  \"timeZone\": \"sunt eu aliqua\",\n  \"vlans\": [\n   {\n    \"gateway\": \"enim voluptate\",\n    \"ipAddress\": \"adipisicing eiusmod\",\n    \"mtu\": 10981990,\n    \"netmask\": \"fugiat occaecat irure\",\n    \"routes\": [\n     {\n      \"gateway\": \"sint Excepteur culpa\",\n      \"netmask\": \"aliqua ut\",\n      \"source\": \"officia nisi velit ipsum\",\n      \"type\": \"fugiat adipisicing et\"\n     },\n     {\n      \"gateway\": \"in elit dolor\",\n      \"netmask\": \"ea\",\n      \"source\": \"aute tempor ut incididunt\",\n      \"type\": \"cons\"\n     }\n    ],\n    \"vlanId\": -80543793\n   },\n   {\n    \"gateway\": \"consectetur consequat Excepteur\",\n    \"ipAddress\": \"labore velit ullamco\",\n    \"mtu\": 23934595,\n    \"netmask\": \"ad dolore id magna\",\n    \"routes\": [\n     {\n      \"gateway\": \"fugiat Ut dolore dolor\",\n      \"netmask\": \"officia laborum Ut\",\n      \"source\": \"mollit minim incididunt\",\n      \"type\": \"sed dolor Duis adipisicing\"\n     },\n     {\n      \"gateway\": \"veniam reprehenderit\",\n      \"netmask\": \"cillum\",\n      \"source\": \"irure nostrud\",\n      \"type\": \"tempor rep\"\n     }\n    ],\n    \"vlanId\": -49218318\n   }\n  ]\n },\n \"adminCredentials\": {\n  \"id\": \"aute sint ut fugiat\"\n },\n \"id\": \"eu culpa incididunt\",\n \"instanceUuid\": \"cillum velit amet anim occaecat\",\n \"rootCredentials\": {\n  \"id\": \"id sint consectetur consequat sunt\"\n },\n \"status\": {\n  \"aliases\": [\n   \"dolor enim amet\",\n   \"aliqua eiusmod velit qui commodo\"\n  ],\n  \"deployed\": false,\n  \"deployedTime\": \"occaecat\",\n  \"hostedComputeResource\": \"ea\",\n  \"lastCheckedTime\": \"sit cupidatat veniam\",\n  \"nodeStats\": {\n   \"diskCapacity\": -75786700,\n   \"diskUsage\": -60195455\n  },\n  \"nodeStatus\": \"Poweredoff\",\n  \"nodeStatusDetail\": \"in anim dolor\",\n  \"powerState\": \"fugiat cillum\",\n  \"vcenterName\": \"est Ut nulla voluptate\",\n  \"version\": \"laboris Excepteur\"\n },\n \"vmMoref\": \"id veniam aute Duis\"\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"Ut aliquip aliqua\",\n    \"nodeType\": \"veniam incididunt sit p\",\n    \"inventorySourceId\": \"nostrud magna in Lorem est\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"incididunt\",\n        \"vmName\": \"amet sit\",\n        \"ipAddress\": \"voluptate veniam\",\n        \"dns\": \"dolor esse ut tempor\",\n        \"gateway\": \"ipsum Duis magna veniam\",\n        \"netMask\": \"dolor elit deserunt\",\n        \"networkMoref\": \"ad\",\n        \"ipProtocol\": \"dolor anim venia\",\n        \"ovafile\": \"enim laboris\",\n        \"location\": {\n            \"datastoreMoref\": \"nostrud\",\n            \"clusterMoref\": \"in\",\n            \"folderMoref\": \"ullamc\",\n            \"hostMoref\": \"ad amet\",\n            \"resourcePoolMoref\": \"aliqua est\"\n        },\n        \"additionalVMNetworks\": [\n            {\n                \"fqdn\": \"ad Excepteur fugiat ex\",\n                \"gateway\": \"esse occaecat magna in\",\n                \"interfaceName\": \"culpa Ut deserunt ex consectetur\",\n                \"ipAddress\": \"consectetur sint cillum\",\n                \"ipProtocol\": \"IPv4\",\n                \"macAddress\": \"culpa qui\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"non ut o\",\n                \"networkMoref\": \"consectetur in est sunt\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"fqdn\": \"fugiat sit ea sed\",\n                \"gateway\": \"ullamco eiusmod voluptat\",\n                \"interfaceName\": \"sint exercitation\",\n                \"ipAddress\": \"est aliquip\",\n                \"ipProtocol\": \"IPv6\",\n                \"macAddress\": \"ali\",\n                \"multiVlanEnabled\": false,\n                \"netMask\": \"laboris sit sed dolor\",\n                \"networkMoref\": \"cillum est\",\n                \"vlans\": [\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    {\n                        \"gateway\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"ipAddress\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"mtu\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"netmask\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"routes\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"vlanId\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                ]\n            }\n        ],\n        \"multiVlanEnabled\": true,\n        \"timeZone\": \"sunt eu aliqua\",\n        \"vlans\": [\n            {\n                \"gateway\": \"enim voluptate\",\n                \"ipAddress\": \"adipisicing eiusmod\",\n                \"mtu\": 10981990,\n                \"netmask\": \"fugiat occaecat irure\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"sint Excepteur culpa\",\n                        \"netmask\": \"aliqua ut\",\n                        \"source\": \"officia nisi velit ipsum\",\n                        \"type\": \"fugiat adipisicing et\"\n                    },\n                    {\n                        \"gateway\": \"in elit dolor\",\n                        \"netmask\": \"ea\",\n                        \"source\": \"aute tempor ut incididunt\",\n                        \"type\": \"cons\"\n                    }\n                ],\n                \"vlanId\": -80543793\n            },\n            {\n                \"gateway\": \"consectetur consequat Excepteur\",\n                \"ipAddress\": \"labore velit ullamco\",\n                \"mtu\": 23934595,\n                \"netmask\": \"ad dolore id magna\",\n                \"routes\": [\n                    {\n                        \"gateway\": \"fugiat Ut dolore dolor\",\n                        \"netmask\": \"officia laborum Ut\",\n                        \"source\": \"mollit minim incididunt\",\n                        \"type\": \"sed dolor Duis adipisicing\"\n                    },\n                    {\n                        \"gateway\": \"veniam reprehenderit\",\n                        \"netmask\": \"cillum\",\n                        \"source\": \"irure nostrud\",\n                        \"type\": \"tempor rep\"\n                    }\n                ],\n                \"vlanId\": -49218318\n            }\n        ]\n    },\n    \"adminCredentials\": {\n        \"id\": \"aute sint ut fugiat\"\n    },\n    \"id\": \"eu culpa incididunt\",\n    \"instanceUuid\": \"cillum velit amet anim occaecat\",\n    \"rootCredentials\": {\n        \"id\": \"id sint consectetur consequat sunt\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"dolor enim amet\",\n            \"aliqua eiusmod velit qui commodo\"\n        ],\n        \"deployed\": false,\n        \"deployedTime\": \"occaecat\",\n        \"hostedComputeResource\": \"ea\",\n        \"lastCheckedTime\": \"sit cupidatat veniam\",\n        \"nodeStats\": {\n            \"diskCapacity\": -75786700,\n            \"diskUsage\": -60195455\n        },\n        \"nodeStatus\": \"Poweredoff\",\n        \"nodeStatusDetail\": \"in anim dolor\",\n        \"powerState\": \"fugiat cillum\",\n        \"vcenterName\": \"est Ut nulla voluptate\",\n        \"version\": \"laboris Excepteur\"\n    },\n    \"vmMoref\": \"id veniam aute Duis\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get search cluster by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the search cluster to be retrieved."
												}
											]
										},
										"description": "Retrieves a search cluster by its ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the search cluster.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"ad minim laboris fugiat\",\n \"state\": \"DISABLED\",\n \"config\": {\n  \"indexRetentionDays\": 43108498\n },\n \"id\": \"enim reprehenderit anim Duis\",\n \"maintenanceMode\": false,\n \"stateDetail\": \"Suspended by system due to low disk, Suspended by user\",\n \"summary\": {\n  \"diskCacheNfsServer\": \"consectetur minim in in\",\n  \"lastMetadataSyncTime\": \"1965-02-14T18:47:17.042Z\",\n  \"nodes\": [\n   {\n    \"hostname\": \"ex nulla\",\n    \"id\": \"sit ullamco cillum incididunt\",\n    \"status\": \"dolor cillum ea\"\n   },\n   {\n    \"hostname\": \"aute magna\",\n    \"id\": \"nisi\",\n    \"status\": \"fugiat laboris\"\n   }\n  ],\n  \"totalAssets\": -11243258,\n  \"totalAssetsIndexed\": 95833850,\n  \"totalDiskCapacity\": 90050796,\n  \"totalDiskUsage\": 15693061,\n  \"totalFailed\": 77692140,\n  \"totalNodes\": 11121339\n },\n \"suspendedBy\": \"USER\",\n \"updatedBy\": \"dolor velit culpa\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The search cluster ID does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update search cluster configuration.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters",
												":id",
												"config"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the search cluster to be updated."
												}
											]
										},
										"description": "Updates the search cluster configuration.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"indexRetentionDays\": -69497704\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"indexRetentionDays\": -69497704\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation as it is not implemented.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": -69497704\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Collect search cluster log bundles.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config\": {\n        \"logDirectory\": \"nostrud ea ad eu in\",\n        \"logBundleRange\": {\n            \"startDate\": \"mollit Ut \",\n            \"endDate\": \"sed elit cupidatat\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"dolo\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters",
												":id",
												"log-bundles"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the search cluster."
												}
											]
										},
										"description": "Collects search cluster log bundles.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"nostrud ea ad eu in\",\n        \"logBundleRange\": {\n            \"startDate\": \"mollit Ut \",\n            \"endDate\": \"sed elit cupidatat\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"dolo\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"nostrud ea ad eu in\",\n        \"logBundleRange\": {\n            \"startDate\": \"mollit Ut \",\n            \"endDate\": \"sed elit cupidatat\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"dolo\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"nostrud ea ad eu in\",\n        \"logBundleRange\": {\n            \"startDate\": \"mollit Ut \",\n            \"endDate\": \"sed elit cupidatat\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"dolo\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"config\": {\n  \"logDirectory\": \"nostrud ea ad eu in\",\n  \"logBundleRange\": {\n   \"startDate\": \"mollit Ut \",\n   \"endDate\": \"sed elit cupidatat\"\n  }\n },\n \"status\": {},\n \"id\": \"dolo\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"nostrud ea ad eu in\",\n        \"logBundleRange\": {\n            \"startDate\": \"mollit Ut \",\n            \"endDate\": \"sed elit cupidatat\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"dolo\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"nostrud ea ad eu in\",\n        \"logBundleRange\": {\n            \"startDate\": \"mollit Ut \",\n            \"endDate\": \"sed elit cupidatat\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"dolo\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"nostrud ea ad eu in\",\n        \"logBundleRange\": {\n            \"startDate\": \"mollit Ut \",\n            \"endDate\": \"sed elit cupidatat\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"dolo\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"config\": {\n   \"logDirectory\": \"mollit\",\n   \"logBundleRange\": {\n    \"startDate\": \"ut mollit et magna dolore\",\n    \"endDate\": \"ad commodo\"\n   }\n  },\n  \"status\": {},\n  \"id\": \"Lorem reprehenderit amet\"\n },\n {\n  \"config\": {\n   \"logDirectory\": \"fugiat veniam do\",\n   \"logBundleRange\": {\n    \"startDate\": \"in elit officia\",\n    \"endDate\": \"pariatur Excepteur do ea in\"\n   }\n  },\n  \"status\": {},\n  \"id\": \"do id Duis in\"\n }\n]"
										}
									]
								},
								{
									"name": "Execute management request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"clusterId\": \"enim consequat\",\n    \"operation\": \"SUSPEND\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters",
												":id",
												"management"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The ID of the search cluster to be managed."
												}
											]
										},
										"description": "Runs search cluster management request.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"enim consequat\",\n    \"operation\": \"SUSPEND\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"clusterId\": \"enim consequat\",\n \"operation\": \"SUSPEND\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"enim consequat\",\n    \"operation\": \"SUSPEND\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"enim consequat\",\n    \"operation\": \"SUSPEND\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"enim consequat\",\n    \"operation\": \"SUSPEND\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"enim consequat\",\n    \"operation\": \"SUSPEND\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"enim consequat\",\n    \"operation\": \"SUSPEND\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"clusterId\": \"enim consequat\",\n \"operation\": \"SUSPEND\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all search clusters.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"search-clusters"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all search clusters.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned all search clusters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"anim esse incididunt velit\",\n   \"state\": \"DEGRADED\",\n   \"config\": {\n    \"indexRetentionDays\": -75135738\n   },\n   \"id\": \"velit enim officia ex incididunt\",\n   \"maintenanceMode\": false,\n   \"stateDetail\": \"Suspended by system due to low disk, Suspended by user\",\n   \"summary\": {\n    \"diskCacheNfsServer\": \"laborum dol\",\n    \"lastMetadataSyncTime\": \"1998-10-31T14:58:38.656Z\",\n    \"nodes\": [\n     {\n      \"hostname\": \"irure sit\",\n      \"id\": \"cupidatat qui\",\n      \"status\": \"id reprehenderit fugiat amet\"\n     },\n     {\n      \"hostname\": \"eu ad\",\n      \"id\": \"sunt mollit aliqua eu\",\n      \"status\": \"quis fug\"\n     }\n    ],\n    \"totalAssets\": 94596210,\n    \"totalAssetsIndexed\": -99391878,\n    \"totalDiskCapacity\": -47609130,\n    \"totalDiskUsage\": 71089518,\n    \"totalFailed\": -62989800,\n    \"totalNodes\": 13447047\n   },\n   \"suspendedBy\": \"USER\",\n   \"updatedBy\": \"officia reprehenderit\"\n  },\n  {\n   \"name\": \"cillum commodo eu Lorem\",\n   \"state\": \"OPERATIONAL\",\n   \"config\": {\n    \"indexRetentionDays\": -18612941\n   },\n   \"id\": \"anim aliqua\",\n   \"maintenanceMode\": true,\n   \"stateDetail\": \"Suspended by system due to low disk, Suspended by user\",\n   \"summary\": {\n    \"diskCacheNfsServer\": \"dolore Excepteur aliqua sunt anim\",\n    \"lastMetadataSyncTime\": \"2008-03-25T10:38:19.221Z\",\n    \"nodes\": [\n     {\n      \"hostname\": \"amet voluptate ut \",\n      \"id\": \"officia\",\n      \"status\": \"fugiat\"\n     },\n     {\n      \"hostname\": \"ut\",\n      \"id\": \"nostrud tempor pariatur aliqua\",\n      \"status\": \"commodo irure\"\n     }\n    ],\n    \"totalAssets\": 4672187,\n    \"totalAssetsIndexed\": 96654526,\n    \"totalDiskCapacity\": -16594409,\n    \"totalDiskUsage\": -45250951,\n    \"totalFailed\": 41280720,\n    \"totalNodes\": -87134673\n   },\n   \"suspendedBy\": \"USER\",\n   \"updatedBy\": \"sint tempor ipsum\"\n  }\n ],\n \"page\": {\n  \"number\": -52711444,\n  \"queryState\": \"adipisicing veniam id eu minim\",\n  \"size\": -9668240,\n  \"totalElements\": 66103161,\n  \"totalPages\": -57050315\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "server-disaster-recovery-backups",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete server disaster recovery backup by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Server backup ID sent in request."
												}
											]
										},
										"description": "Deletes the server DR backup based on the specified ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get server disaster recovery backup by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Server DR backup ID sent in request."
												}
											]
										},
										"description": "Retrieves the server disaster recovery backup by ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK. Retrieves the server disaster recovery backup by ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"backupConsistencyType\": \"aliquip deserunt\",\n \"checksum\": \"ullamco dolor commodo\",\n \"components\": [\n  {\n   \"backupPath\": \"et ea Duis dolore ad\",\n   \"backupStatus\": \"dolore\",\n   \"backupsEnabled\": true,\n   \"id\": \"cdraUniqueIdentifier\",\n   \"isComponentInternal\": false,\n   \"name\": \"CDRA\",\n   \"version\": \"1.0\"\n  },\n  {\n   \"backupPath\": \"nostrud proident sed nisi esse\",\n   \"backupStatus\": \"do sit anim id\",\n   \"backupsEnabled\": true,\n   \"id\": \"cdraUniqueIdentifier\",\n   \"isComponentInternal\": false,\n   \"name\": \"CDRA\",\n   \"version\": \"1.0\"\n  }\n ],\n \"consistency\": \"ea amet d\",\n \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n \"elapsedSeconds\": -23403672,\n \"error\": \"amet officia laboris\",\n \"hostname\": \"Ut dolore mollit in\",\n \"id\": \"non\",\n \"lockboxPassphrase\": \"dol\",\n \"mfrManifestId\": \"Lorem\",\n \"mfrReplicationId\": \"in pariatur proiden\",\n \"name\": \"ut dolore dolor deserunt esse\",\n \"noScheduledStorageAccess\": false,\n \"nodeId\": \"sint elit n\",\n \"recover\": false,\n \"sequenceNumber\": 1614236,\n \"sizeInBytes\": 2020542,\n \"state\": \"aute magna dolor\",\n \"version\": \"Excepteur id pro\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update server disaster recovery backup by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Server DR backup ID sent in request."
												}
											]
										},
										"description": "Updates the server disaster recovery backup by ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK. Updates the server disaster recovery backup by ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all server disaster recovery backups.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-backups"
									],
									"query": [
										{
											"key": "full",
											"value": "true",
											"description": "The default is false. If it is true, it  returns all backups, including failures."
										}
									]
								},
								"description": "Retrieves a list of server disaster recovery backups.\n> This endpoint supports execution by the following roles: admin,user\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "true"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "true"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK. Retrieves a list of server disaster recovery backups.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"backupConsistencyType\": \"nisi velit \",\n   \"checksum\": \"est eu proident\",\n   \"components\": [\n    {\n     \"backupPath\": \"nulla in e\",\n     \"backupStatus\": \"minim officia nulla sint\",\n     \"backupsEnabled\": true,\n     \"id\": \"cdraUniqueIdentifier\",\n     \"isComponentInternal\": false,\n     \"name\": \"CDRA\",\n     \"version\": \"1.0\"\n    },\n    {\n     \"backupPath\": \"irure nulla\",\n     \"backupStatus\": \"exercitation eiusmod\",\n     \"backupsEnabled\": true,\n     \"id\": \"cdraUniqueIdentifier\",\n     \"isComponentInternal\": false,\n     \"name\": \"CDRA\",\n     \"version\": \"1.0\"\n    }\n   ],\n   \"consistency\": \"irure minim Lorem adipisic\",\n   \"creationTime\": \"1965-03-06T20:20:42.583Z\",\n   \"elapsedSeconds\": 84393385,\n   \"error\": \"in\",\n   \"hostname\": \"deserunt quis velit pariatur\",\n   \"id\": \"dolor labore\",\n   \"lockboxPassphrase\": \"Lorem nulla nisi deserunt\",\n   \"mfrManifestId\": \"tempor do ea anim dolore\",\n   \"mfrReplicationId\": \"officia do\",\n   \"name\": \"aute minim\",\n   \"noScheduledStorageAccess\": true,\n   \"nodeId\": \"et exercitation\",\n   \"recover\": true,\n   \"sequenceNumber\": -14886301,\n   \"sizeInBytes\": 62129697,\n   \"state\": \"officia veniam i\",\n   \"version\": \"laborum Ut culpa\"\n  },\n  {\n   \"backupConsistencyType\": \"ut\",\n   \"checksum\": \"do\",\n   \"components\": [\n    {\n     \"backupPath\": \"cupidatat labore\",\n     \"backupStatus\": \"elit ullamco anim\",\n     \"backupsEnabled\": true,\n     \"id\": \"cdraUniqueIdentifier\",\n     \"isComponentInternal\": false,\n     \"name\": \"CDRA\",\n     \"version\": \"1.0\"\n    },\n    {\n     \"backupPath\": \"aliq\",\n     \"backupStatus\": \"Lorem ea\",\n     \"backupsEnabled\": true,\n     \"id\": \"cdraUniqueIdentifier\",\n     \"isComponentInternal\": false,\n     \"name\": \"CDRA\",\n     \"version\": \"1.0\"\n    }\n   ],\n   \"consistency\": \"cillum magna Excepteur sit\",\n   \"creationTime\": \"1967-03-30T07:21:08.460Z\",\n   \"elapsedSeconds\": -23603834,\n   \"error\": \"in fugiat minim \",\n   \"hostname\": \"commodo veniam eu\",\n   \"id\": \"c\",\n   \"lockboxPassphrase\": \"et\",\n   \"mfrManifestId\": \"dolor qui\",\n   \"mfrReplicationId\": \"elit nisi sunt\",\n   \"name\": \"pariatur laborum consectetur adipis\",\n   \"noScheduledStorageAccess\": true,\n   \"nodeId\": \"ut consectetur est et\",\n   \"recover\": false,\n   \"sequenceNumber\": -89130514,\n   \"sizeInBytes\": 11745508,\n   \"state\": \"anim ipsum voluptate amet culpa\",\n   \"version\": \"voluptate ullamco do ea\"\n  }\n ],\n \"page\": {\n  \"number\": 28563769,\n  \"queryState\": \"ullamco eu dolore consequat\",\n  \"size\": -32894007,\n  \"totalElements\": 51633133,\n  \"totalPages\": 29543501\n }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "true"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "true"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create server disaster recovery backup.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-backups"
									],
									"query": [
										{
											"key": "name",
											"value": "aute ut id cillum aliqua",
											"description": "Name of the component requesting a backup."
										}
									]
								},
								"description": "Creates the server disaster recovery backup.\n> This endpoint supports execution by the following roles: admin,user\n"
							},
							"response": [
								{
									"name": "OK. Creates the server disaster recovery backup.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"aliquip deserunt\",\n    \"checksum\": \"ullamco dolor commodo\",\n    \"components\": [\n        {\n            \"backupPath\": \"et ea Duis dolore ad\",\n            \"backupStatus\": \"dolore\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"backupPath\": \"nostrud proident sed nisi esse\",\n            \"backupStatus\": \"do sit anim id\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"ea amet d\",\n    \"creationTime\": \"2020-07-25T03:21:08.461Z\",\n    \"elapsedSeconds\": -23403672,\n    \"error\": \"amet officia laboris\",\n    \"hostname\": \"Ut dolore mollit in\",\n    \"id\": \"non\",\n    \"lockboxPassphrase\": \"dol\",\n    \"mfrManifestId\": \"Lorem\",\n    \"mfrReplicationId\": \"in pariatur proiden\",\n    \"name\": \"ut dolore dolor deserunt esse\",\n    \"noScheduledStorageAccess\": false,\n    \"nodeId\": \"sint elit n\",\n    \"recover\": false,\n    \"sequenceNumber\": 1614236,\n    \"sizeInBytes\": 2020542,\n    \"state\": \"aute magna dolor\",\n    \"version\": \"Excepteur id pro\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "server-disaster-recovery-configurations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get server disaster recovery configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "default",
													"type": "string",
													"description": "(Required) If you specify ID as default, you get the integrated Integrated Storage configuration."
												}
											]
										},
										"description": "Retrieves the server disaster recovery configuration by its ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK. Retrieves the server disaster recovery configuration by its ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"repositoryHost\": \"cupidatat nostrud sit\",\n \"repositoryPath\": \"ut exercitat\",\n \"type\": \"volupta\",\n \"backupsEnabled\": false,\n \"id\": \"ut tempor enim nisi\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update server disaster recovery configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"repositoryHost\": \"cupidatat nostrud sit\",\n    \"repositoryPath\": \"ut exercitat\",\n    \"type\": \"volupta\",\n    \"backupsEnabled\": false,\n    \"id\": \"ut tempor enim nisi\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Server DR backup ID sent in request."
												}
											]
										},
										"description": "Updates the server disaster recovery configuration by its ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "OK. Updates the server disaster recovery configuration by its ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"cupidatat nostrud sit\",\n    \"repositoryPath\": \"ut exercitat\",\n    \"type\": \"volupta\",\n    \"backupsEnabled\": false,\n    \"id\": \"ut tempor enim nisi\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"cupidatat nostrud sit\",\n    \"repositoryPath\": \"ut exercitat\",\n    \"type\": \"volupta\",\n    \"backupsEnabled\": false,\n    \"id\": \"ut tempor enim nisi\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"cupidatat nostrud sit\",\n    \"repositoryPath\": \"ut exercitat\",\n    \"type\": \"volupta\",\n    \"backupsEnabled\": false,\n    \"id\": \"ut tempor enim nisi\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"cupidatat nostrud sit\",\n    \"repositoryPath\": \"ut exercitat\",\n    \"type\": \"volupta\",\n    \"backupsEnabled\": false,\n    \"id\": \"ut tempor enim nisi\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"cupidatat nostrud sit\",\n    \"repositoryPath\": \"ut exercitat\",\n    \"type\": \"volupta\",\n    \"backupsEnabled\": false,\n    \"id\": \"ut tempor enim nisi\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all server disaster recovery configurations.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-configurations"
									]
								},
								"description": "Retrieves a list of all server disaster recovery configurations. The configurations detail includes host name, host path, type, backupsEnabled flag. The configuration contains server disaster recovery type which specifying data domain system or integrated storage system supports currently in server disaster recovery backup.\n\nGET /api/v2/server-disaster-recovery-configurations produces new output collected from the data model, including some of the defined fields that toggle the ability for a component to generate backups. The ability to disable a components backup will be exposed by the UI and the user can optionally change the value. A change of the element bound to the enable/disable backup for the specific component should trigger a PUT /api/v2/server-disaster-recovery-configurations to update the field in the data model, the change should be reflected to the ES index_data_component.\n> This endpoint supports execution by the following roles: admin,user\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "OK. Retrieves a list of all server disaster recovery configurations. The configurations contain unique id, repository host name, repository path, type, and backupsEnabled switch.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"backupsEnabled\": true,\n \"id\": \"qui consectetu\",\n \"repositoryHost\": \"laboris\",\n \"repositoryPath\": \"tempor\",\n \"type\": \"proident ullamco et fugiat dolore\"\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The internal server error with this response status code whenever they execute some request handler code that raises an exception.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"cd7fcff2-fd68-475f-97ea-0d58aa6417cd\",\n   \"repositoryHost\": \"\",\n   \"repositoryPath\": \"\",\n   \"type\": \"\"\n  }\n ]\n}"
								},
								{
									"name": "The request is Forbidden. An error response indicates that the client's request is formed correctly, but the REST API refuses to honor it, i.e. the user does not have the necessary permissions for the resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "service-level-agreements",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete service level agreement by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the service level agreement."
												}
											]
										},
										"description": "Deletes a service level agreement by ID. The service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully deleted the service level agreement.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get a service level agreement by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the service level agreement."
												}
											]
										},
										"description": "Retrieves a service level agreement by ID. The service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the service level agreement.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n \"description\": \"reprehenderit qui \",\n \"enabled\": true,\n \"id\": \"sit incididunt sunt\",\n \"name\": \"eu\",\n \"serviceLevelObjectives\": [\n  {\n   \"activeEnforcement\": false,\n   \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n   \"definitionId\": \"Lorem ut cillum anim\",\n   \"inUse\": true,\n   \"name\": \"au\",\n   \"stageType\": \"PROMOTION\",\n   \"valuesList\": [\n    {\n     \"copyType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"typedValues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"valueCardinality\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  {\n   \"activeEnforcement\": true,\n   \"assetType\": \"FILE_SYSTEM\",\n   \"definitionId\": \"ea sint nostrud\",\n   \"inUse\": false,\n   \"name\": \"reprehenderit ullamco aliquip\",\n   \"stageType\": \"CLOUD_TIER\",\n   \"valuesList\": [\n    {\n     \"copyType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"typedValues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"valueCardinality\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  }\n ],\n \"stageType\": \"CLOUD_TIER\",\n \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										{
											"name": "The requested service level agreement does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update service level agreement by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the service level agreement."
												}
											]
										},
										"description": "Updates a service level agreement by ID. The service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the service level agreement.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n \"description\": \"reprehenderit qui \",\n \"enabled\": true,\n \"id\": \"sit incididunt sunt\",\n \"name\": \"eu\",\n \"serviceLevelObjectives\": [\n  {\n   \"activeEnforcement\": false,\n   \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n   \"definitionId\": \"Lorem ut cillum anim\",\n   \"inUse\": true,\n   \"name\": \"au\",\n   \"stageType\": \"PROMOTION\",\n   \"valuesList\": [\n    {\n     \"copyType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"typedValues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"valueCardinality\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  {\n   \"activeEnforcement\": true,\n   \"assetType\": \"FILE_SYSTEM\",\n   \"definitionId\": \"ea sint nostrud\",\n   \"inUse\": false,\n   \"name\": \"reprehenderit ullamco aliquip\",\n   \"stageType\": \"CLOUD_TIER\",\n   \"valuesList\": [\n    {\n     \"copyType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"typedValues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"valueCardinality\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  }\n ],\n \"stageType\": \"CLOUD_TIER\",\n \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all service level agreements.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service-level-agreements"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all service level agreements. Each service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available service level agreements.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"createdAt\": \"1984-01-10T22:31:47.776Z\",\n   \"description\": \"dolore\",\n   \"enabled\": false,\n   \"id\": \"sit exercitation et\",\n   \"name\": \"in aliquip\",\n   \"serviceLevelObjectives\": [\n    {\n     \"activeEnforcement\": true,\n     \"assetType\": \"FILE_SYSTEM\",\n     \"definitionId\": \"ut pariatur commodo\",\n     \"inUse\": false,\n     \"name\": \"laborum Excepteur commodo ad\",\n     \"stageType\": \"REPLICATION\",\n     \"valuesList\": [\n      {\n       \"copyType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"typedValues\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"valueCardinality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    },\n    {\n     \"activeEnforcement\": true,\n     \"assetType\": \"XTREMIO_CONSISTENCY_GROUP\",\n     \"definitionId\": \"do\",\n     \"inUse\": true,\n     \"name\": \"non culpa\",\n     \"stageType\": \"CDR\",\n     \"valuesList\": [\n      {\n       \"copyType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"typedValues\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"valueCardinality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    }\n   ],\n   \"stageType\": \"ALL\",\n   \"updatedAt\": \"1984-03-07T18:53:39.880Z\"\n  },\n  {\n   \"createdAt\": \"1942-12-11T21:39:26.936Z\",\n   \"description\": \"commodo reprehenderit Duis \",\n   \"enabled\": false,\n   \"id\": \"Excepteur pariatur vo\",\n   \"name\": \"nisi reprehenderit aliquip\",\n   \"serviceLevelObjectives\": [\n    {\n     \"activeEnforcement\": false,\n     \"assetType\": \"ORACLE_DATABASE\",\n     \"definitionId\": \"et minim esse\",\n     \"inUse\": true,\n     \"name\": \"sunt dolore irure ea\",\n     \"stageType\": \"PROTECTION\",\n     \"valuesList\": [\n      {\n       \"copyType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"typedValues\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"valueCardinality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    },\n    {\n     \"activeEnforcement\": false,\n     \"assetType\": \"VMAX_STORAGE_GROUP\",\n     \"definitionId\": \"non reprehenderit laboris aute\",\n     \"inUse\": false,\n     \"name\": \"minim cupidatat in et cillum\",\n     \"stageType\": \"CDR\",\n     \"valuesList\": [\n      {\n       \"copyType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"typedValues\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"valueCardinality\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    }\n   ],\n   \"stageType\": \"PROTECTION\",\n   \"updatedAt\": \"1998-09-24T08:06:13.028Z\"\n  }\n ],\n \"page\": {\n  \"number\": 91219239,\n  \"queryState\": \"dolore ea\",\n  \"size\": -4314347,\n  \"totalElements\": -28671130,\n  \"totalPages\": -1857681\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Create a service level agreement.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service-level-agreements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service-level-agreements"
									]
								},
								"description": "Creates a service level agreement. The service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully created the service sevel agreement.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n \"description\": \"reprehenderit qui \",\n \"enabled\": true,\n \"id\": \"sit incididunt sunt\",\n \"name\": \"eu\",\n \"serviceLevelObjectives\": [\n  {\n   \"activeEnforcement\": false,\n   \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n   \"definitionId\": \"Lorem ut cillum anim\",\n   \"inUse\": true,\n   \"name\": \"au\",\n   \"stageType\": \"PROMOTION\",\n   \"valuesList\": [\n    {\n     \"copyType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"typedValues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"valueCardinality\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  {\n   \"activeEnforcement\": true,\n   \"assetType\": \"FILE_SYSTEM\",\n   \"definitionId\": \"ea sint nostrud\",\n   \"inUse\": false,\n   \"name\": \"reprehenderit ullamco aliquip\",\n   \"stageType\": \"CLOUD_TIER\",\n   \"valuesList\": [\n    {\n     \"copyType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"typedValues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"valueCardinality\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  }\n ],\n \"stageType\": \"CLOUD_TIER\",\n \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n \"description\": \"reprehenderit qui \",\n \"enabled\": true,\n \"id\": \"sit incididunt sunt\",\n \"name\": \"eu\",\n \"serviceLevelObjectives\": [\n  {\n   \"activeEnforcement\": false,\n   \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n   \"definitionId\": \"Lorem ut cillum anim\",\n   \"inUse\": true,\n   \"name\": \"au\",\n   \"stageType\": \"PROMOTION\",\n   \"valuesList\": [\n    {\n     \"copyType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"typedValues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"valueCardinality\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  {\n   \"activeEnforcement\": true,\n   \"assetType\": \"FILE_SYSTEM\",\n   \"definitionId\": \"ea sint nostrud\",\n   \"inUse\": false,\n   \"name\": \"reprehenderit ullamco aliquip\",\n   \"stageType\": \"CLOUD_TIER\",\n   \"valuesList\": [\n    {\n     \"copyType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"typedValues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"valueCardinality\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  }\n ],\n \"stageType\": \"CLOUD_TIER\",\n \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"1982-06-25T12:07:20.475Z\",\n    \"description\": \"reprehenderit qui \",\n    \"enabled\": true,\n    \"id\": \"sit incididunt sunt\",\n    \"name\": \"eu\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": false,\n            \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n            \"definitionId\": \"Lorem ut cillum anim\",\n            \"inUse\": true,\n            \"name\": \"au\",\n            \"stageType\": \"PROMOTION\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": true,\n            \"assetType\": \"FILE_SYSTEM\",\n            \"definitionId\": \"ea sint nostrud\",\n            \"inUse\": false,\n            \"name\": \"reprehenderit ullamco aliquip\",\n            \"stageType\": \"CLOUD_TIER\",\n            \"valuesList\": [\n                {\n                    \"copyType\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"typedValues\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"valueCardinality\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"CLOUD_TIER\",\n    \"updatedAt\": \"1958-02-04T22:35:07.717Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "service-level-objectives",
					"item": [
						{
							"name": "Get all service level objectives.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service-level-objectives"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all service level objectives. The each service level objective defines one compliance type. The compliance type must follow each service service level objective that is required.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available service level objectives.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"description\": \"cillum minim et\",\n   \"id\": \"cillum labore\",\n   \"mandatory\": true,\n   \"name\": \"consectetur Ut\",\n   \"order\": 47700606,\n   \"ruleExecutionClass\": \"enim sint magna pariatur\",\n   \"stageType\": \"CDR\",\n   \"valueCardinality\": \"SINGLE\"\n  },\n  {\n   \"description\": \"sint magna\",\n   \"id\": \"enim Excepteur\",\n   \"mandatory\": true,\n   \"name\": \"commodo la\",\n   \"order\": -16262517,\n   \"ruleExecutionClass\": \"eiusmod dolor sunt\",\n   \"stageType\": \"PROMOTION\",\n   \"valueCardinality\": \"FLAT_LIST\"\n  }\n ],\n \"page\": {\n  \"number\": 59687351,\n  \"queryState\": \"aliqua enim sint\",\n  \"size\": 51175515,\n  \"totalElements\": 67592661,\n  \"totalPages\": -67023543\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Get service level objective by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service-level-objectives",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute ut id cillum aliqua",
											"type": "string",
											"description": "(Required) Service level objective ID."
										}
									]
								},
								"description": "Retrieves service level objective by ID. The each service level objective defines one compliance type. The compliance type must follow each service service level objective that is required.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully returned the service level objective.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"et ea reprehenderit adipisicing culpa\",\n \"id\": \"deserunt non aliquip\",\n \"mandatory\": false,\n \"name\": \"enim consectetur sit\",\n \"order\": -76394701,\n \"ruleExecutionClass\": \"aliquip sunt adipisicing dolore tempor\",\n \"stageType\": \"REPLICATION\",\n \"valueCardinality\": \"FLAT_LIST\"\n}"
								},
								{
									"name": "The requested service level objective does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "smtp",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete SMTP configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) SMTP configuration ID."
												}
											]
										},
										"description": "Deletes SMTP configuration by ID.\nNo email is sent once SMTP configuration is deleted.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"fugiat\",\n \"mailServer\": \"Excepteur ea ipsum ut\",\n \"mailFrom\": \"dolor\",\n \"password\": \"eu pariatur sunt minim magna\",\n \"port\": 37548576,\n \"username\": \"aliquip\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a SMTP configuration with the specified ID.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Deleted the SMTP with the specified ID.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get SMTP configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Unique identifier for smtp",
													"type": "string",
													"description": "(Required) SMTP configuration ID."
												}
											]
										},
										"description": "Retrieves SMTP configuration by the specified ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Found and returned the SMTP configuration with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"fugiat\",\n \"mailServer\": \"Excepteur ea ipsum ut\",\n \"mailFrom\": \"dolor\",\n \"password\": \"eu pariatur sunt minim magna\",\n \"port\": 37548576,\n \"username\": \"aliquip\"\n}"
										},
										{
											"name": "Cannot find an SMTP configuration with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update SMTP configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) SMTP configuration ID sent in request."
												}
											]
										},
										"description": "Updates SMTP configuration by ID.\nYou can update the mailserver, mailFrom, and mailRecipient.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot change the SMTP configuration in the current node state.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The submitted SMTP configuration has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find an SMTP configuration with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the SMTP configuration.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"fugiat\",\n \"mailServer\": \"Excepteur ea ipsum ut\",\n \"mailFrom\": \"dolor\",\n \"password\": \"eu pariatur sunt minim magna\",\n \"port\": 37548576,\n \"username\": \"aliquip\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all SMTP configuration information.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"smtp"
									]
								},
								"description": "Retrieves Simple Mail Transfer Protocol (SMTP) configuration. Returns the list of SMTP setup in the appliance.\nReturns only one SMTP configuration.\nReturns ID, mailserver, mailFrom, mailRecipient, and port.\n\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Located and returned the available SMTP configuration successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"sed proident fugiat enim\",\n   \"mailServer\": \"do commodo\",\n   \"mailFrom\": \"irure commodo laborum dolor ut\",\n   \"password\": \"id ullamco reprehenderit\",\n   \"port\": -68476650,\n   \"username\": \"consectetur minim\"\n  },\n  {\n   \"id\": \"reprehenderit ut\",\n   \"mailServer\": \"irure labore adipisicing voluptate\",\n   \"mailFrom\": \"laboris nu\",\n   \"password\": \"Duis qui Excepteur\",\n   \"port\": -67458688,\n   \"username\": \"ut Ut\"\n  }\n ],\n \"page\": {\n  \"number\": -96594215,\n  \"queryState\": \"enim consequat esse fugiat mollit\",\n  \"size\": -69142011,\n  \"totalElements\": -56336084,\n  \"totalPages\": 47692066\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create SMTP configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"smtp"
									]
								},
								"description": "Creates the SMTP configuration, which requires mailserver, mailFrom:admin(email), and mailRecipient:email.\nThe email setup on the PowerProtect Data Manager System Settings area enables you to configure SMTP email server information to send emails for resetting local user passwords and customized alert notifications.\nOnly one SMTP configuration is allowed.\n\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The submitted SMTP has a syntax error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created new SMTP.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"fugiat\",\n \"mailServer\": \"Excepteur ea ipsum ut\",\n \"mailFrom\": \"dolor\",\n \"password\": \"eu pariatur sunt minim magna\",\n \"port\": 37548576,\n \"username\": \"aliquip\"\n}"
								},
								{
									"name": "Only one SMTP is allowed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot find a SMTP with the specified ID.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"fugiat\",\n    \"mailServer\": \"Excepteur ea ipsum ut\",\n    \"mailFrom\": \"dolor\",\n    \"password\": \"eu pariatur sunt minim magna\",\n    \"port\": 37548576,\n    \"username\": \"aliquip\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Send a test email.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mailServer\": \"deserunt\",\n    \"recipient\": \"in enim\",\n    \"mailFrom\": \"do aliqua\",\n    \"password\": \"Duis consequat\",\n    \"port\": 81044772,\n    \"username\": \"enim veniam\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/smtp/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"smtp",
										"test"
									]
								},
								"description": "Sends a test email.\nRequires mailRecipient and mailserver. Includes mailFrom: email.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mailServer\": \"deserunt\",\n    \"recipient\": \"in enim\",\n    \"mailFrom\": \"do aliqua\",\n    \"password\": \"Duis consequat\",\n    \"port\": 81044772,\n    \"username\": \"enim veniam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												"test"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mailServer\": \"deserunt\",\n    \"recipient\": \"in enim\",\n    \"mailFrom\": \"do aliqua\",\n    \"password\": \"Duis consequat\",\n    \"port\": 81044772,\n    \"username\": \"enim veniam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												"test"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test email sent successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mailServer\": \"deserunt\",\n    \"recipient\": \"in enim\",\n    \"mailFrom\": \"do aliqua\",\n    \"password\": \"Duis consequat\",\n    \"port\": 81044772,\n    \"username\": \"enim veniam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												"test"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "storage-systems",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a storage system by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) ID of the storage system."
												}
											]
										},
										"description": "Retrieves a storage system by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully returned the storage system.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"inventorySource\": {\n   \"id\": \"eu cillum dolor\",\n   \"name\": \"dolor velit in officia\"\n  },\n  \"location\": {\n   \"id\": \"qui amet\",\n   \"name\": \"eiusmod veniam\"\n  }\n },\n \"capacityUtilization\": 61502452.91692203,\n \"createdAt\": \"1952-12-09T14:38:25.419Z\",\n \"ddLocationId\": \"id occaecat non pariatur Excepteur\",\n \"details\": {\n  \"dataDomain\": {\n   \"capacityQuotasSupported\": false,\n   \"cloudEnabled\": true,\n   \"cloudTierLicensed\": false,\n   \"compressionFactor\": -4911891.216189399,\n   \"ddboostLicensed\": false,\n   \"encryptionLicensed\": true,\n   \"model\": \"la\",\n   \"percentUsed\": 85683681.89345187,\n   \"preferredInterfaces\": [\n    {\n     \"networkAddress\": \"dolor sint incididunt\",\n     \"networkLabel\": \"non enim dolore Ut\",\n     \"networkName\": \"Ut do\",\n     \"speed\": 92497330.64673263\n    },\n    {\n     \"networkAddress\": \"proident pariatur nisi\",\n     \"networkLabel\": \"et irure nulla Duis\",\n     \"networkName\": \"\",\n     \"speed\": -66050854.63969114\n    }\n   ],\n   \"preferredNetworkSupported\": true,\n   \"replicationEncryptionEnabled\": false,\n   \"replicationLicensed\": true,\n   \"retentionLockComplianceLicensed\": true,\n   \"retentionLockGovernanceLicensed\": true,\n   \"retentionLockSupported\": true,\n   \"serialNumber\": \"voluptate te\",\n   \"streamQuotasSupported\": true,\n   \"totalSize\": 26212399.84825903,\n   \"totalUsed\": -54556239.6294411,\n   \"vdiskEnabled\": true,\n   \"version\": \"culpa amet sit ipsum\"\n  },\n  \"recoverPoint\": {\n   \"protectedSpace\": -60033904.56556139,\n   \"serialNumber\": \"reprehenderit ex laboris non\",\n   \"totalCapacityManaged\": 10931088.887111515,\n   \"version\": \"consectetur\"\n  },\n  \"vmax\": {\n   \"cacheSize\": -71747252,\n   \"model\": \"irure\",\n   \"serialNumber\": \"irure ut laborum\",\n   \"totalSize\": -81194241.69416764,\n   \"totalUsed\": -28497635.116304606\n  },\n  \"xio\": {\n   \"serialNumber\": \"cupidatat sit eu adipisicing reprehenderit\",\n   \"totalSize\": 31205261.580101147,\n   \"totalUsed\": -40072637.93587312,\n   \"version\": \"sint fugiat pariatur ullamco\"\n  }\n },\n \"id\": \"reprehenderit dolore\",\n \"lastDiscovered\": \"2016-12-04T02:59:43.758Z\",\n \"lastDiscoveryAt\": \"1956-06-06T20:42:22.092Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"aliquip enim exercitation\",\n  \"messageID\": \"consectetur pariatur Excepteur\",\n  \"remediation\": \"au\",\n  \"status\": \"UNKNOWN\",\n  \"summaries\": [\n   \"consectetur in Lorem sed proident\",\n   \"cupidatat velit aute\"\n  ]\n },\n \"lastDiscoveryStatus\": \"NOT_DETECTED\",\n \"lastDiscoveryTaskId\": \"laboris occaecat aliqua\",\n \"local\": true,\n \"locationId\": \"enim sed\",\n \"name\": \"culpa pariatur deserunt quis magna\",\n \"operatingSystem\": {\n  \"name\": \"dolor\",\n  \"version\": \"quis ad Ut\"\n },\n \"type\": \"RECOVERPOINT_SYSTEM\",\n \"updatedAt\": \"1947-07-19T15:29:54.452Z\"\n}"
										},
										{
											"name": "The requested storage system does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Update storage system location by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"capacityUtilization\": -47046100.7725087,\n    \"createdAt\": \"2005-04-18T08:50:38.512Z\",\n    \"ddLocationId\": \"sint\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": false,\n            \"cloudEnabled\": false,\n            \"cloudTierLicensed\": false,\n            \"compressionFactor\": -9437268.847061157,\n            \"ddboostLicensed\": false,\n            \"encryptionLicensed\": false,\n            \"model\": \"laborum labore ipsum sunt in\",\n            \"percentUsed\": -52995439.15788956,\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"consequat velit nisi sit\",\n                    \"networkLabel\": \"enim sint tempor\",\n                    \"networkName\": \"aliquip pariatur ullamco amet eu\",\n                    \"speed\": 43650464.50225893\n                },\n                {\n                    \"networkAddress\": \"consequat\",\n                    \"networkLabel\": \"est\",\n                    \"networkName\": \"in eiusmod dolor id non\",\n                    \"speed\": 18872350.619909823\n                }\n            ],\n            \"preferredNetworkSupported\": true,\n            \"replicationEncryptionEnabled\": false,\n            \"replicationLicensed\": false,\n            \"retentionLockComplianceLicensed\": true,\n            \"retentionLockGovernanceLicensed\": true,\n            \"retentionLockSupported\": true,\n            \"serialNumber\": \"dolore ullamco ut\",\n            \"streamQuotasSupported\": true,\n            \"totalSize\": -61803921.25555811,\n            \"totalUsed\": 95783438.54751909,\n            \"vdiskEnabled\": true,\n            \"version\": \"sint\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": -61469036.131261446,\n            \"serialNumber\": \"\",\n            \"totalCapacityManaged\": -34514637.037869856,\n            \"version\": \"incididunt anim Lorem\"\n        },\n        \"vmax\": {\n            \"cacheSize\": 13528203,\n            \"model\": \"ut nisi dolor\",\n            \"serialNumber\": \"esse incididunt\",\n            \"totalSize\": 18340148.906439558,\n            \"totalUsed\": -96275083.34436499\n        },\n        \"xio\": {\n            \"serialNumber\": \"non Excepteur aute in\",\n            \"totalSize\": -54921544.67671906,\n            \"totalUsed\": -58512865.96172018,\n            \"version\": \"culpa velit sed pariatur\"\n        }\n    },\n    \"id\": \"ut voluptate sunt proident\",\n    \"lastDiscovered\": \"1987-08-13T03:35:39.017Z\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"sint nulla ut aliquip\",\n        \"messageID\": \"anim\",\n        \"remediation\": \"id laborum voluptate\",\n        \"status\": \"OK_WITH_ERRORS\",\n        \"summaries\": [\n            \"officia\",\n            \"elit Ut quis pariatur anim\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"NEW\",\n    \"local\": true,\n    \"locationId\": \"sit esse labore\",\n    \"name\": \"velit culpa et esse incididunt\",\n    \"operatingSystem\": {\n        \"name\": \"Duis\",\n        \"version\": \"ut labore dolor\"\n    },\n    \"type\": \"CDR_REGION_SYSTEM\",\n    \"updatedAt\": \"1979-05-25T23:30:10.547Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The storage system ID."
												}
											]
										},
										"description": "Updates storage system location by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": -47046100.7725087,\n    \"createdAt\": \"2005-04-18T08:50:38.512Z\",\n    \"ddLocationId\": \"sint\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": false,\n            \"cloudEnabled\": false,\n            \"cloudTierLicensed\": false,\n            \"compressionFactor\": -9437268.847061157,\n            \"ddboostLicensed\": false,\n            \"encryptionLicensed\": false,\n            \"model\": \"laborum labore ipsum sunt in\",\n            \"percentUsed\": -52995439.15788956,\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"consequat velit nisi sit\",\n                    \"networkLabel\": \"enim sint tempor\",\n                    \"networkName\": \"aliquip pariatur ullamco amet eu\",\n                    \"speed\": 43650464.50225893\n                },\n                {\n                    \"networkAddress\": \"consequat\",\n                    \"networkLabel\": \"est\",\n                    \"networkName\": \"in eiusmod dolor id non\",\n                    \"speed\": 18872350.619909823\n                }\n            ],\n            \"preferredNetworkSupported\": true,\n            \"replicationEncryptionEnabled\": false,\n            \"replicationLicensed\": false,\n            \"retentionLockComplianceLicensed\": true,\n            \"retentionLockGovernanceLicensed\": true,\n            \"retentionLockSupported\": true,\n            \"serialNumber\": \"dolore ullamco ut\",\n            \"streamQuotasSupported\": true,\n            \"totalSize\": -61803921.25555811,\n            \"totalUsed\": 95783438.54751909,\n            \"vdiskEnabled\": true,\n            \"version\": \"sint\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": -61469036.131261446,\n            \"serialNumber\": \"\",\n            \"totalCapacityManaged\": -34514637.037869856,\n            \"version\": \"incididunt anim Lorem\"\n        },\n        \"vmax\": {\n            \"cacheSize\": 13528203,\n            \"model\": \"ut nisi dolor\",\n            \"serialNumber\": \"esse incididunt\",\n            \"totalSize\": 18340148.906439558,\n            \"totalUsed\": -96275083.34436499\n        },\n        \"xio\": {\n            \"serialNumber\": \"non Excepteur aute in\",\n            \"totalSize\": -54921544.67671906,\n            \"totalUsed\": -58512865.96172018,\n            \"version\": \"culpa velit sed pariatur\"\n        }\n    },\n    \"id\": \"ut voluptate sunt proident\",\n    \"lastDiscovered\": \"1987-08-13T03:35:39.017Z\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"sint nulla ut aliquip\",\n        \"messageID\": \"anim\",\n        \"remediation\": \"id laborum voluptate\",\n        \"status\": \"OK_WITH_ERRORS\",\n        \"summaries\": [\n            \"officia\",\n            \"elit Ut quis pariatur anim\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"NEW\",\n    \"local\": true,\n    \"locationId\": \"sit esse labore\",\n    \"name\": \"velit culpa et esse incididunt\",\n    \"operatingSystem\": {\n        \"name\": \"Duis\",\n        \"version\": \"ut labore dolor\"\n    },\n    \"type\": \"CDR_REGION_SYSTEM\",\n    \"updatedAt\": \"1979-05-25T23:30:10.547Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Successfully updated the storage system.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": -47046100.7725087,\n    \"createdAt\": \"2005-04-18T08:50:38.512Z\",\n    \"ddLocationId\": \"sint\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": false,\n            \"cloudEnabled\": false,\n            \"cloudTierLicensed\": false,\n            \"compressionFactor\": -9437268.847061157,\n            \"ddboostLicensed\": false,\n            \"encryptionLicensed\": false,\n            \"model\": \"laborum labore ipsum sunt in\",\n            \"percentUsed\": -52995439.15788956,\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"consequat velit nisi sit\",\n                    \"networkLabel\": \"enim sint tempor\",\n                    \"networkName\": \"aliquip pariatur ullamco amet eu\",\n                    \"speed\": 43650464.50225893\n                },\n                {\n                    \"networkAddress\": \"consequat\",\n                    \"networkLabel\": \"est\",\n                    \"networkName\": \"in eiusmod dolor id non\",\n                    \"speed\": 18872350.619909823\n                }\n            ],\n            \"preferredNetworkSupported\": true,\n            \"replicationEncryptionEnabled\": false,\n            \"replicationLicensed\": false,\n            \"retentionLockComplianceLicensed\": true,\n            \"retentionLockGovernanceLicensed\": true,\n            \"retentionLockSupported\": true,\n            \"serialNumber\": \"dolore ullamco ut\",\n            \"streamQuotasSupported\": true,\n            \"totalSize\": -61803921.25555811,\n            \"totalUsed\": 95783438.54751909,\n            \"vdiskEnabled\": true,\n            \"version\": \"sint\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": -61469036.131261446,\n            \"serialNumber\": \"\",\n            \"totalCapacityManaged\": -34514637.037869856,\n            \"version\": \"incididunt anim Lorem\"\n        },\n        \"vmax\": {\n            \"cacheSize\": 13528203,\n            \"model\": \"ut nisi dolor\",\n            \"serialNumber\": \"esse incididunt\",\n            \"totalSize\": 18340148.906439558,\n            \"totalUsed\": -96275083.34436499\n        },\n        \"xio\": {\n            \"serialNumber\": \"non Excepteur aute in\",\n            \"totalSize\": -54921544.67671906,\n            \"totalUsed\": -58512865.96172018,\n            \"version\": \"culpa velit sed pariatur\"\n        }\n    },\n    \"id\": \"ut voluptate sunt proident\",\n    \"lastDiscovered\": \"1987-08-13T03:35:39.017Z\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"sint nulla ut aliquip\",\n        \"messageID\": \"anim\",\n        \"remediation\": \"id laborum voluptate\",\n        \"status\": \"OK_WITH_ERRORS\",\n        \"summaries\": [\n            \"officia\",\n            \"elit Ut quis pariatur anim\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"NEW\",\n    \"local\": true,\n    \"locationId\": \"sit esse labore\",\n    \"name\": \"velit culpa et esse incididunt\",\n    \"operatingSystem\": {\n        \"name\": \"Duis\",\n        \"version\": \"ut labore dolor\"\n    },\n    \"type\": \"CDR_REGION_SYSTEM\",\n    \"updatedAt\": \"1979-05-25T23:30:10.547Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"inventorySource\": {\n   \"id\": \"eu cillum dolor\",\n   \"name\": \"dolor velit in officia\"\n  },\n  \"location\": {\n   \"id\": \"qui amet\",\n   \"name\": \"eiusmod veniam\"\n  }\n },\n \"capacityUtilization\": 61502452.91692203,\n \"createdAt\": \"1952-12-09T14:38:25.419Z\",\n \"ddLocationId\": \"id occaecat non pariatur Excepteur\",\n \"details\": {\n  \"dataDomain\": {\n   \"capacityQuotasSupported\": false,\n   \"cloudEnabled\": true,\n   \"cloudTierLicensed\": false,\n   \"compressionFactor\": -4911891.216189399,\n   \"ddboostLicensed\": false,\n   \"encryptionLicensed\": true,\n   \"model\": \"la\",\n   \"percentUsed\": 85683681.89345187,\n   \"preferredInterfaces\": [\n    {\n     \"networkAddress\": \"dolor sint incididunt\",\n     \"networkLabel\": \"non enim dolore Ut\",\n     \"networkName\": \"Ut do\",\n     \"speed\": 92497330.64673263\n    },\n    {\n     \"networkAddress\": \"proident pariatur nisi\",\n     \"networkLabel\": \"et irure nulla Duis\",\n     \"networkName\": \"\",\n     \"speed\": -66050854.63969114\n    }\n   ],\n   \"preferredNetworkSupported\": true,\n   \"replicationEncryptionEnabled\": false,\n   \"replicationLicensed\": true,\n   \"retentionLockComplianceLicensed\": true,\n   \"retentionLockGovernanceLicensed\": true,\n   \"retentionLockSupported\": true,\n   \"serialNumber\": \"voluptate te\",\n   \"streamQuotasSupported\": true,\n   \"totalSize\": 26212399.84825903,\n   \"totalUsed\": -54556239.6294411,\n   \"vdiskEnabled\": true,\n   \"version\": \"culpa amet sit ipsum\"\n  },\n  \"recoverPoint\": {\n   \"protectedSpace\": -60033904.56556139,\n   \"serialNumber\": \"reprehenderit ex laboris non\",\n   \"totalCapacityManaged\": 10931088.887111515,\n   \"version\": \"consectetur\"\n  },\n  \"vmax\": {\n   \"cacheSize\": -71747252,\n   \"model\": \"irure\",\n   \"serialNumber\": \"irure ut laborum\",\n   \"totalSize\": -81194241.69416764,\n   \"totalUsed\": -28497635.116304606\n  },\n  \"xio\": {\n   \"serialNumber\": \"cupidatat sit eu adipisicing reprehenderit\",\n   \"totalSize\": 31205261.580101147,\n   \"totalUsed\": -40072637.93587312,\n   \"version\": \"sint fugiat pariatur ullamco\"\n  }\n },\n \"id\": \"reprehenderit dolore\",\n \"lastDiscovered\": \"2016-12-04T02:59:43.758Z\",\n \"lastDiscoveryAt\": \"1956-06-06T20:42:22.092Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"aliquip enim exercitation\",\n  \"messageID\": \"consectetur pariatur Excepteur\",\n  \"remediation\": \"au\",\n  \"status\": \"UNKNOWN\",\n  \"summaries\": [\n   \"consectetur in Lorem sed proident\",\n   \"cupidatat velit aute\"\n  ]\n },\n \"lastDiscoveryStatus\": \"NOT_DETECTED\",\n \"lastDiscoveryTaskId\": \"laboris occaecat aliqua\",\n \"local\": true,\n \"locationId\": \"enim sed\",\n \"name\": \"culpa pariatur deserunt quis magna\",\n \"operatingSystem\": {\n  \"name\": \"dolor\",\n  \"version\": \"quis ad Ut\"\n },\n \"type\": \"RECOVERPOINT_SYSTEM\",\n \"updatedAt\": \"1947-07-19T15:29:54.452Z\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": -47046100.7725087,\n    \"createdAt\": \"2005-04-18T08:50:38.512Z\",\n    \"ddLocationId\": \"sint\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": false,\n            \"cloudEnabled\": false,\n            \"cloudTierLicensed\": false,\n            \"compressionFactor\": -9437268.847061157,\n            \"ddboostLicensed\": false,\n            \"encryptionLicensed\": false,\n            \"model\": \"laborum labore ipsum sunt in\",\n            \"percentUsed\": -52995439.15788956,\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"consequat velit nisi sit\",\n                    \"networkLabel\": \"enim sint tempor\",\n                    \"networkName\": \"aliquip pariatur ullamco amet eu\",\n                    \"speed\": 43650464.50225893\n                },\n                {\n                    \"networkAddress\": \"consequat\",\n                    \"networkLabel\": \"est\",\n                    \"networkName\": \"in eiusmod dolor id non\",\n                    \"speed\": 18872350.619909823\n                }\n            ],\n            \"preferredNetworkSupported\": true,\n            \"replicationEncryptionEnabled\": false,\n            \"replicationLicensed\": false,\n            \"retentionLockComplianceLicensed\": true,\n            \"retentionLockGovernanceLicensed\": true,\n            \"retentionLockSupported\": true,\n            \"serialNumber\": \"dolore ullamco ut\",\n            \"streamQuotasSupported\": true,\n            \"totalSize\": -61803921.25555811,\n            \"totalUsed\": 95783438.54751909,\n            \"vdiskEnabled\": true,\n            \"version\": \"sint\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": -61469036.131261446,\n            \"serialNumber\": \"\",\n            \"totalCapacityManaged\": -34514637.037869856,\n            \"version\": \"incididunt anim Lorem\"\n        },\n        \"vmax\": {\n            \"cacheSize\": 13528203,\n            \"model\": \"ut nisi dolor\",\n            \"serialNumber\": \"esse incididunt\",\n            \"totalSize\": 18340148.906439558,\n            \"totalUsed\": -96275083.34436499\n        },\n        \"xio\": {\n            \"serialNumber\": \"non Excepteur aute in\",\n            \"totalSize\": -54921544.67671906,\n            \"totalUsed\": -58512865.96172018,\n            \"version\": \"culpa velit sed pariatur\"\n        }\n    },\n    \"id\": \"ut voluptate sunt proident\",\n    \"lastDiscovered\": \"1987-08-13T03:35:39.017Z\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"sint nulla ut aliquip\",\n        \"messageID\": \"anim\",\n        \"remediation\": \"id laborum voluptate\",\n        \"status\": \"OK_WITH_ERRORS\",\n        \"summaries\": [\n            \"officia\",\n            \"elit Ut quis pariatur anim\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"NEW\",\n    \"local\": true,\n    \"locationId\": \"sit esse labore\",\n    \"name\": \"velit culpa et esse incididunt\",\n    \"operatingSystem\": {\n        \"name\": \"Duis\",\n        \"version\": \"ut labore dolor\"\n    },\n    \"type\": \"CDR_REGION_SYSTEM\",\n    \"updatedAt\": \"1979-05-25T23:30:10.547Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": -47046100.7725087,\n    \"createdAt\": \"2005-04-18T08:50:38.512Z\",\n    \"ddLocationId\": \"sint\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": false,\n            \"cloudEnabled\": false,\n            \"cloudTierLicensed\": false,\n            \"compressionFactor\": -9437268.847061157,\n            \"ddboostLicensed\": false,\n            \"encryptionLicensed\": false,\n            \"model\": \"laborum labore ipsum sunt in\",\n            \"percentUsed\": -52995439.15788956,\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"consequat velit nisi sit\",\n                    \"networkLabel\": \"enim sint tempor\",\n                    \"networkName\": \"aliquip pariatur ullamco amet eu\",\n                    \"speed\": 43650464.50225893\n                },\n                {\n                    \"networkAddress\": \"consequat\",\n                    \"networkLabel\": \"est\",\n                    \"networkName\": \"in eiusmod dolor id non\",\n                    \"speed\": 18872350.619909823\n                }\n            ],\n            \"preferredNetworkSupported\": true,\n            \"replicationEncryptionEnabled\": false,\n            \"replicationLicensed\": false,\n            \"retentionLockComplianceLicensed\": true,\n            \"retentionLockGovernanceLicensed\": true,\n            \"retentionLockSupported\": true,\n            \"serialNumber\": \"dolore ullamco ut\",\n            \"streamQuotasSupported\": true,\n            \"totalSize\": -61803921.25555811,\n            \"totalUsed\": 95783438.54751909,\n            \"vdiskEnabled\": true,\n            \"version\": \"sint\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": -61469036.131261446,\n            \"serialNumber\": \"\",\n            \"totalCapacityManaged\": -34514637.037869856,\n            \"version\": \"incididunt anim Lorem\"\n        },\n        \"vmax\": {\n            \"cacheSize\": 13528203,\n            \"model\": \"ut nisi dolor\",\n            \"serialNumber\": \"esse incididunt\",\n            \"totalSize\": 18340148.906439558,\n            \"totalUsed\": -96275083.34436499\n        },\n        \"xio\": {\n            \"serialNumber\": \"non Excepteur aute in\",\n            \"totalSize\": -54921544.67671906,\n            \"totalUsed\": -58512865.96172018,\n            \"version\": \"culpa velit sed pariatur\"\n        }\n    },\n    \"id\": \"ut voluptate sunt proident\",\n    \"lastDiscovered\": \"1987-08-13T03:35:39.017Z\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"sint nulla ut aliquip\",\n        \"messageID\": \"anim\",\n        \"remediation\": \"id laborum voluptate\",\n        \"status\": \"OK_WITH_ERRORS\",\n        \"summaries\": [\n            \"officia\",\n            \"elit Ut quis pariatur anim\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"NEW\",\n    \"local\": true,\n    \"locationId\": \"sit esse labore\",\n    \"name\": \"velit culpa et esse incididunt\",\n    \"operatingSystem\": {\n        \"name\": \"Duis\",\n        \"version\": \"ut labore dolor\"\n    },\n    \"type\": \"CDR_REGION_SYSTEM\",\n    \"updatedAt\": \"1979-05-25T23:30:10.547Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": -47046100.7725087,\n    \"createdAt\": \"2005-04-18T08:50:38.512Z\",\n    \"ddLocationId\": \"sint\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": false,\n            \"cloudEnabled\": false,\n            \"cloudTierLicensed\": false,\n            \"compressionFactor\": -9437268.847061157,\n            \"ddboostLicensed\": false,\n            \"encryptionLicensed\": false,\n            \"model\": \"laborum labore ipsum sunt in\",\n            \"percentUsed\": -52995439.15788956,\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"consequat velit nisi sit\",\n                    \"networkLabel\": \"enim sint tempor\",\n                    \"networkName\": \"aliquip pariatur ullamco amet eu\",\n                    \"speed\": 43650464.50225893\n                },\n                {\n                    \"networkAddress\": \"consequat\",\n                    \"networkLabel\": \"est\",\n                    \"networkName\": \"in eiusmod dolor id non\",\n                    \"speed\": 18872350.619909823\n                }\n            ],\n            \"preferredNetworkSupported\": true,\n            \"replicationEncryptionEnabled\": false,\n            \"replicationLicensed\": false,\n            \"retentionLockComplianceLicensed\": true,\n            \"retentionLockGovernanceLicensed\": true,\n            \"retentionLockSupported\": true,\n            \"serialNumber\": \"dolore ullamco ut\",\n            \"streamQuotasSupported\": true,\n            \"totalSize\": -61803921.25555811,\n            \"totalUsed\": 95783438.54751909,\n            \"vdiskEnabled\": true,\n            \"version\": \"sint\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": -61469036.131261446,\n            \"serialNumber\": \"\",\n            \"totalCapacityManaged\": -34514637.037869856,\n            \"version\": \"incididunt anim Lorem\"\n        },\n        \"vmax\": {\n            \"cacheSize\": 13528203,\n            \"model\": \"ut nisi dolor\",\n            \"serialNumber\": \"esse incididunt\",\n            \"totalSize\": 18340148.906439558,\n            \"totalUsed\": -96275083.34436499\n        },\n        \"xio\": {\n            \"serialNumber\": \"non Excepteur aute in\",\n            \"totalSize\": -54921544.67671906,\n            \"totalUsed\": -58512865.96172018,\n            \"version\": \"culpa velit sed pariatur\"\n        }\n    },\n    \"id\": \"ut voluptate sunt proident\",\n    \"lastDiscovered\": \"1987-08-13T03:35:39.017Z\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"sint nulla ut aliquip\",\n        \"messageID\": \"anim\",\n        \"remediation\": \"id laborum voluptate\",\n        \"status\": \"OK_WITH_ERRORS\",\n        \"summaries\": [\n            \"officia\",\n            \"elit Ut quis pariatur anim\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"NEW\",\n    \"local\": true,\n    \"locationId\": \"sit esse labore\",\n    \"name\": \"velit culpa et esse incididunt\",\n    \"operatingSystem\": {\n        \"name\": \"Duis\",\n        \"version\": \"ut labore dolor\"\n    },\n    \"type\": \"CDR_REGION_SYSTEM\",\n    \"updatedAt\": \"1979-05-25T23:30:10.547Z\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all storage systems.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"storage-systems"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all **Storage Systems** in the PowerProtect Data Manager including Data Domain systems, PowerProtect systems, and other local or external storage systems.\n**Storage Systems** are used to store the asset data regarding backing up or replicating assets.\nThis API request belongs to the storage management API.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Successfully returned available storage systems.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"_embedded\": {\n    \"inventorySource\": {\n     \"id\": \"mollit ullamco tempor\",\n     \"name\": \"fugiat dolore Ut laborum esse\"\n    },\n    \"location\": {\n     \"id\": \"et cupidatat\",\n     \"name\": \"laboris occaecat id amet\"\n    }\n   },\n   \"capacityUtilization\": 43790675.6290451,\n   \"createdAt\": \"1979-09-26T08:45:47.324Z\",\n   \"ddLocationId\": \"cul\",\n   \"details\": {\n    \"dataDomain\": {\n     \"capacityQuotasSupported\": false,\n     \"cloudEnabled\": false,\n     \"cloudTierLicensed\": true,\n     \"compressionFactor\": -91624213.30431978,\n     \"ddboostLicensed\": true,\n     \"encryptionLicensed\": true,\n     \"model\": \"aliquip ea ullamco\",\n     \"percentUsed\": 49788061.18799129,\n     \"preferredInterfaces\": [\n      {\n       \"networkAddress\": \"incididunt id\",\n       \"networkLabel\": \"aliqua aliquip\",\n       \"networkName\": \"sit officia et exercitation\",\n       \"speed\": 13025981.883629441\n      },\n      {\n       \"networkAddress\": \"cillum laborum sed exercitation ex\",\n       \"networkLabel\": \"ut laborum sit incididunt\",\n       \"networkName\": \"quis amet\",\n       \"speed\": -59352886.64666309\n      }\n     ],\n     \"preferredNetworkSupported\": false,\n     \"replicationEncryptionEnabled\": false,\n     \"replicationLicensed\": true,\n     \"retentionLockComplianceLicensed\": true,\n     \"retentionLockGovernanceLicensed\": true,\n     \"retentionLockSupported\": true,\n     \"serialNumber\": \"ut commodo l\",\n     \"streamQuotasSupported\": true,\n     \"totalSize\": -39771985.08129556,\n     \"totalUsed\": 43838516.925088555,\n     \"vdiskEnabled\": true,\n     \"version\": \"anim in\"\n    },\n    \"recoverPoint\": {\n     \"protectedSpace\": -94848984.57177824,\n     \"serialNumber\": \"exercitation adipisicing\",\n     \"totalCapacityManaged\": 39355284.60337588,\n     \"version\": \"nulla dolore\"\n    },\n    \"vmax\": {\n     \"cacheSize\": 32568078,\n     \"model\": \"magna occaecat pariatur non qui\",\n     \"serialNumber\": \"ve\",\n     \"totalSize\": 86261593.7207914,\n     \"totalUsed\": 25744067.895973593\n    },\n    \"xio\": {\n     \"serialNumber\": \"Excepteur do\",\n     \"totalSize\": -67896080.77998622,\n     \"totalUsed\": 55363858.1887767,\n     \"version\": \"tempor non commodo nisi enim\"\n    }\n   },\n   \"id\": \"nisi\",\n   \"lastDiscovered\": \"2001-07-22T19:11:27.847Z\",\n   \"lastDiscoveryAt\": \"1964-01-05T18:37:41.350Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"non veniam\",\n    \"messageID\": \"in Ut Duis eu in\",\n    \"remediation\": \"adipisicing culpa in Lorem ven\",\n    \"status\": \"OK_WITH_ERRORS\",\n    \"summaries\": [\n     \"tempor esse dolore et proident\",\n     \"id occaecat magna nostrud\"\n    ]\n   },\n   \"lastDiscoveryStatus\": \"NEW\",\n   \"lastDiscoveryTaskId\": \"ullamco in nisi est\",\n   \"local\": true,\n   \"locationId\": \"quis laborum magna\",\n   \"name\": \"non ex nulla irure in\",\n   \"operatingSystem\": {\n    \"name\": \"elit nostrud commodo sit ullamco\",\n    \"version\": \"minim irure ad\"\n   },\n   \"type\": \"VMAX_STORAGE_SYSTEM\",\n   \"updatedAt\": \"1994-03-16T06:36:45.015Z\"\n  },\n  {\n   \"_embedded\": {\n    \"inventorySource\": {\n     \"id\": \"mollit sunt velit ut\",\n     \"name\": \"ut officia id Duis amet\"\n    },\n    \"location\": {\n     \"id\": \"fugiat non\",\n     \"name\": \"proident deserunt ea\"\n    }\n   },\n   \"capacityUtilization\": -69969977.70426674,\n   \"createdAt\": \"2010-04-05T20:07:52.629Z\",\n   \"ddLocationId\": \"non eiusmod consequat\",\n   \"details\": {\n    \"dataDomain\": {\n     \"capacityQuotasSupported\": true,\n     \"cloudEnabled\": true,\n     \"cloudTierLicensed\": true,\n     \"compressionFactor\": 49772102.78195572,\n     \"ddboostLicensed\": true,\n     \"encryptionLicensed\": false,\n     \"model\": \"deserunt ip\",\n     \"percentUsed\": 76558984.45838848,\n     \"preferredInterfaces\": [\n      {\n       \"networkAddress\": \"Excepteur irure\",\n       \"networkLabel\": \"volupta\",\n       \"networkName\": \"tempor deserunt Lorem\",\n       \"speed\": 40577907.78558457\n      },\n      {\n       \"networkAddress\": \"dolor in ullamco\",\n       \"networkLabel\": \"cillum inc\",\n       \"networkName\": \"veniam esse non pariatur\",\n       \"speed\": 94331224.84359965\n      }\n     ],\n     \"preferredNetworkSupported\": true,\n     \"replicationEncryptionEnabled\": false,\n     \"replicationLicensed\": false,\n     \"retentionLockComplianceLicensed\": true,\n     \"retentionLockGovernanceLicensed\": false,\n     \"retentionLockSupported\": true,\n     \"serialNumber\": \"ut reprehenderit\",\n     \"streamQuotasSupported\": false,\n     \"totalSize\": -43057806.328189805,\n     \"totalUsed\": -36558266.71769291,\n     \"vdiskEnabled\": true,\n     \"version\": \"laboris\"\n    },\n    \"recoverPoint\": {\n     \"protectedSpace\": -91514527.21881603,\n     \"serialNumber\": \"dolore reprehenderit elit ipsum\",\n     \"totalCapacityManaged\": -84509656.2493433,\n     \"version\": \"et aliqua id ut\"\n    },\n    \"vmax\": {\n     \"cacheSize\": 58688015,\n     \"model\": \"culpa magna\",\n     \"serialNumber\": \"eiusmod\",\n     \"totalSize\": 18207279.571139082,\n     \"totalUsed\": -78449130.42619343\n    },\n    \"xio\": {\n     \"serialNumber\": \"officia consequat\",\n     \"totalSize\": 28836802.3934789,\n     \"totalUsed\": 131360.6170824319,\n     \"version\": \"mollit laborum\"\n    }\n   },\n   \"id\": \"elit sunt\",\n   \"lastDiscovered\": \"2017-03-12T00:17:33.946Z\",\n   \"lastDiscoveryAt\": \"1962-12-29T16:18:54.686Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"tempor est magna\",\n    \"messageID\": \"dolor in sunt nulla adipisicing\",\n    \"remediation\": \"qui magna ipsum\",\n    \"status\": \"CANCELED\",\n    \"summaries\": [\n     \"enim\",\n     \"deserunt ips\"\n    ]\n   },\n   \"lastDiscoveryStatus\": \"NEW\",\n   \"lastDiscoveryTaskId\": \"et\",\n   \"local\": false,\n   \"locationId\": \"sed quis\",\n   \"name\": \"ex\",\n   \"operatingSystem\": {\n    \"name\": \"officia ullamco nisi non Duis\",\n    \"version\": \"sint\"\n   },\n   \"type\": \"POWER_PROTECT_SYSTEM\",\n   \"updatedAt\": \"2015-05-10T03:42:30.706Z\"\n  }\n ],\n \"page\": {\n  \"number\": -72774202,\n  \"queryState\": \"laboris ea adipisicing\",\n  \"size\": -57484744,\n  \"totalElements\": 28993948,\n  \"totalPages\": -20849448\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "upgrade-packages",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an uploaded upgrade package by its ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Deletes an upgrade package that is not installing nor has been installed. Packages in the processing state cannot be deleted.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The upgrade package cannot be deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The upgrade package is succesfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The default response when an error occurs.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Get upgrade package by its ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Retrieves the details of an upgrade package by the specified ID, including its state, name, installed date, and so on.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Found and returned the upgrade package with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"est culpa nisi ut\",\n \"upgradeToken\": \"reprehenderit aliqua sint\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"in eu ut laborum\",\n \"eula\": {\n  \"productEulaAccepted\": false,\n  \"productEulaChanged\": false,\n  \"telemetryEulaAccepted\": false,\n  \"telemetryEulaChanged\": false\n },\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": false,\n \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n \"maintenanceUpgrade\": true,\n \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n   \"errorMessage\": \"veniam do nulla eiusmod\",\n   \"fileName\": \"qui est\",\n   \"fromVersion\": \"culp\",\n   \"minimumVersion\": \"labor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"amet\",\n    \"message\": \"in incididunt ex\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"in Duis nostrud\",\n    \"remediation\": \"et sit Duis id\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n   \"errorMessage\": \"cupidatat anim Ut\",\n   \"fileName\": \"id tempor ex do\",\n   \"fromVersion\": \"et culpa\",\n   \"minimumVersion\": \"cupidatat\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"ut consequat do dolor nostrud\",\n    \"message\": \"veniam ut pariatur ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"ut eiusmod\",\n    \"remediation\": \"esse dolor in\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"cupidatat aute sit\",\n  \"message\": \"do reprehenderit elit\",\n  \"messageArgs\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"messageID\": \"occaecat\",\n  \"remediation\": \"tempor eiusmod\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"tempor velit Excepteur\",\n   \"messageDetails\": {\n    \"reason\": \"exercitation Excepteur do\",\n    \"message\": \"ad in\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"incididunt officia\",\n    \"remediation\": \"adipisicing\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"dolor ea elit nisi\",\n   \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n   \"validationName\": \"consectetur cupidatat magna veniam\"\n  },\n  {\n   \"message\": \"aliqua sed ullamco dolor labore\",\n   \"messageDetails\": {\n    \"reason\": \"fugiat est consequat commodo ut\",\n    \"message\": \"culpa elit laborum ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"et Ut\",\n    \"remediation\": \"mollit deserunt pariatur incididunt\"\n   },\n   \"resultType\": \"ERROR\",\n   \"subComponent\": \"mollit\",\n   \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n   \"validationName\": \"ea id Duis in ad\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The default response when an error occurs.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Install the upgrade package uploaded to the appliance.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id"
											],
											"query": [
												{
													"key": "forceUpgrade",
													"value": "true",
													"description": "Use this query parameter to force upgrade the PowerProtect Data Manager."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Installs upgrade package only if the state of the upgrade package is AVAILABLE or FAILED. To install the upgrade package, set state=INSTALLED in the PUT request body.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Received when sending PUT request without query parameter \"forceUpgrade=true\". The request was failed in validation process.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"est culpa nisi ut\",\n \"upgradeToken\": \"reprehenderit aliqua sint\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"in eu ut laborum\",\n \"eula\": {\n  \"productEulaAccepted\": false,\n  \"productEulaChanged\": false,\n  \"telemetryEulaAccepted\": false,\n  \"telemetryEulaChanged\": false\n },\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": false,\n \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n \"maintenanceUpgrade\": true,\n \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n   \"errorMessage\": \"veniam do nulla eiusmod\",\n   \"fileName\": \"qui est\",\n   \"fromVersion\": \"culp\",\n   \"minimumVersion\": \"labor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"amet\",\n    \"message\": \"in incididunt ex\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"in Duis nostrud\",\n    \"remediation\": \"et sit Duis id\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n   \"errorMessage\": \"cupidatat anim Ut\",\n   \"fileName\": \"id tempor ex do\",\n   \"fromVersion\": \"et culpa\",\n   \"minimumVersion\": \"cupidatat\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"ut consequat do dolor nostrud\",\n    \"message\": \"veniam ut pariatur ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"ut eiusmod\",\n    \"remediation\": \"esse dolor in\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"cupidatat aute sit\",\n  \"message\": \"do reprehenderit elit\",\n  \"messageArgs\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"messageID\": \"occaecat\",\n  \"remediation\": \"tempor eiusmod\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"tempor velit Excepteur\",\n   \"messageDetails\": {\n    \"reason\": \"exercitation Excepteur do\",\n    \"message\": \"ad in\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"incididunt officia\",\n    \"remediation\": \"adipisicing\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"dolor ea elit nisi\",\n   \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n   \"validationName\": \"consectetur cupidatat magna veniam\"\n  },\n  {\n   \"message\": \"aliqua sed ullamco dolor labore\",\n   \"messageDetails\": {\n    \"reason\": \"fugiat est consequat commodo ut\",\n    \"message\": \"culpa elit laborum ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"et Ut\",\n    \"remediation\": \"mollit deserunt pariatur incididunt\"\n   },\n   \"resultType\": \"ERROR\",\n   \"subComponent\": \"mollit\",\n   \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n   \"validationName\": \"ea id Duis in ad\"\n  }\n ]\n}"
										},
										{
											"name": "The submitted upgrade package has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The upgrade package with specified ID is not allowed for upgrade in the current state.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Request accepted and is upgrading with the upgrade package of the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"est culpa nisi ut\",\n \"upgradeToken\": \"reprehenderit aliqua sint\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"in eu ut laborum\",\n \"eula\": {\n  \"productEulaAccepted\": false,\n  \"productEulaChanged\": false,\n  \"telemetryEulaAccepted\": false,\n  \"telemetryEulaChanged\": false\n },\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": false,\n \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n \"maintenanceUpgrade\": true,\n \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n   \"errorMessage\": \"veniam do nulla eiusmod\",\n   \"fileName\": \"qui est\",\n   \"fromVersion\": \"culp\",\n   \"minimumVersion\": \"labor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"amet\",\n    \"message\": \"in incididunt ex\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"in Duis nostrud\",\n    \"remediation\": \"et sit Duis id\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n   \"errorMessage\": \"cupidatat anim Ut\",\n   \"fileName\": \"id tempor ex do\",\n   \"fromVersion\": \"et culpa\",\n   \"minimumVersion\": \"cupidatat\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"ut consequat do dolor nostrud\",\n    \"message\": \"veniam ut pariatur ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"ut eiusmod\",\n    \"remediation\": \"esse dolor in\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"cupidatat aute sit\",\n  \"message\": \"do reprehenderit elit\",\n  \"messageArgs\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"messageID\": \"occaecat\",\n  \"remediation\": \"tempor eiusmod\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"tempor velit Excepteur\",\n   \"messageDetails\": {\n    \"reason\": \"exercitation Excepteur do\",\n    \"message\": \"ad in\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"incididunt officia\",\n    \"remediation\": \"adipisicing\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"dolor ea elit nisi\",\n   \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n   \"validationName\": \"consectetur cupidatat magna veniam\"\n  },\n  {\n   \"message\": \"aliqua sed ullamco dolor labore\",\n   \"messageDetails\": {\n    \"reason\": \"fugiat est consequat commodo ut\",\n    \"message\": \"culpa elit laborum ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"et Ut\",\n    \"remediation\": \"mollit deserunt pariatur incididunt\"\n   },\n   \"resultType\": \"ERROR\",\n   \"subComponent\": \"mollit\",\n   \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n   \"validationName\": \"ea id Duis in ad\"\n  }\n ]\n}"
										},
										{
											"name": "The default response when error occurs.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"est culpa nisi ut\",\n    \"upgradeToken\": \"reprehenderit aliqua sint\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"in eu ut laborum\",\n    \"eula\": {\n        \"productEulaAccepted\": false,\n        \"productEulaChanged\": false,\n        \"telemetryEulaAccepted\": false,\n        \"telemetryEulaChanged\": false\n    },\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": false,\n    \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n    \"maintenanceUpgrade\": true,\n    \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n            \"errorMessage\": \"veniam do nulla eiusmod\",\n            \"fileName\": \"qui est\",\n            \"fromVersion\": \"culp\",\n            \"minimumVersion\": \"labor\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"amet\",\n                \"message\": \"in incididunt ex\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"in Duis nostrud\",\n                \"remediation\": \"et sit Duis id\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": {},\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n            \"errorMessage\": \"cupidatat anim Ut\",\n            \"fileName\": \"id tempor ex do\",\n            \"fromVersion\": \"et culpa\",\n            \"minimumVersion\": \"cupidatat\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"ut consequat do dolor nostrud\",\n                \"message\": \"veniam ut pariatur ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"ut eiusmod\",\n                \"remediation\": \"esse dolor in\"\n            },\n            \"upgradeMode\": \"DU\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"cupidatat aute sit\",\n        \"message\": \"do reprehenderit elit\",\n        \"messageArgs\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"messageID\": \"occaecat\",\n        \"remediation\": \"tempor eiusmod\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"tempor velit Excepteur\",\n            \"messageDetails\": {\n                \"reason\": \"exercitation Excepteur do\",\n                \"message\": \"ad in\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"incididunt officia\",\n                \"remediation\": \"adipisicing\"\n            },\n            \"resultType\": \"WARNING\",\n            \"subComponent\": \"dolor ea elit nisi\",\n            \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n            \"validationName\": \"consectetur cupidatat magna veniam\"\n        },\n        {\n            \"message\": \"aliqua sed ullamco dolor labore\",\n            \"messageDetails\": {\n                \"reason\": \"fugiat est consequat commodo ut\",\n                \"message\": \"culpa elit laborum ullamco\",\n                \"messageArgs\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"messageID\": \"et Ut\",\n                \"remediation\": \"mollit deserunt pariatur incididunt\"\n            },\n            \"resultType\": \"ERROR\",\n            \"subComponent\": \"mollit\",\n            \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n            \"validationName\": \"ea id Duis in ad\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Precheck upgrade package by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id",
												"precheck"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Enables you to precheck an upgrade package by the specified ID. The precheck verifies that all components are ready for upgrade.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The default response when an error occurs.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The precheck upgrade package is not allowed in the current state.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The precheck upgrade package request was accepted and is being processed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"est culpa nisi ut\",\n \"upgradeToken\": \"reprehenderit aliqua sint\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"in eu ut laborum\",\n \"eula\": {\n  \"productEulaAccepted\": false,\n  \"productEulaChanged\": false,\n  \"telemetryEulaAccepted\": false,\n  \"telemetryEulaChanged\": false\n },\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": false,\n \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n \"maintenanceUpgrade\": true,\n \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n   \"errorMessage\": \"veniam do nulla eiusmod\",\n   \"fileName\": \"qui est\",\n   \"fromVersion\": \"culp\",\n   \"minimumVersion\": \"labor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"amet\",\n    \"message\": \"in incididunt ex\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"in Duis nostrud\",\n    \"remediation\": \"et sit Duis id\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n   \"errorMessage\": \"cupidatat anim Ut\",\n   \"fileName\": \"id tempor ex do\",\n   \"fromVersion\": \"et culpa\",\n   \"minimumVersion\": \"cupidatat\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"ut consequat do dolor nostrud\",\n    \"message\": \"veniam ut pariatur ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"ut eiusmod\",\n    \"remediation\": \"esse dolor in\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"cupidatat aute sit\",\n  \"message\": \"do reprehenderit elit\",\n  \"messageArgs\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"messageID\": \"occaecat\",\n  \"remediation\": \"tempor eiusmod\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"tempor velit Excepteur\",\n   \"messageDetails\": {\n    \"reason\": \"exercitation Excepteur do\",\n    \"message\": \"ad in\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"incididunt officia\",\n    \"remediation\": \"adipisicing\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"dolor ea elit nisi\",\n   \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n   \"validationName\": \"consectetur cupidatat magna veniam\"\n  },\n  {\n   \"message\": \"aliqua sed ullamco dolor labore\",\n   \"messageDetails\": {\n    \"reason\": \"fugiat est consequat commodo ut\",\n    \"message\": \"culpa elit laborum ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"et Ut\",\n    \"remediation\": \"mollit deserunt pariatur incididunt\"\n   },\n   \"resultType\": \"ERROR\",\n   \"subComponent\": \"mollit\",\n   \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n   \"validationName\": \"ea id Duis in ad\"\n  }\n ]\n}"
										},
										{
											"name": "Found and return the information of specific package.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"est culpa nisi ut\",\n \"upgradeToken\": \"reprehenderit aliqua sint\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"in eu ut laborum\",\n \"eula\": {\n  \"productEulaAccepted\": false,\n  \"productEulaChanged\": false,\n  \"telemetryEulaAccepted\": false,\n  \"telemetryEulaChanged\": false\n },\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": false,\n \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n \"maintenanceUpgrade\": true,\n \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n   \"errorMessage\": \"veniam do nulla eiusmod\",\n   \"fileName\": \"qui est\",\n   \"fromVersion\": \"culp\",\n   \"minimumVersion\": \"labor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"amet\",\n    \"message\": \"in incididunt ex\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"in Duis nostrud\",\n    \"remediation\": \"et sit Duis id\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n   \"errorMessage\": \"cupidatat anim Ut\",\n   \"fileName\": \"id tempor ex do\",\n   \"fromVersion\": \"et culpa\",\n   \"minimumVersion\": \"cupidatat\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"ut consequat do dolor nostrud\",\n    \"message\": \"veniam ut pariatur ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"ut eiusmod\",\n    \"remediation\": \"esse dolor in\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"cupidatat aute sit\",\n  \"message\": \"do reprehenderit elit\",\n  \"messageArgs\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"messageID\": \"occaecat\",\n  \"remediation\": \"tempor eiusmod\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"tempor velit Excepteur\",\n   \"messageDetails\": {\n    \"reason\": \"exercitation Excepteur do\",\n    \"message\": \"ad in\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"incididunt officia\",\n    \"remediation\": \"adipisicing\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"dolor ea elit nisi\",\n   \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n   \"validationName\": \"consectetur cupidatat magna veniam\"\n  },\n  {\n   \"message\": \"aliqua sed ullamco dolor labore\",\n   \"messageDetails\": {\n    \"reason\": \"fugiat est consequat commodo ut\",\n    \"message\": \"culpa elit laborum ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"et Ut\",\n    \"remediation\": \"mollit deserunt pariatur incididunt\"\n   },\n   \"resultType\": \"ERROR\",\n   \"subComponent\": \"mollit\",\n   \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n   \"validationName\": \"ea id Duis in ad\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Cancel precheck.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck-cancellation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id",
												"precheck-cancellation"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Cancel the precheck for an upgrade package by specifying its ID. Use this API when the upgrade package is stopped in the PROCESSING state. When the cancellation completes, the upgrade package state changes to PRECHECK_FAILED."
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The default response when an error occurs.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Precheck cancellation request was accepted and is being processed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"est culpa nisi ut\",\n \"upgradeToken\": \"reprehenderit aliqua sint\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"in eu ut laborum\",\n \"eula\": {\n  \"productEulaAccepted\": false,\n  \"productEulaChanged\": false,\n  \"telemetryEulaAccepted\": false,\n  \"telemetryEulaChanged\": false\n },\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": false,\n \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n \"maintenanceUpgrade\": true,\n \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n   \"errorMessage\": \"veniam do nulla eiusmod\",\n   \"fileName\": \"qui est\",\n   \"fromVersion\": \"culp\",\n   \"minimumVersion\": \"labor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"amet\",\n    \"message\": \"in incididunt ex\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"in Duis nostrud\",\n    \"remediation\": \"et sit Duis id\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n   \"errorMessage\": \"cupidatat anim Ut\",\n   \"fileName\": \"id tempor ex do\",\n   \"fromVersion\": \"et culpa\",\n   \"minimumVersion\": \"cupidatat\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"ut consequat do dolor nostrud\",\n    \"message\": \"veniam ut pariatur ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"ut eiusmod\",\n    \"remediation\": \"esse dolor in\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"cupidatat aute sit\",\n  \"message\": \"do reprehenderit elit\",\n  \"messageArgs\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"messageID\": \"occaecat\",\n  \"remediation\": \"tempor eiusmod\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"tempor velit Excepteur\",\n   \"messageDetails\": {\n    \"reason\": \"exercitation Excepteur do\",\n    \"message\": \"ad in\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"incididunt officia\",\n    \"remediation\": \"adipisicing\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"dolor ea elit nisi\",\n   \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n   \"validationName\": \"consectetur cupidatat magna veniam\"\n  },\n  {\n   \"message\": \"aliqua sed ullamco dolor labore\",\n   \"messageDetails\": {\n    \"reason\": \"fugiat est consequat commodo ut\",\n    \"message\": \"culpa elit laborum ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"et Ut\",\n    \"remediation\": \"mollit deserunt pariatur incididunt\"\n   },\n   \"resultType\": \"ERROR\",\n   \"subComponent\": \"mollit\",\n   \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n   \"validationName\": \"ea id Duis in ad\"\n  }\n ]\n}"
										},
										{
											"name": "Upgrade precheck cancellation request is not allowed in the current state.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								},
								{
									"name": "Cancel upgrade.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/upgrade-cancellation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id",
												"upgrade-cancellation"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Cancel the upgrade for an upgrade package by specifying its ID. Use this API when the upgrade package is stopped in the INSTALLED_CORE state. When cancellation is complete, the upgrade package state changes to INSTALLED_WITH_ERRORS."
									},
									"response": [
										{
											"name": "Upgrade cancellation request is not allowed in the current state.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/upgrade-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"upgrade-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/upgrade-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"upgrade-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The default response when an error occurs.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/upgrade-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"upgrade-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/upgrade-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"upgrade-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										},
										{
											"name": "Upgrade cancellation request was accepted and is being processed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/upgrade-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"upgrade-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"est culpa nisi ut\",\n \"upgradeToken\": \"reprehenderit aliqua sint\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"in eu ut laborum\",\n \"eula\": {\n  \"productEulaAccepted\": false,\n  \"productEulaChanged\": false,\n  \"telemetryEulaAccepted\": false,\n  \"telemetryEulaChanged\": false\n },\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": false,\n \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n \"maintenanceUpgrade\": true,\n \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n   \"errorMessage\": \"veniam do nulla eiusmod\",\n   \"fileName\": \"qui est\",\n   \"fromVersion\": \"culp\",\n   \"minimumVersion\": \"labor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"amet\",\n    \"message\": \"in incididunt ex\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"in Duis nostrud\",\n    \"remediation\": \"et sit Duis id\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n   \"errorMessage\": \"cupidatat anim Ut\",\n   \"fileName\": \"id tempor ex do\",\n   \"fromVersion\": \"et culpa\",\n   \"minimumVersion\": \"cupidatat\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"ut consequat do dolor nostrud\",\n    \"message\": \"veniam ut pariatur ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"ut eiusmod\",\n    \"remediation\": \"esse dolor in\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"cupidatat aute sit\",\n  \"message\": \"do reprehenderit elit\",\n  \"messageArgs\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"messageID\": \"occaecat\",\n  \"remediation\": \"tempor eiusmod\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"tempor velit Excepteur\",\n   \"messageDetails\": {\n    \"reason\": \"exercitation Excepteur do\",\n    \"message\": \"ad in\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"incididunt officia\",\n    \"remediation\": \"adipisicing\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"dolor ea elit nisi\",\n   \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n   \"validationName\": \"consectetur cupidatat magna veniam\"\n  },\n  {\n   \"message\": \"aliqua sed ullamco dolor labore\",\n   \"messageDetails\": {\n    \"reason\": \"fugiat est consequat commodo ut\",\n    \"message\": \"culpa elit laborum ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"et Ut\",\n    \"remediation\": \"mollit deserunt pariatur incididunt\"\n   },\n   \"resultType\": \"ERROR\",\n   \"subComponent\": \"mollit\",\n   \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n   \"validationName\": \"ea id Duis in ad\"\n  }\n ]\n}"
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/upgrade-cancellation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"upgrade-cancellation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get list of all upgrade packages.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"upgrade-packages"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves a list of all upgrade packages. This API call checks the upgrade history of the system. If the system has been upgraded multiple times, the list includes the installed upgrade packages. At any time, only one package that has not been installed can exist.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Located and returned all upgrade packages successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n   \"state\": \"INSTALLED\",\n   \"certificateTrustedByUser\": true,\n   \"lockboxPassphrase\": \"irure\",\n   \"upgradeToken\": \"c\",\n   \"certificateDetailsMap\": {\n    \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n    \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n    \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n    \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n    \"publicKey\": \"RSA public key\",\n    \"publicKeyExponent\": \"65537\",\n    \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n    \"publicKeySize\": \"2048\",\n    \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n    \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n    \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n    \"signatureAlgorithmName\": \"SHA256withRSA\",\n    \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n    \"subjectDN\": \"quis esse et minim deserunt\",\n    \"version\": \"3\"\n   },\n   \"dateInstalled\": \"1989-04-03T08:24:22.982Z\",\n   \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n   \"errorMessage\": \"dolor irure\",\n   \"eula\": {\n    \"productEulaAccepted\": false,\n    \"productEulaChanged\": false,\n    \"telemetryEulaAccepted\": false,\n    \"telemetryEulaChanged\": true\n   },\n   \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n   \"fromVersion\": \"19.2.0-1\",\n   \"lockboxResetRequired\": true,\n   \"madeAvailable\": \"1995-03-14T03:51:58.136Z\",\n   \"maintenanceUpgrade\": true,\n   \"minimumVersion\": \"aliqua velit pariatur\",\n   \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n   \"packageVersion\": \"19.3.0-1\",\n   \"rebootRequired\": true,\n   \"sizeInBytes\": 3915497644,\n   \"subComponentDetails\": [\n    {\n     \"attributes\": {},\n     \"componentName\": \"PPDM\",\n     \"dateInstalled\": \"1958-10-25T13:13:33.432Z\",\n     \"errorMessage\": \"quis mollit nulla amet voluptate\",\n     \"fileName\": \"dolor sunt deserunt tempor\",\n     \"fromVersion\": \"mollit Duis sunt Excepteur\",\n     \"minimumVersion\": \"ut enim minim\",\n     \"subComponentUpgradeState\": \"UPGRADED\",\n     \"upgradeError\": {\n      \"reason\": \"qui nisi consequat\",\n      \"message\": \"id deserunt consectetur occaecat\",\n      \"messageArgs\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"messageID\": \"adipisicing exercitation esse\",\n      \"remediation\": \"et dolor\"\n     },\n     \"upgradeMode\": \"DU\",\n     \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n     \"upgradeVersion\": \"19.3.0-1\"\n    },\n    {\n     \"attributes\": {},\n     \"componentName\": \"PPDM\",\n     \"dateInstalled\": \"1954-11-02T02:05:09.748Z\",\n     \"errorMessage\": \"reprehenderit id\",\n     \"fileName\": \"quis laborum\",\n     \"fromVersion\": \"dolore in veniam\",\n     \"minimumVersion\": \"in cillum\",\n     \"subComponentUpgradeState\": \"UPGRADED\",\n     \"upgradeError\": {\n      \"reason\": \"Excepteur occaecat dolor ut\",\n      \"message\": \"ad aliquip\",\n      \"messageArgs\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"messageID\": \"aliquip voluptate\",\n      \"remediation\": \"voluptate ad Duis\"\n     },\n     \"upgradeMode\": \"NDU\",\n     \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n     \"upgradeVersion\": \"19.3.0-1\"\n    }\n   ],\n   \"type\": \"RELEASE\",\n   \"upgradeError\": {\n    \"reason\": \"elit\",\n    \"message\": \"nostrud sint Ut ut\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"Ut sint esse magna\",\n    \"remediation\": \"eiusm\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"validationDetails\": [\n    {\n     \"message\": \"tempor\",\n     \"messageDetails\": {\n      \"reason\": \"incididunt\",\n      \"message\": \"tempor minim nisi in cillum\",\n      \"messageArgs\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"messageID\": \"officia ut\",\n      \"remediation\": \"in aute in\"\n     },\n     \"resultType\": \"INFO\",\n     \"subComponent\": \"aliqua ex proident\",\n     \"validateTime\": \"1999-08-15T04:18:58.047Z\",\n     \"validationName\": \"Excepteur Ut\"\n    },\n    {\n     \"message\": \"minim Ut eu ea\",\n     \"messageDetails\": {\n      \"reason\": \"deserunt sed occaecat commodo magna\",\n      \"message\": \"sit eu dolore labore sunt\",\n      \"messageArgs\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"messageID\": \"de\",\n      \"remediation\": \"Ut do\"\n     },\n     \"resultType\": \"ERROR\",\n     \"subComponent\": \"cillum dolore\",\n     \"validateTime\": \"2013-03-08T23:18:29.538Z\",\n     \"validationName\": \"fugiat sint esse\"\n    }\n   ]\n  },\n  {\n   \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n   \"state\": \"INSTALLED\",\n   \"certificateTrustedByUser\": true,\n   \"lockboxPassphrase\": \"do eiusmod\",\n   \"upgradeToken\": \"aliquip elit labore consequat\",\n   \"certificateDetailsMap\": {\n    \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n    \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n    \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n    \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n    \"publicKey\": \"RSA public key\",\n    \"publicKeyExponent\": \"65537\",\n    \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n    \"publicKeySize\": \"2048\",\n    \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n    \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n    \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n    \"signatureAlgorithmName\": \"SHA256withRSA\",\n    \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n    \"subjectDN\": \"quis esse adipisici\",\n    \"version\": \"3\"\n   },\n   \"dateInstalled\": \"1944-02-03T22:47:42.692Z\",\n   \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n   \"errorMessage\": \"ad exercitation dolor Excepteur\",\n   \"eula\": {\n    \"productEulaAccepted\": false,\n    \"productEulaChanged\": false,\n    \"telemetryEulaAccepted\": false,\n    \"telemetryEulaChanged\": true\n   },\n   \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n   \"fromVersion\": \"19.2.0-1\",\n   \"lockboxResetRequired\": false,\n   \"madeAvailable\": \"1980-04-28T20:58:41.466Z\",\n   \"maintenanceUpgrade\": false,\n   \"minimumVersion\": \"elit do ad\",\n   \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n   \"packageVersion\": \"19.3.0-1\",\n   \"rebootRequired\": true,\n   \"sizeInBytes\": 3915497644,\n   \"subComponentDetails\": [\n    {\n     \"attributes\": {},\n     \"componentName\": \"PPDM\",\n     \"dateInstalled\": \"1988-02-02T02:48:45.452Z\",\n     \"errorMessage\": \"ut\",\n     \"fileName\": \"veniam sed aliquip sint\",\n     \"fromVersion\": \"non do proident veli\",\n     \"minimumVersion\": \"nostrud dolor minim dolore in\",\n     \"subComponentUpgradeState\": \"UPGRADED\",\n     \"upgradeError\": {\n      \"reason\": \"incididunt est\",\n      \"message\": \"proident molli\",\n      \"messageArgs\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"messageID\": \"sit mollit\",\n      \"remediation\": \"laborum dolore eu\"\n     },\n     \"upgradeMode\": \"DU\",\n     \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n     \"upgradeVersion\": \"19.3.0-1\"\n    },\n    {\n     \"attributes\": {},\n     \"componentName\": \"PPDM\",\n     \"dateInstalled\": \"1980-08-01T23:20:52.724Z\",\n     \"errorMessage\": \"anim dolor\",\n     \"fileName\": \"ut consequat eu\",\n     \"fromVersion\": \"amet adipisicing sunt ad\",\n     \"minimumVersion\": \"amet adipisicing\",\n     \"subComponentUpgradeState\": \"UPGRADED\",\n     \"upgradeError\": {\n      \"reason\": \"ut\",\n      \"message\": \"dolor magna velit\",\n      \"messageArgs\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"messageID\": \"ea \",\n      \"remediation\": \"velit quis in\"\n     },\n     \"upgradeMode\": \"DU\",\n     \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n     \"upgradeVersion\": \"19.3.0-1\"\n    }\n   ],\n   \"type\": \"RELEASE\",\n   \"upgradeError\": {\n    \"reason\": \"nulla\",\n    \"message\": \"sint officia in aliquip\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"magna esse\",\n    \"remediation\": \"adipisicing in quis\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"validationDetails\": [\n    {\n     \"message\": \"velit in magna officia\",\n     \"messageDetails\": {\n      \"reason\": \"nostrud consectetur sit occaeca\",\n      \"message\": \"dolor veniam\",\n      \"messageArgs\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"messageID\": \"enim id\",\n      \"remediation\": \"deserunt proident\"\n     },\n     \"resultType\": \"WARNING\",\n     \"subComponent\": \"cupidatat consequat nulla proident\",\n     \"validateTime\": \"1998-07-11T05:24:06.985Z\",\n     \"validationName\": \"non nulla culpa eu incididunt\"\n    },\n    {\n     \"message\": \"culpa laborum non officia\",\n     \"messageDetails\": {\n      \"reason\": \"in non aliquip Duis est\",\n      \"message\": \"minim laborum\",\n      \"messageArgs\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"messageID\": \"ea ullamco velit Lorem enim\",\n      \"remediation\": \"sed Ut\"\n     },\n     \"resultType\": \"WARNING\",\n     \"subComponent\": \"tempor exercitation\",\n     \"validateTime\": \"1957-02-17T03:43:35.873Z\",\n     \"validationName\": \"laboris in\"\n    }\n   ]\n  }\n ],\n \"page\": {\n  \"number\": 42143544,\n  \"queryState\": \"id ut\",\n  \"size\": -44855805,\n  \"totalElements\": 43318791,\n  \"totalPages\": 10963427\n }\n}"
								},
								{
									"name": "The default response when error occurs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						},
						{
							"name": "Upload an upgrade package to the appliance.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "est aliqua",
											"description": "Upgrade package file to be uploaded.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/upgrade-packages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"upgrade-packages"
									]
								},
								"description": "Uploads only one upgrade package at a time. To upload another, install or delete the existing upgrade package.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "est aliqua",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "It is not allowed to upload upgrade package in the current state.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "est aliqua",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The uploaded upgrade package is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "est aliqua",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "Unable to parse the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "est aliqua",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "est aliqua",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The create upgrade package request was accepted and is being processed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "est aliqua",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"est culpa nisi ut\",\n \"upgradeToken\": \"reprehenderit aliqua sint\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"1975-12-18T01:06:06.874Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"in eu ut laborum\",\n \"eula\": {\n  \"productEulaAccepted\": false,\n  \"productEulaChanged\": false,\n  \"telemetryEulaAccepted\": false,\n  \"telemetryEulaChanged\": false\n },\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": false,\n \"madeAvailable\": \"1970-04-26T16:29:26.819Z\",\n \"maintenanceUpgrade\": true,\n \"minimumVersion\": \"irure officia aute adipisicing eiusmod\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1981-04-21T06:56:59.478Z\",\n   \"errorMessage\": \"veniam do nulla eiusmod\",\n   \"fileName\": \"qui est\",\n   \"fromVersion\": \"culp\",\n   \"minimumVersion\": \"labor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"amet\",\n    \"message\": \"in incididunt ex\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"in Duis nostrud\",\n    \"remediation\": \"et sit Duis id\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1956-07-08T10:05:20.607Z\",\n   \"errorMessage\": \"cupidatat anim Ut\",\n   \"fileName\": \"id tempor ex do\",\n   \"fromVersion\": \"et culpa\",\n   \"minimumVersion\": \"cupidatat\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"ut consequat do dolor nostrud\",\n    \"message\": \"veniam ut pariatur ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"ut eiusmod\",\n    \"remediation\": \"esse dolor in\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"cupidatat aute sit\",\n  \"message\": \"do reprehenderit elit\",\n  \"messageArgs\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"messageID\": \"occaecat\",\n  \"remediation\": \"tempor eiusmod\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"tempor velit Excepteur\",\n   \"messageDetails\": {\n    \"reason\": \"exercitation Excepteur do\",\n    \"message\": \"ad in\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"incididunt officia\",\n    \"remediation\": \"adipisicing\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"dolor ea elit nisi\",\n   \"validateTime\": \"1977-03-09T20:24:46.427Z\",\n   \"validationName\": \"consectetur cupidatat magna veniam\"\n  },\n  {\n   \"message\": \"aliqua sed ullamco dolor labore\",\n   \"messageDetails\": {\n    \"reason\": \"fugiat est consequat commodo ut\",\n    \"message\": \"culpa elit laborum ullamco\",\n    \"messageArgs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"messageID\": \"et Ut\",\n    \"remediation\": \"mollit deserunt pariatur incididunt\"\n   },\n   \"resultType\": \"ERROR\",\n   \"subComponent\": \"mollit\",\n   \"validateTime\": \"1962-08-29T04:42:55.734Z\",\n   \"validationName\": \"ea id Duis in ad\"\n  }\n ]\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "est aliqua",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								},
								{
									"name": "The default response when error occurs.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "est aliqua",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
								}
							]
						}
					]
				},
				{
					"name": "user-groups",
					"item": [
						{
							"name": "{user Group Id}",
							"item": [
								{
									"name": "Delete a user group.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) User group ID."
												}
											]
										},
										"description": "Deletes a user group by ID. When the user group is deleted, the users that are defined by the user group no longer have access to the system and can no longer perform actions.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The user group was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully delete the user group.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get user group.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) User group ID."
												}
											]
										},
										"description": "Retrieves a user group by ID, which is an identity source group-to-role mapping. User groups define who has access to the system and the actions they can perform based on their role.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user group was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the specified user group.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"amet dolor dolore reprehenderit\",\n \"identitySourceGroups\": [\n  {\n   \"groups\": [\n    \"nostrud laborum\",\n    \"Ut reprehenderit in\"\n   ],\n   \"identitySourceId\": \"commodo mollit\"\n  },\n  {\n   \"groups\": [\n    \"cillum qui\",\n    \"enim esse amet irure\"\n   ],\n   \"identitySourceId\": \"Duis esse ea in\"\n  }\n ],\n \"createdDate\": \"1944-04-29T06:28:55.084Z\",\n \"id\": \"pariatur incididunt ex nisi\",\n \"roleId\": \"et\"\n}"
										}
									]
								},
								{
									"name": "Update a user group.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"amet dolor dolore reprehenderit\",\n    \"identitySourceGroups\": [\n        {\n            \"groups\": [\n                \"nostrud laborum\",\n                \"Ut reprehenderit in\"\n            ],\n            \"identitySourceId\": \"commodo mollit\"\n        },\n        {\n            \"groups\": [\n                \"cillum qui\",\n                \"enim esse amet irure\"\n            ],\n            \"identitySourceId\": \"Duis esse ea in\"\n        }\n    ],\n    \"createdDate\": \"1944-04-29T06:28:55.084Z\",\n    \"id\": \"pariatur incididunt ex nisi\",\n    \"roleId\": \"et\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) User group ID."
												}
											]
										},
										"description": "Updates a user group by ID. When the user group is updated, the users that are defined by the user group have updated privileges to perform actions that are defined by their role.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user group was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the user group.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"amet dolor dolore reprehenderit\",\n \"identitySourceGroups\": [\n  {\n   \"groups\": [\n    \"nostrud laborum\",\n    \"Ut reprehenderit in\"\n   ],\n   \"identitySourceId\": \"commodo mollit\"\n  },\n  {\n   \"groups\": [\n    \"cillum qui\",\n    \"enim esse amet irure\"\n   ],\n   \"identitySourceId\": \"Duis esse ea in\"\n  }\n ],\n \"createdDate\": \"1944-04-29T06:28:55.084Z\",\n \"id\": \"pariatur incididunt ex nisi\",\n \"roleId\": \"et\"\n}"
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all user groups.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "role",
											"value": "aute ut id cillum aliqua",
											"description": "Filter the user groups by role ID or role name."
										}
									]
								},
								"description": "Retrieves all user groups, which are identity source group-to-role mappings. These user groups define who has access to the system and the actions they can perform based on their role.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved all the user groups.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"Ut qui minim\",\n   \"identitySourceGroups\": [\n    {\n     \"groups\": [\n      \"quis consequat est ad\",\n      \"eiusmod\"\n     ],\n     \"identitySourceId\": \"officia incididunt quis consectetur deserunt\"\n    },\n    {\n     \"groups\": [\n      \"Excepteur officia Lorem do\",\n      \"nostrud cillum do anim\"\n     ],\n     \"identitySourceId\": \"dolore occ\"\n    }\n   ],\n   \"createdDate\": \"1944-06-27T18:34:50.910Z\",\n   \"id\": \"est sed nulla\",\n   \"roleId\": \"irure\"\n  },\n  {\n   \"name\": \"Lorem irure reprehenderit laborum\",\n   \"identitySourceGroups\": [\n    {\n     \"groups\": [\n      \"qui minim\",\n      \"consequat in\"\n     ],\n     \"identitySourceId\": \"eiusmod ipsum dolor officia\"\n    },\n    {\n     \"groups\": [\n      \"dolore deserunt dolor\",\n      \"commodo anim eiusmod\"\n     ],\n     \"identitySourceId\": \"incididunt ipsum\"\n    }\n   ],\n   \"createdDate\": \"1942-11-10T02:37:24.620Z\",\n   \"id\": \"deser\",\n   \"roleId\": \"dolore est officia mollit\"\n  }\n ],\n \"page\": {\n  \"number\": -34247551,\n  \"queryState\": \"Excepteur commodo non reprehenderit tempor\",\n  \"size\": 63628951,\n  \"totalElements\": -59271556,\n  \"totalPages\": -97808919\n }\n}"
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a user group.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"amet dolor dolore reprehenderit\",\n    \"identitySourceGroups\": [\n        {\n            \"groups\": [\n                \"nostrud laborum\",\n                \"Ut reprehenderit in\"\n            ],\n            \"identitySourceId\": \"commodo mollit\"\n        },\n        {\n            \"groups\": [\n                \"cillum qui\",\n                \"enim esse amet irure\"\n            ],\n            \"identitySourceId\": \"Duis esse ea in\"\n        }\n    ],\n    \"createdDate\": \"1944-04-29T06:28:55.084Z\",\n    \"id\": \"pariatur incididunt ex nisi\",\n    \"roleId\": \"et\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-groups"
									]
								},
								"description": "Creates a user group, which is an identity source group-to-role mapping. These user groups define who has access to the system and the actions they can perform based on their role.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully created the user group.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"amet dolor dolore reprehenderit\",\n \"identitySourceGroups\": [\n  {\n   \"groups\": [\n    \"nostrud laborum\",\n    \"Ut reprehenderit in\"\n   ],\n   \"identitySourceId\": \"commodo mollit\"\n  },\n  {\n   \"groups\": [\n    \"cillum qui\",\n    \"enim esse amet irure\"\n   ],\n   \"identitySourceId\": \"Duis esse ea in\"\n  }\n ],\n \"createdDate\": \"1944-04-29T06:28:55.084Z\",\n \"id\": \"pariatur incididunt ex nisi\",\n \"roleId\": \"et\"\n}"
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{user Id}",
							"item": [
								{
									"name": "Delete a local system user by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) User ID."
												}
											]
										},
										"description": "Deletes a user by ID. When the user is deleted, the user can no longer access the system or perform any actions.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully deleted the specified user.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a local system user by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) User ID."
												}
											]
										},
										"description": "Retrieves the user that is specified by ID. The list of user information includes information such as name, username, and roles.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the specified user.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"username\": \"13oW\",\n \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n \"emailAddress\": \"id Excepteur ex dolor\",\n \"firstName\": \"inpa\",\n \"forcePasswordChange\": false,\n \"id\": \"nostrud in irure culpa id\",\n \"lastName\": \"ea c\",\n \"password\": \"occaecat do\",\n \"roleId\": \"nulla irure dolore proident\"\n}"
										}
									]
								},
								{
									"name": "Update a local system user.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Logged in user password to modify sensitive data.",
												"key": "x-auth-password",
												"value": "aute ut id cillum aliqua"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) User ID."
												}
											]
										},
										"description": "Updates a user by ID. When updated, the user information is available. If the role changes, the user can perform only those actions that are defined by the role.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Conflict.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unprocessable entity.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Expectation failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Expectation Failed",
											"code": 417,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the user properties.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"username\": \"13oW\",\n \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n \"emailAddress\": \"id Excepteur ex dolor\",\n \"firstName\": \"inpa\",\n \"forcePasswordChange\": false,\n \"id\": \"nostrud in irure culpa id\",\n \"lastName\": \"ea c\",\n \"password\": \"occaecat do\",\n \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										{
											"name": "The user was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "aute ut id cillum aliqua"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all the local system users.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "role",
											"value": "aute ut id cillum aliqua",
											"description": "Filters the user by role ID or role name."
										}
									]
								},
								"description": "Retrieves the list of all local users. The list of user information includes user information such as name, username, and roles.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the list of users.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"username\": \"l9 l\",\n   \"createdDate\": \"2012-11-10T18:57:45.442Z\",\n   \"emailAddress\": \"labore incididunt elit\",\n   \"firstName\": \"inci\",\n   \"forcePasswordChange\": false,\n   \"id\": \"ullamco incididunt sunt anim\",\n   \"lastName\": \"aliq\",\n   \"password\": \"fugiat voluptate velit\",\n   \"roleId\": \"dolor incididunt sit\"\n  },\n  {\n   \"username\": \"M.Uf\",\n   \"createdDate\": \"1994-08-25T14:58:31.031Z\",\n   \"emailAddress\": \"sit laboris ad aliquip\",\n   \"firstName\": \"adip\",\n   \"forcePasswordChange\": false,\n   \"id\": \"reprehenderit irure amet\",\n   \"lastName\": \"cons\",\n   \"password\": \"id est laborum\",\n   \"roleId\": \"labore nostrud incididunt\"\n  }\n ],\n \"page\": {\n  \"number\": 34977282,\n  \"queryState\": \"aliqua nulla offici\",\n  \"size\": 82797100,\n  \"totalElements\": 74216492,\n  \"totalPages\": 66282600\n }\n}"
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&role=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "role",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a local system user.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								},
								"description": "Creates a user. Once the user is created, the user can access the system and perform actions that are defined by the user role.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The Authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully created the user.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"username\": \"13oW\",\n \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n \"emailAddress\": \"id Excepteur ex dolor\",\n \"firstName\": \"inpa\",\n \"forcePasswordChange\": false,\n \"id\": \"nostrud in irure culpa id\",\n \"lastName\": \"ea c\",\n \"password\": \"occaecat do\",\n \"roleId\": \"nulla irure dolore proident\"\n}"
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"13oW\",\n    \"createdDate\": \"1944-06-24T12:05:30.359Z\",\n    \"emailAddress\": \"id Excepteur ex dolor\",\n    \"firstName\": \"inpa\",\n    \"forcePasswordChange\": false,\n    \"id\": \"nostrud in irure culpa id\",\n    \"lastName\": \"ea c\",\n    \"password\": \"occaecat do\",\n    \"roleId\": \"nulla irure dolore proident\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "whitelist",
					"item": [
						{
							"name": "automatic",
							"item": [
								{
									"name": "Get automatic whitelist.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												"automatic"
											]
										},
										"description": "Retrieves the automatic whitelist element, if available. If the automatic whitelist is not set, HTTP 404 is returned. If the automatic whitelist is set, HTTP 200 is returned with the corresponding automatic whitelist element. The ID of the automatic whitelist element is always the same.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The automatic whitelist entry was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the automatic whitelist entry.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n \"id\": \"adipisicing\",\n \"internal\": true,\n \"ip\": \"consequat in\",\n \"roleId\": \"velit culpa cillum est\",\n \"state\": \"REJECTED\"\n}"
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable automatic whitelisting.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												"automatic"
											]
										},
										"description": "Enables automatic whitelist by creating whitelist entry. IP address must be set to 0.0.0.0 and state must be set to AUTOMATIC in the payload. The expiresAt property specifies when the automatic whitelist should expire.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully enabled the automatic whitelist feature.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n \"id\": \"adipisicing\",\n \"internal\": true,\n \"ip\": \"consequat in\",\n \"roleId\": \"velit culpa cillum est\",\n \"state\": \"REJECTED\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a whitelist entry.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Whitelist ID."
												}
											]
										},
										"description": "Deletes a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The whitelist entry was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully deleted the whitelist entry.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a whitelist entry.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Whitelist ID."
												}
											]
										},
										"description": "Retrieves a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The whitelist entry was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the whitelist entry.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n \"id\": \"adipisicing\",\n \"internal\": true,\n \"ip\": \"consequat in\",\n \"roleId\": \"velit culpa cillum est\",\n \"state\": \"REJECTED\"\n}"
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Patch a whitelist entry.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Whitelist ID."
												}
											]
										},
										"description": "Updates specific properties in the whitelist by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the whitelist entry.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n \"id\": \"adipisicing\",\n \"internal\": true,\n \"ip\": \"consequat in\",\n \"roleId\": \"velit culpa cillum est\",\n \"state\": \"REJECTED\"\n}"
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a whitelist entry.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aute ut id cillum aliqua",
													"type": "string",
													"description": "(Required) Whitelist ID."
												}
											]
										},
										"description": "Updates a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The whitelist entry was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the whitelist entry.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n \"id\": \"adipisicing\",\n \"internal\": true,\n \"ip\": \"consequat in\",\n \"roleId\": \"velit culpa cillum est\",\n \"state\": \"REJECTED\"\n}"
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all the whitelist entries.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/whitelist?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"whitelist"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all whitelist entries. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "Successfully retrieved the whitelist entries.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"createdTime\": \"1980-04-03T03:13:57.585Z\",\n   \"expiresAt\": \"2002-09-02T09:31:58.805Z\",\n   \"id\": \"occaecat dolor sunt mollit\",\n   \"internal\": false,\n   \"ip\": \"id ad \",\n   \"roleId\": \"veniam id do\",\n   \"state\": \"UNDEFINED\"\n  },\n  {\n   \"createdTime\": \"2016-07-08T14:37:43.628Z\",\n   \"expiresAt\": \"1992-01-23T03:46:05.431Z\",\n   \"id\": \"qui in deserunt\",\n   \"internal\": false,\n   \"ip\": \"nisi eu officia\",\n   \"roleId\": \"reprehenderit Excepteur exercitation sed\",\n   \"state\": \"UNDEFINED\"\n  }\n ],\n \"page\": {\n  \"number\": 17444063,\n  \"queryState\": \"Ut consequat Lorem\",\n  \"size\": 5755142,\n  \"totalElements\": 36187081,\n  \"totalPages\": 26239428\n }\n}"
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "aute ut id cillum aliqua"
												},
												{
													"key": "orderby",
													"value": "aute ut id cillum aliqua"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a whitelist entry.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n    \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n    \"id\": \"adipisicing\",\n    \"internal\": true,\n    \"ip\": \"consequat in\",\n    \"roleId\": \"velit culpa cillum est\",\n    \"state\": \"REJECTED\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/whitelist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"whitelist"
									]
								},
								"description": "Creates a whitelist entry. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration. Approved hosts can be approved for a user-defined period.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Successfully retrieved the whitelist entry.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"createdTime\": \"2006-03-25T12:42:42.785Z\",\n \"expiresAt\": \"1970-09-02T19:56:02.719Z\",\n \"id\": \"adipisicing\",\n \"internal\": true,\n \"ip\": \"consequat in\",\n \"roleId\": \"velit culpa cillum est\",\n \"state\": \"REJECTED\"\n}"
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get aggregation of state counts for activities.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=1952-11-04T20:26:32.559Z&state=con",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"activity-metrics"
							],
							"query": [
								{
									"key": "createTime",
									"value": "1952-11-04T20:26:32.559Z",
									"description": "createTime gt \"2019-07-08T20:26:16.032Z\""
								},
								{
									"key": "state",
									"value": "con",
									"description": "state in (\"RUNNING\", \"QUEUED\", \"PENDING_CANCELLATION\")."
								}
							]
						},
						"description": "Retrieves aggregation metrics for jobs and job groups in different states.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor does not have required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=1952-11-04T20:26:32.559Z&state=con",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "state",
											"value": "con"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successfully returned available resources.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=1952-11-04T20:26:32.559Z&state=con",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "state",
											"value": "con"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"aggregation\": [\n  {\n   \"name\": \"ok\",\n   \"value\": 7\n  },\n  {\n   \"name\": \"canceled\",\n   \"value\": 1\n  },\n  {\n   \"name\": \"failed\",\n   \"value\": 3\n  },\n  {\n   \"name\": \"ok_with_errors\",\n   \"value\": 1\n  },\n  {\n   \"name\": \"pending_cancellation\",\n   \"value\": 2\n  },\n  {\n   \"name\": \"queued\",\n   \"value\": 3\n  },\n  {\n   \"name\": \"running\",\n   \"value\": 10\n  }\n ]\n}"
						},
						{
							"name": "A server error prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=1952-11-04T20:26:32.559Z&state=con",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "state",
											"value": "con"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authenticated.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=1952-11-04T20:26:32.559Z&state=con",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "state",
											"value": "con"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid. Check request body and/or filters.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=1952-11-04T20:26:32.559Z&state=con",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "state",
											"value": "con"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Get the agent registration status.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"agent-registration-status"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "aute ut id cillum aliqua",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								}
							]
						},
						"description": "Retrieves the agent registration status. You can filter and sort various fields.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Service unavailable. Internal server error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Successfully returned the result.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"agent\": {\n    \"address\": \"dolor nisi dolor Excepteur\",\n    \"certificateSigningRequest\": \"dolor irure\",\n    \"createdTime\": \"proident et\",\n    \"id\": \"esse ad dolor\",\n    \"plugins\": [\n     {\n      \"arch\": \"X86\",\n      \"binaryPath\": \"anim labore veniam\",\n      \"createdAt\": \"2002-03-01T05:51:25.605Z\",\n      \"endpoints\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"id\": \"dolor non\",\n      \"name\": \"adipisicing eu irure ea\",\n      \"os\": \"LINUX\",\n      \"tenantId\": \"eiusmod fugiat est Lorem\",\n      \"updatedAt\": \"1995-09-16T04:23:09.763Z\",\n      \"version\": \"laboris fugiat velit\"\n     },\n     {\n      \"arch\": \"AMD64\",\n      \"binaryPath\": \"mollit magna ex fugiat cu\",\n      \"createdAt\": \"1984-11-11T14:32:48.675Z\",\n      \"endpoints\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"id\": \"officia velit\",\n      \"name\": \"mollit est quis incididunt elit\",\n      \"os\": \"LINUX\",\n      \"tenantId\": \"qui ex do amet ut\",\n      \"updatedAt\": \"1956-04-25T18:43:00.503Z\",\n      \"version\": \"par\"\n     }\n    ],\n    \"port\": 42141,\n    \"registeredTime\": \"est magna\",\n    \"version\": \"irure exercitation\"\n   },\n   \"applications\": [\n    {\n     \"name\": \"irure in dolor velit exercitation\",\n     \"packageId\": \"et\",\n     \"packageVersion\": \"amet officia mollit reprehenderit\",\n     \"version\": \"incididunt\"\n    },\n    {\n     \"name\": \"ullamco\",\n     \"packageId\": \"amet voluptate elit qui officia\",\n     \"packageVersion\": \"of\",\n     \"version\": \"nulla \"\n    }\n   ],\n   \"hostname\": \"reprehenderit commodo\",\n   \"inventorySourceId\": \"reprehenderit Duis ad\",\n   \"status\": \"PENDING\",\n   \"summary\": [\n    {\n     \"pending\": -62200154,\n     \"registered\": 57163024,\n     \"rejected\": -57365610,\n     \"updatesAvailable\": 65994611,\n     \"waiting\": 26777380\n    },\n    {\n     \"pending\": -29609518,\n     \"registered\": -12093753,\n     \"rejected\": 57441543,\n     \"updatesAvailable\": -39729195,\n     \"waiting\": -52046225\n    }\n   ],\n   \"whitelist\": {\n    \"createdTime\": \"1979-05-21T21:37:23.105Z\",\n    \"expiresAt\": \"1986-09-12T22:16:01.140Z\",\n    \"id\": \"cillum\",\n    \"internal\": true,\n    \"ip\": \"consectetur Excepteur\",\n    \"roleId\": \"ut dolore\",\n    \"state\": \"APPROVED\"\n   }\n  },\n  {\n   \"agent\": {\n    \"address\": \"Excepteur ipsum consequat id in\",\n    \"certificateSigningRequest\": \"commodo officia\",\n    \"createdTime\": \"eiusmod sit officia aute nulla\",\n    \"id\": \"amet \",\n    \"plugins\": [\n     {\n      \"arch\": \"X86\",\n      \"binaryPath\": \"eiusmod Duis\",\n      \"createdAt\": \"1998-02-26T15:26:58.443Z\",\n      \"endpoints\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"id\": \"aliqua\",\n      \"name\": \"fugiat amet\",\n      \"os\": \"WINDOWS\",\n      \"tenantId\": \"proident\",\n      \"updatedAt\": \"2003-10-06T20:24:10.167Z\",\n      \"version\": \"adipisicing exercitation minim occaecat nisi\"\n     },\n     {\n      \"arch\": \"AMD64\",\n      \"binaryPath\": \"proident cillum\",\n      \"createdAt\": \"1990-10-12T19:47:05.543Z\",\n      \"endpoints\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"id\": \"in ipsum occaecat\",\n      \"name\": \"aliquip ut et\",\n      \"os\": \"WINDOWS\",\n      \"tenantId\": \"fugiat culpa\",\n      \"updatedAt\": \"2009-04-17T08:23:41.139Z\",\n      \"version\": \"tempor incididunt\"\n     }\n    ],\n    \"port\": 48418,\n    \"registeredTime\": \"con\",\n    \"version\": \"commodo in occaecat\"\n   },\n   \"applications\": [\n    {\n     \"name\": \"ea eiusmod\",\n     \"packageId\": \"mollit aliquip\",\n     \"packageVersion\": \"qui commodo magna est\",\n     \"version\": \"ipsum\"\n    },\n    {\n     \"name\": \"eu eiu\",\n     \"packageId\": \"tempor proident dolore\",\n     \"packageVersion\": \"consectetur ut\",\n     \"version\": \"si\"\n    }\n   ],\n   \"hostname\": \"fugiat do commodo cupidatat ullamco\",\n   \"inventorySourceId\": \"exercitation\",\n   \"status\": \"PENDING\",\n   \"summary\": [\n    {\n     \"pending\": -69949112,\n     \"registered\": -85943496,\n     \"rejected\": -53868218,\n     \"updatesAvailable\": 33773210,\n     \"waiting\": -94401412\n    },\n    {\n     \"pending\": 8157325,\n     \"registered\": 577896,\n     \"rejected\": -68957612,\n     \"updatesAvailable\": -16315594,\n     \"waiting\": 78696668\n    }\n   ],\n   \"whitelist\": {\n    \"createdTime\": \"2011-11-24T15:23:23.057Z\",\n    \"expiresAt\": \"1941-10-19T13:20:42.167Z\",\n    \"id\": \"fugiat mollit aliqua\",\n    \"internal\": true,\n    \"ip\": \"labore amet\",\n    \"roleId\": \"sint sit incididunt\",\n    \"state\": \"REJECTED\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": 8290167,\n  \"queryState\": \"fugiat eiusmo\",\n  \"size\": -97995244,\n  \"totalElements\": 12072469,\n  \"totalPages\": -59493941\n }\n}"
						},
						{
							"name": "Bad request. Invalid argument.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Get all Alert metrics.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"alert-metrics"
							],
							"query": [
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								}
							]
						},
						"description": "Retrieves all alert metrics posted within a given time interval and includes the number of unacknowledged critical, warning, and informational alerts.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "Successfully returned available alert metrics.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"fromPostTime\": \"2019-10-20T21:36:41.590Z\",\n \"toPostTime\": \"2019-10-21T21:36:41.590Z\",\n \"unacknowledgedCriticalCount\": 0,\n \"unacknowledgedInformationalCount\": 1,\n \"unacknowledgedWarningCount\": 0\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Trigger manual backup for an asset.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assetId\": \"consequat in elit\",\n    \"backupType\": \"AUTO_FULL\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/asset-backups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"asset-backups"
							]
						},
						"description": "Triggers a manual backup for a single asset. The asset must be in a protection policy.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "A resource with the specified ID is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"consequat in elit\",\n    \"backupType\": \"AUTO_FULL\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"consequat in elit\",\n    \"backupType\": \"AUTO_FULL\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"consequat in elit\",\n    \"backupType\": \"AUTO_FULL\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"consequat in elit\",\n    \"backupType\": \"AUTO_FULL\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"consequat in elit\",\n    \"backupType\": \"AUTO_FULL\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successful operation. Returns asset ID, backup type, and task ID.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"consequat in elit\",\n    \"backupType\": \"AUTO_FULL\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"assetId\": \"irure\",\n \"backupType\": \"AUTO_FULL\",\n \"taskId\": \"deserunt aliquip tempor cillum\"\n}"
						}
					]
				},
				{
					"name": "Export asset compliance details as CSV.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"asset-compliance-details"
							],
							"query": [
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								}
							]
						},
						"description": "Retrieves asset compliance details from compliance verification result, extracts some fields, and exports to CSV. This API can support multiple filters (for example: slaId, timeRange, and completionStatus).\n> This endpoint supports execution by the following roles: admin,user\n"
					},
					"response": [
						{
							"name": "Successfully returned a CSV file containing the asset compliance details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/csv"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Network assignment / unassignment on assets.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"ut consequ\",\n                \"networkLabel\": \"adipisicing in pariatur\"\n            },\n            \"id\": \"adipisicing occaecat do deserunt\"\n        },\n        {\n            \"body\": {\n                \"id\": \"ad dolore\",\n                \"networkLabel\": \"anim\"\n            },\n            \"id\": \"do reprehenderit \"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"asset-networks-batch"
							]
						},
						"description": "Initiates assset networks assignment / unassignment batch operation on selected asset ids.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "Successfully patched asset networks.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"exercitation\",\n                \"networkLabel\": \"in enim nisi\"\n            },\n            \"id\": \"culpa in anim cillum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cup\",\n                \"networkLabel\": \"consectetur ad magna cillum\"\n            },\n            \"id\": \"Duis ut do velit\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"exercitation\",\n                \"networkLabel\": \"in enim nisi\"\n            },\n            \"id\": \"culpa in anim cillum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cup\",\n                \"networkLabel\": \"consectetur ad magna cillum\"\n            },\n            \"id\": \"Duis ut do velit\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"exercitation\",\n                \"networkLabel\": \"in enim nisi\"\n            },\n            \"id\": \"culpa in anim cillum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cup\",\n                \"networkLabel\": \"consectetur ad magna cillum\"\n            },\n            \"id\": \"Duis ut do velit\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"exercitation\",\n                \"networkLabel\": \"in enim nisi\"\n            },\n            \"id\": \"culpa in anim cillum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cup\",\n                \"networkLabel\": \"consectetur ad magna cillum\"\n            },\n            \"id\": \"Duis ut do velit\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"exercitation\",\n                \"networkLabel\": \"in enim nisi\"\n            },\n            \"id\": \"culpa in anim cillum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cup\",\n                \"networkLabel\": \"consectetur ad magna cillum\"\n            },\n            \"id\": \"Duis ut do velit\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a batch of assets.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"magna Lorem dolore et\",\n                        \"parallelism\": 60627838\n                    },\n                    {\n                        \"backupType\": \"anim tempor nulla minim ut\",\n                        \"parallelism\": -34625528\n                    }\n                ],\n                \"credentials\": [\n                    {\n                        \"connectionType\": \"Exce\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"anim\",\n                                \"value\": \"consequa\"\n                            },\n                            {\n                                \"name\": \"elit dolore\",\n                                \"value\": \"sint qui dolor\"\n                            }\n                        ],\n                        \"id\": \"Excepteur sunt magn\"\n                    },\n                    {\n                        \"connectionType\": \"ut\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"voluptate veniam officia\",\n                                \"value\": \"fugiat dolor officia\"\n                            },\n                            {\n                                \"name\": \"in dolore consequat\",\n                                \"value\": \"ut Duis cillum minim\"\n                            }\n                        ],\n                        \"id\": \"do sit est minim\"\n                    }\n                ],\n                \"details\": {\n                    \"vm\": {\n                        \"disableCbt\": false,\n                        \"disableQuiescing\": true\n                    }\n                },\n                \"id\": \"sunt pariatur\"\n            },\n            \"id\": \"sint commodo\"\n        },\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"fugiat cupidatat exercit\",\n                        \"parallelism\": -93771048\n                    },\n                    {\n                        \"backupType\": \"aute ut ut mollit tempor\",\n                        \"parallelism\": 63009129\n                    }\n                ],\n                \"credentials\": [\n                    {\n                        \"connectionType\": \"aliqua\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"ea ut Duis cul\",\n                                \"value\": \"ex magna\"\n                            },\n                            {\n                                \"name\": \"reprehenderit eiusmod incididunt aliquip\",\n                                \"value\": \"sit cillum est irure\"\n                            }\n                        ],\n                        \"id\": \"dolor qui\"\n                    },\n                    {\n                        \"connectionType\": \"ut Duis\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"dolore voluptate Ut Lorem\",\n                                \"value\": \"veniam cillum et\"\n                            },\n                            {\n                                \"name\": \"deserunt incididunt tempor sit\",\n                                \"value\": \"qui nisi eiusmod\"\n                            }\n                        ],\n                        \"id\": \"quis labore ad e\"\n                    }\n                ],\n                \"details\": {\n                    \"vm\": {\n                        \"disableCbt\": true,\n                        \"disableQuiescing\": true\n                    }\n                },\n                \"id\": \"do\"\n            },\n            \"id\": \"est\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/assets-batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"assets-batch"
							]
						},
						"description": "Update a batch of assets.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The batch of assets have been update successfully.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"do sint ut elit\",\n                        \"parallelism\": 70047398\n                    },\n                    {\n                        \"backupType\": \"dolore enim Ut\",\n                        \"parallelism\": -94333367\n                    }\n                ],\n                \"credentials\": [\n                    {\n                        \"connectionType\": \"consequat reprehenderit voluptate ipsum\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"in dolor fugiat\",\n                                \"value\": \"do aliqua\"\n                            },\n                            {\n                                \"name\": \"reprehenderit incididunt Excepteur labore\",\n                                \"value\": \"elit dolore\"\n                            }\n                        ],\n                        \"id\": \"ad deserunt tempor\"\n                    },\n                    {\n                        \"connectionType\": \"in ad dolore\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"in ad\",\n                                \"value\": \"Duis ut veniam\"\n                            },\n                            {\n                                \"name\": \"occaecat\",\n                                \"value\": \"sunt enim commodo in\"\n                            }\n                        ],\n                        \"id\": \"proident cillum\"\n                    }\n                ],\n                \"details\": {\n                    \"vm\": {\n                        \"disableCbt\": false,\n                        \"disableQuiescing\": false\n                    }\n                },\n                \"id\": \"anim magna elit officia\"\n            },\n            \"id\": \"mollit occaecat\"\n        },\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"in elit\",\n                        \"parallelism\": -80464249\n                    },\n                    {\n                        \"backupType\": \"elit Ut velit\",\n                        \"parallelism\": -19936573\n                    }\n                ],\n                \"credentials\": [\n                    {\n                        \"connectionType\": \"est ad pariatur\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"esse sit\",\n                                \"value\": \"veniam ad temp\"\n                            },\n                            {\n                                \"name\": \"voluptate deserunt eiusmod\",\n                                \"value\": \"cupidatat enim\"\n                            }\n                        ],\n                        \"id\": \"deserunt fugiat do\"\n                    },\n                    {\n                        \"connectionType\": \"reprehenderit pariatur\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"dolore do\",\n                                \"value\": \"ea exercitation commodo quis\"\n                            },\n                            {\n                                \"name\": \"consequat labore laborum\",\n                                \"value\": \"deserunt pariatur exercitation sed\"\n                            }\n                        ],\n                        \"id\": \"sunt eiusmod ad ut\"\n                    }\n                ],\n                \"details\": {\n                    \"vm\": {\n                        \"disableCbt\": false,\n                        \"disableQuiescing\": true\n                    }\n                },\n                \"id\": \"veniam dolor amet \"\n            },\n            \"id\": \"enim velit amet consectetur reprehenderit\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/assets-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"assets-batch"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Some of the assets failed to update.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"do sint ut elit\",\n                        \"parallelism\": 70047398\n                    },\n                    {\n                        \"backupType\": \"dolore enim Ut\",\n                        \"parallelism\": -94333367\n                    }\n                ],\n                \"credentials\": [\n                    {\n                        \"connectionType\": \"consequat reprehenderit voluptate ipsum\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"in dolor fugiat\",\n                                \"value\": \"do aliqua\"\n                            },\n                            {\n                                \"name\": \"reprehenderit incididunt Excepteur labore\",\n                                \"value\": \"elit dolore\"\n                            }\n                        ],\n                        \"id\": \"ad deserunt tempor\"\n                    },\n                    {\n                        \"connectionType\": \"in ad dolore\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"in ad\",\n                                \"value\": \"Duis ut veniam\"\n                            },\n                            {\n                                \"name\": \"occaecat\",\n                                \"value\": \"sunt enim commodo in\"\n                            }\n                        ],\n                        \"id\": \"proident cillum\"\n                    }\n                ],\n                \"details\": {\n                    \"vm\": {\n                        \"disableCbt\": false,\n                        \"disableQuiescing\": false\n                    }\n                },\n                \"id\": \"anim magna elit officia\"\n            },\n            \"id\": \"mollit occaecat\"\n        },\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"in elit\",\n                        \"parallelism\": -80464249\n                    },\n                    {\n                        \"backupType\": \"elit Ut velit\",\n                        \"parallelism\": -19936573\n                    }\n                ],\n                \"credentials\": [\n                    {\n                        \"connectionType\": \"est ad pariatur\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"esse sit\",\n                                \"value\": \"veniam ad temp\"\n                            },\n                            {\n                                \"name\": \"voluptate deserunt eiusmod\",\n                                \"value\": \"cupidatat enim\"\n                            }\n                        ],\n                        \"id\": \"deserunt fugiat do\"\n                    },\n                    {\n                        \"connectionType\": \"reprehenderit pariatur\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"dolore do\",\n                                \"value\": \"ea exercitation commodo quis\"\n                            },\n                            {\n                                \"name\": \"consequat labore laborum\",\n                                \"value\": \"deserunt pariatur exercitation sed\"\n                            }\n                        ],\n                        \"id\": \"sunt eiusmod ad ut\"\n                    }\n                ],\n                \"details\": {\n                    \"vm\": {\n                        \"disableCbt\": false,\n                        \"disableQuiescing\": true\n                    }\n                },\n                \"id\": \"veniam dolor amet \"\n            },\n            \"id\": \"enim velit amet consectetur reprehenderit\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/assets-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"assets-batch"
									]
								}
							},
							"status": "Multi-Status (WebDAV) (RFC 4918)",
							"code": 207,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"responses\": [\n  {\n   \"body\": {\n    \"code\": 71045500,\n    \"extendedInfo\": \"nulla adipisicing quis amet\",\n    \"path\": \"sint reprehenderit dolore do\",\n    \"reason\": \"Ut ut est\",\n    \"remediation\": \"in in laboris \",\n    \"timestamp\": 98704629\n   },\n   \"id\": \"ad commodo exer\",\n   \"status\": \"eiusmod laborum id sed\"\n  },\n  {\n   \"body\": {\n    \"code\": 62113467,\n    \"extendedInfo\": \"reprehenderit laboris sit commodo tempor\",\n    \"path\": \"magna et Excepteur laboris officia\",\n    \"reason\": \"id irure\",\n    \"remediation\": \"dolore officia\",\n    \"timestamp\": 34191857\n   },\n   \"id\": \"et minim id ullamco\",\n   \"status\": \"proident\"\n  }\n ]\n}"
						},
						{
							"name": "Error Response.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"do sint ut elit\",\n                        \"parallelism\": 70047398\n                    },\n                    {\n                        \"backupType\": \"dolore enim Ut\",\n                        \"parallelism\": -94333367\n                    }\n                ],\n                \"credentials\": [\n                    {\n                        \"connectionType\": \"consequat reprehenderit voluptate ipsum\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"in dolor fugiat\",\n                                \"value\": \"do aliqua\"\n                            },\n                            {\n                                \"name\": \"reprehenderit incididunt Excepteur labore\",\n                                \"value\": \"elit dolore\"\n                            }\n                        ],\n                        \"id\": \"ad deserunt tempor\"\n                    },\n                    {\n                        \"connectionType\": \"in ad dolore\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"in ad\",\n                                \"value\": \"Duis ut veniam\"\n                            },\n                            {\n                                \"name\": \"occaecat\",\n                                \"value\": \"sunt enim commodo in\"\n                            }\n                        ],\n                        \"id\": \"proident cillum\"\n                    }\n                ],\n                \"details\": {\n                    \"vm\": {\n                        \"disableCbt\": false,\n                        \"disableQuiescing\": false\n                    }\n                },\n                \"id\": \"anim magna elit officia\"\n            },\n            \"id\": \"mollit occaecat\"\n        },\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"in elit\",\n                        \"parallelism\": -80464249\n                    },\n                    {\n                        \"backupType\": \"elit Ut velit\",\n                        \"parallelism\": -19936573\n                    }\n                ],\n                \"credentials\": [\n                    {\n                        \"connectionType\": \"est ad pariatur\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"esse sit\",\n                                \"value\": \"veniam ad temp\"\n                            },\n                            {\n                                \"name\": \"voluptate deserunt eiusmod\",\n                                \"value\": \"cupidatat enim\"\n                            }\n                        ],\n                        \"id\": \"deserunt fugiat do\"\n                    },\n                    {\n                        \"connectionType\": \"reprehenderit pariatur\",\n                        \"extraInfo\": [\n                            {\n                                \"name\": \"dolore do\",\n                                \"value\": \"ea exercitation commodo quis\"\n                            },\n                            {\n                                \"name\": \"consequat labore laborum\",\n                                \"value\": \"deserunt pariatur exercitation sed\"\n                            }\n                        ],\n                        \"id\": \"sunt eiusmod ad ut\"\n                    }\n                ],\n                \"details\": {\n                    \"vm\": {\n                        \"disableCbt\": false,\n                        \"disableQuiescing\": true\n                    }\n                },\n                \"id\": \"veniam dolor amet \"\n            },\n            \"id\": \"enim velit amet consectetur reprehenderit\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/assets-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"assets-batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Sign a certificate signing request (CSR).",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"csr\": \"voluptate aliqua do\",\n    \"fqdn\": \"ipsum cillum in\",\n    \"ips\": \"irure\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/certificates-signing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"certificates-signing"
							]
						},
						"description": "Signs a CSR by providing the certificate content and the IP and FQDN of the external host. The IP of the external host must be added to the whitelist before signing the CSR.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin \n"
					},
					"response": [
						{
							"name": "The Authorization token is either invalid or expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"voluptate aliqua do\",\n    \"fqdn\": \"ipsum cillum in\",\n    \"ips\": \"irure\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request body is either invalid or is missing the required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"voluptate aliqua do\",\n    \"fqdn\": \"ipsum cillum in\",\n    \"ips\": \"irure\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"voluptate aliqua do\",\n    \"fqdn\": \"ipsum cillum in\",\n    \"ips\": \"irure\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Request could not be processed because of a data conflict.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"voluptate aliqua do\",\n    \"fqdn\": \"ipsum cillum in\",\n    \"ips\": \"irure\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An issue has occurred on the system. Please contact the system administrator.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"voluptate aliqua do\",\n    \"fqdn\": \"ipsum cillum in\",\n    \"ips\": \"irure\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully signed CSR and returned the signed certificate.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"voluptate aliqua do\",\n    \"fqdn\": \"ipsum cillum in\",\n    \"ips\": \"irure\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"rootCA\": \"ulla\",\n \"cert\": \"exercitation\",\n \"id\": \"commodo\"\n}"
						}
					]
				},
				{
					"name": "Get Cloud DR target networks.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud-dr-regions",
								":region",
								"networks"
							],
							"variable": [
								{
									"key": "region",
									"value": "aute ut id cillum aliqua",
									"type": "string",
									"description": "(Required) Specific region."
								}
							]
						},
						"description": "Retrieves Cloud Disaster Recovery (Cloud DR) target networks for the specified region. Getting this information enables you to run a disaster recovery operation.\n> This endpoint supports execution by the following roles: user\n"
					},
					"response": [
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The response is a list of all the available networks in the specified region.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"securityGroups\": [\n    {\n     \"id\": \"eu\",\n     \"name\": \"cupidatat Lorem non est\"\n    },\n    {\n     \"id\": \"dolore sed\",\n     \"name\": \"enim adipisicing laborum\"\n    }\n   ],\n   \"subnets\": [\n    {\n     \"addressSpace\": \"Duis\",\n     \"occupiedIPs\": [\n      \"amet consequat et elit nostrud\",\n      \"sint tempor dolore reprehenderit laboris\"\n     ],\n     \"subnetId\": \"aute laboris eu\",\n     \"subnetName\": \"ex in dolore esse\",\n     \"subnetZone\": \"nulla cupidatat do magna\"\n    },\n    {\n     \"addressSpace\": \"sunt magna tempor pariatur\",\n     \"occupiedIPs\": [\n      \"nostrud\",\n      \"elit voluptate\"\n     ],\n     \"subnetId\": \"aute ex Duis voluptate\",\n     \"subnetName\": \"nostrud Duis\",\n     \"subnetZone\": \"officia tempor\"\n    }\n   ],\n   \"virtualNetworkId\": \"veniam dolore voluptate\",\n   \"virtualNetworkName\": \"occaecat consequat\"\n  },\n  {\n   \"securityGroups\": [\n    {\n     \"id\": \"ut ad veniam ipsum\",\n     \"name\": \"in exercitation commodo do\"\n    },\n    {\n     \"id\": \"nostrud cillum\",\n     \"name\": \"occaecat laborum culpa aliquip\"\n    }\n   ],\n   \"subnets\": [\n    {\n     \"addressSpace\": \"eu laborum\",\n     \"occupiedIPs\": [\n      \"sit tempor\",\n      \"ut est quis deserunt\"\n     ],\n     \"subnetId\": \"Duis exercitation aliqua\",\n     \"subnetName\": \"amet Duis et velit\",\n     \"subnetZone\": \"fugiat in commodo dolore\"\n    },\n    {\n     \"addressSpace\": \"sed irure ex\",\n     \"occupiedIPs\": [\n      \"ullamco velit irure\",\n      \"aute nisi\"\n     ],\n     \"subnetId\": \"irur\",\n     \"subnetName\": \"qui Ut cillum\",\n     \"subnetZone\": \"dolor\"\n    }\n   ],\n   \"virtualNetworkId\": \"tempor non\",\n   \"virtualNetworkName\": \"culpa voluptate\"\n  }\n ],\n \"pageInfo\": {\n  \"number\": -26163746,\n  \"queryState\": \"in eu commodo tempor\",\n  \"size\": -86918763,\n  \"totalElements\": 60246564,\n  \"totalPages\": 74676028\n }\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Get CDRS version.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud-dr-server-version"
							]
						},
						"description": "Retrieves the Cloud Disaster Recovery Server (CDRS) version.\n> This endpoint supports execution by the following roles: user\n"
					},
					"response": [
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successfully returned CDRS version.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"version\": \"cillum ut nulla reprehenderit qui\"\n}"
						},
						{
							"name": "The requester is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requester is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Creates cloud tiering process for an asset or a copy set.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"protectionCopySetId\": \"anim aliquip pariatur quis\",\n    \"assetId\": \"sit ea tempor do cupidatat\",\n    \"cloudTierStageId\": \"dolor ea in irure\",\n    \"protectionLifeCycleId\": \"pariatur quis elit \",\n    \"protectionPolicyId\": \"reprehenderit esse occaecat laboris\",\n    \"workflowTaskId\": \"irure culpa\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud-tiered-copies"
							]
						},
						"description": "Starts a process to move copies from the Data Domain active tier to the cloud tier/cloud unit. Copies are moved to the cloud for long-term retention.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"anim aliquip pariatur quis\",\n    \"assetId\": \"sit ea tempor do cupidatat\",\n    \"cloudTierStageId\": \"dolor ea in irure\",\n    \"protectionLifeCycleId\": \"pariatur quis elit \",\n    \"protectionPolicyId\": \"reprehenderit esse occaecat laboris\",\n    \"workflowTaskId\": \"irure culpa\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requester is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"anim aliquip pariatur quis\",\n    \"assetId\": \"sit ea tempor do cupidatat\",\n    \"cloudTierStageId\": \"dolor ea in irure\",\n    \"protectionLifeCycleId\": \"pariatur quis elit \",\n    \"protectionPolicyId\": \"reprehenderit esse occaecat laboris\",\n    \"workflowTaskId\": \"irure culpa\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requester is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"anim aliquip pariatur quis\",\n    \"assetId\": \"sit ea tempor do cupidatat\",\n    \"cloudTierStageId\": \"dolor ea in irure\",\n    \"protectionLifeCycleId\": \"pariatur quis elit \",\n    \"protectionPolicyId\": \"reprehenderit esse occaecat laboris\",\n    \"workflowTaskId\": \"irure culpa\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Cloud tiering process for asset has been created. ",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"anim aliquip pariatur quis\",\n    \"assetId\": \"sit ea tempor do cupidatat\",\n    \"cloudTierStageId\": \"dolor ea in irure\",\n    \"protectionLifeCycleId\": \"pariatur quis elit \",\n    \"protectionPolicyId\": \"reprehenderit esse occaecat laboris\",\n    \"workflowTaskId\": \"irure culpa\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"taskId\": \"consectetur eiusmod nostrud\"\n}"
						},
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"anim aliquip pariatur quis\",\n    \"assetId\": \"sit ea tempor do cupidatat\",\n    \"cloudTierStageId\": \"dolor ea in irure\",\n    \"protectionLifeCycleId\": \"pariatur quis elit \",\n    \"protectionPolicyId\": \"reprehenderit esse occaecat laboris\",\n    \"workflowTaskId\": \"irure culpa\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Get all compliance details.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"compliance-details"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "aute ut id cillum aliqua",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								}
							]
						},
						"description": "Retrieves the **Compliance Details**. **Compliance Detail** is a summary of the compliance result for one asset on one SLA on one stage of policy. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset. Normally, one compliance result has multiple assigned SLAs. This API can support multiple filters (for example, assetId and completionTime).\n\nThis API has a known issue for pagination. The size is not the actual page size, but the compliance result size.  For example, if you request a page size of 10, you receive 10 compliance results. If each compliance result has 4 SLAs on different stages, the return size is 40 instead of 10. The totalPages and totalElements properties are for the compliance result instead of compliance detail.\n\n> This endpoint supports execution by the following roles: admin,user\n\n> This endpoint supports pagination with types: random,serial\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "An default error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successfully returned available compliance results.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"assetId\": \"sed\",\n   \"completionStatus\": \"FAILED\",\n   \"completionTime\": \"1947-10-13T05:39:44.613Z\",\n   \"createdAt\": \"1977-04-18T13:39:44.754Z\",\n   \"failedObjectiveList\": [\n    {\n     \"code\": \"reprehenderit\",\n     \"copyType\": \"voluptate\",\n     \"name\": \"aliqua sint\",\n     \"reason\": \"ipsum\",\n     \"remediation\": \"sunt non qui\"\n    },\n    {\n     \"code\": \"elit amet\",\n     \"copyType\": \"dolore sint\",\n     \"name\": \"amet irure in \",\n     \"reason\": \"Excepteur enim sunt\",\n     \"remediation\": \"Ut elit\"\n    }\n   ],\n   \"id\": \"quis incididunt\",\n   \"nextStartTime\": \"2005-01-20T18:16:11.662Z\",\n   \"objectiveCount\": 8,\n   \"objectiveFailedNameList\": [\n    \"Minimum Copies\",\n    \"Deletion Compliance\",\n    \"Recovery Point\",\n    \"Retention Time\",\n    \"Compliance Window\",\n    \"Maximum Copies\",\n    \"Retention Lock\",\n    \"Location\"\n   ],\n   \"objectiveSuccessCount\": 7,\n   \"plcId\": \"consectetur Excepteur\",\n   \"protectionPolicyId\": \"consectetur Ut \",\n   \"slaId\": \"id Duis qui\",\n   \"stageId\": \"consequat amet voluptate\",\n   \"startTime\": \"1955-05-27T09:00:36.614Z\",\n   \"status\": \"FAILED\",\n   \"windowEndTime\": \"1993-01-03T09:02:24.516Z\"\n  },\n  {\n   \"assetId\": \"in eu\",\n   \"completionStatus\": \"SUCCESS\",\n   \"completionTime\": \"2002-01-23T11:36:00.498Z\",\n   \"createdAt\": \"1990-02-01T17:11:23.852Z\",\n   \"failedObjectiveList\": [\n    {\n     \"code\": \"nostrud sint\",\n     \"copyType\": \"dolore ipsum do ut reprehenderit\",\n     \"name\": \"aute consectetur sint elit\",\n     \"reason\": \"est aliqua nostrud\",\n     \"remediation\": \"sed consequat ut\"\n    },\n    {\n     \"code\": \"officia sed Duis dolor\",\n     \"copyType\": \"consectetur ullamco cillum amet\",\n     \"name\": \"cillum in officia Duis\",\n     \"reason\": \"consectetur adipisicing\",\n     \"remediation\": \"Excepteu\"\n    }\n   ],\n   \"id\": \"mollit do\",\n   \"nextStartTime\": \"1957-11-02T04:09:40.265Z\",\n   \"objectiveCount\": 6,\n   \"objectiveFailedNameList\": [\n    \"Minimum Copies\",\n    \"Compliance Window\",\n    \"Maximum Copies\",\n    \"Recovery Point\",\n    \"Deletion Compliance\",\n    \"Location\",\n    \"Retention Time\",\n    \"Retention Lock\"\n   ],\n   \"objectiveSuccessCount\": 4,\n   \"plcId\": \"elit do ut reprehenderit\",\n   \"protectionPolicyId\": \"mollit ut cillum veniam\",\n   \"slaId\": \"voluptate\",\n   \"stageId\": \"ipsum voluptate\",\n   \"startTime\": \"1968-01-04T04:01:59.838Z\",\n   \"status\": \"FAILED\",\n   \"windowEndTime\": \"1976-06-08T04:07:27.160Z\"\n  }\n ],\n \"page\": {\n  \"number\": -46992079,\n  \"queryState\": \"Ut eiusmod\",\n  \"size\": -66430047,\n  \"totalElements\": -94787584,\n  \"totalPages\": 88056272\n }\n}"
						}
					]
				},
				{
					"name": "Change retention time for copies.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"est cillum aliqua\",\n                \"retentionTime\": \"1985-02-15T16:11:16.297Z\"\n            },\n            \"id\": \"cillum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"fugiat ea reprehenderit\",\n                \"retentionTime\": \"1989-06-01T05:52:58.866Z\"\n            },\n            \"id\": \"Ut deserunt\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/copies-batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"copies-batch"
							]
						},
						"description": "Changes retention time for copies. All asset types and backup types are supported. The maximum batch size is 1000.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The request is invalid.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"amet nostrud proident laborum sed\",\n                \"retentionTime\": \"1997-03-21T04:30:51.695Z\"\n            },\n            \"id\": \"deserunt labore laborum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"do\",\n                \"retentionTime\": \"1981-01-19T12:26:42.243Z\"\n            },\n            \"id\": \"est id\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"amet nostrud proident laborum sed\",\n                \"retentionTime\": \"1997-03-21T04:30:51.695Z\"\n            },\n            \"id\": \"deserunt labore laborum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"do\",\n                \"retentionTime\": \"1981-01-19T12:26:42.243Z\"\n            },\n            \"id\": \"est id\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Retention time change request has been accepted.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"amet nostrud proident laborum sed\",\n                \"retentionTime\": \"1997-03-21T04:30:51.695Z\"\n            },\n            \"id\": \"deserunt labore laborum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"do\",\n                \"retentionTime\": \"1981-01-19T12:26:42.243Z\"\n            },\n            \"id\": \"est id\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"activityId\": \"eiusmod nostrud\"\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"amet nostrud proident laborum sed\",\n                \"retentionTime\": \"1997-03-21T04:30:51.695Z\"\n            },\n            \"id\": \"deserunt labore laborum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"do\",\n                \"retentionTime\": \"1981-01-19T12:26:42.243Z\"\n            },\n            \"id\": \"est id\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"amet nostrud proident laborum sed\",\n                \"retentionTime\": \"1997-03-21T04:30:51.695Z\"\n            },\n            \"id\": \"deserunt labore laborum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"do\",\n                \"retentionTime\": \"1981-01-19T12:26:42.243Z\"\n            },\n            \"id\": \"est id\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Batch delete copies.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"velit in\"\n            },\n            \"id\": \"aliquip proident cillum\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"consectetur adipisicing nostrud officia irure\"\n            },\n            \"id\": \"sint ipsum commodo\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"copies-deletion-batch"
							],
							"query": [
								{
									"key": "cascadeDelete",
									"value": "false",
									"description": "For asset type without dependency, this option makes no difference. For asset type with dependency between copies:\n- cascadeDelete=true deletes all copies in the dependency chain.\n- cascadeDelete=false does not delete any copy with HTTP status code of 409 (Conflict).\n- By default, if cascadeDelete is not specified, it functions as if cascadeDelete is false."
								},
								{
									"key": "removeConfigurationOnly",
									"value": "false",
									"description": "- removeConfigurationOnly=true only deletes metadata from PowerProtect Data Manager without physically deleting from storage or application agent.\n- removeConfigurationOnly=false deletes copy from storage and application agent (if any). If successfully deletes from storage and application agent, then it deletes metadata from PowerProtect Data Manager.\n- By default, if removeConfigurationOnly is not specified, it behaves as if removeConfigurationOnly is false."
								},
								{
									"key": "forceRemoveLatestBackup",
									"value": "false",
									"description": "- forceRemoveLatestBackup=true enables deleting the latest backup. It may break the later chain, or for VM CBT backup, it may break the in-progress backup.\n- forceRemoveLatestBackup=false, if the specified copy is the latest backup, returns 409 error.\n- By default is forceRemoveLatestBackup is not specified, it behaves as if removeConfigurationOnly is false."
								}
							]
						},
						"description": "Batch deletes copies from different assets and stage types."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"irure tempor\"\n            },\n            \"id\": \"sunt culpa\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"velit tempor deserunt\"\n            },\n            \"id\": \"in consequat sunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"irure tempor\"\n            },\n            \"id\": \"sunt culpa\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"velit tempor deserunt\"\n            },\n            \"id\": \"in consequat sunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"irure tempor\"\n            },\n            \"id\": \"sunt culpa\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"velit tempor deserunt\"\n            },\n            \"id\": \"in consequat sunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"irure tempor\"\n            },\n            \"id\": \"sunt culpa\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"velit tempor deserunt\"\n            },\n            \"id\": \"in consequat sunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"irure tempor\"\n            },\n            \"id\": \"sunt culpa\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"velit tempor deserunt\"\n            },\n            \"id\": \"in consequat sunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"irure tempor\"\n            },\n            \"id\": \"sunt culpa\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"velit tempor deserunt\"\n            },\n            \"id\": \"in consequat sunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Export deleted copies as CSV report.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/copies-report?filter=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"copies-report"
							],
							"query": [
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								}
							]
						},
						"description": "Retrieves deleted copies based on the filter provided and exports detailed information in the report in CSV format.\n> This endpoint supports execution by the following roles: admin,user\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully returned a CSV file containing the deleted copies detail information.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/csv"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get copy metrics.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/copy-metrics?page=1&pageSize=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"copy-metrics"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								}
							]
						},
						"description": "Get copy metrics per asset."
					},
					"response": [
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copy-metrics?page=1&pageSize=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copy-metrics"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copy-metrics?page=1&pageSize=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copy-metrics"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully returned copy metrics.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copy-metrics?page=1&pageSize=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copy-metrics"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"assetId\": \"nisi E\",\n   \"centralizedCopyCount\": -92644446,\n   \"maxCopySize\": 17398880.442374587,\n   \"minCopySize\": 80746452.77506304,\n   \"selfServiceCopyCount\": 26211324,\n   \"stageCopyMetrics\": [\n    {\n     \"copyCount\": 99362789,\n     \"latestCopyTime\": \"1956-04-13T19:00:12.563Z\",\n     \"oldestCopyTime\": \"2007-02-26T12:07:41.781Z\",\n     \"policyId\": \"laboris consequat voluptate\",\n     \"stageId\": \"eiusm\",\n     \"stageType\": \"CLOUD_TIER\"\n    },\n    {\n     \"copyCount\": 65364492,\n     \"latestCopyTime\": \"1951-07-21T15:19:56.335Z\",\n     \"oldestCopyTime\": \"2020-08-28T02:42:07.245Z\",\n     \"policyId\": \"ullamco veniam amet\",\n     \"stageId\": \"enim proident ut\",\n     \"stageType\": \"PROTECTION\"\n    }\n   ],\n   \"totalNumbers\": 84426061\n  },\n  {\n   \"assetId\": \"tempo\",\n   \"centralizedCopyCount\": 95980796,\n   \"maxCopySize\": 58367571.963680685,\n   \"minCopySize\": 4848655.32306467,\n   \"selfServiceCopyCount\": 53049536,\n   \"stageCopyMetrics\": [\n    {\n     \"copyCount\": 86977439,\n     \"latestCopyTime\": \"1961-10-23T22:24:28.225Z\",\n     \"oldestCopyTime\": \"1960-08-19T16:07:38.181Z\",\n     \"policyId\": \"nisi velit\",\n     \"stageId\": \"in laboris minim\",\n     \"stageType\": \"CLOUD_TIER\"\n    },\n    {\n     \"copyCount\": 57458831,\n     \"latestCopyTime\": \"1963-02-26T12:27:37.119Z\",\n     \"oldestCopyTime\": \"1959-07-31T18:00:59.793Z\",\n     \"policyId\": \"ut\",\n     \"stageId\": \"dolore exercitation\",\n     \"stageType\": \"ALL\"\n    }\n   ],\n   \"totalNumbers\": -41739985\n  }\n ],\n \"page\": {\n  \"number\": -10481649,\n  \"queryState\": \"nulla voluptate mollit\",\n  \"size\": -85760729,\n  \"totalElements\": 55090716,\n  \"totalPages\": 78417422\n }\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copy-metrics?page=1&pageSize=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copy-metrics"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copy-metrics?page=1&pageSize=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copy-metrics"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Credentials batch update.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"eu\",\n                \"password\": \"adipisicing in ut Ut in\"\n            },\n            \"id\": \"dolor ipsum laborum\"\n        },\n        {\n            \"body\": {\n                \"id\": \"adipisicing labore nostrud commodo\",\n                \"password\": \"cillum\"\n            },\n            \"id\": \"ullamco deserunt\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/credentials-batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"credentials-batch"
							]
						},
						"description": "Credentials batch update for password\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The request is invalid.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"non do\",\n                \"password\": \"dolor dolor\"\n            },\n            \"id\": \"Ut dolore quis\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cillum qui pariatur magna\",\n                \"password\": \"nisi veniam laborum\"\n            },\n            \"id\": \"aliq\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"non do\",\n                \"password\": \"dolor dolor\"\n            },\n            \"id\": \"Ut dolore quis\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cillum qui pariatur magna\",\n                \"password\": \"nisi veniam laborum\"\n            },\n            \"id\": \"aliq\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"non do\",\n                \"password\": \"dolor dolor\"\n            },\n            \"id\": \"Ut dolore quis\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cillum qui pariatur magna\",\n                \"password\": \"nisi veniam laborum\"\n            },\n            \"id\": \"aliq\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Credential password batch request has been accepted.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"non do\",\n                \"password\": \"dolor dolor\"\n            },\n            \"id\": \"Ut dolore quis\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cillum qui pariatur magna\",\n                \"password\": \"nisi veniam laborum\"\n            },\n            \"id\": \"aliq\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"activityId\": \"voluptate irure\"\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"non do\",\n                \"password\": \"dolor dolor\"\n            },\n            \"id\": \"Ut dolore quis\"\n        },\n        {\n            \"body\": {\n                \"id\": \"cillum qui pariatur magna\",\n                \"password\": \"nisi veniam laborum\"\n            },\n            \"id\": \"aliq\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all cloud units by storage system ID.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"datadomain-cloud-units",
								":storageSystemId"
							],
							"variable": [
								{
									"key": "storageSystemId",
									"value": "aute ut id cillum aliqua",
									"type": "string",
									"description": "(Required) Storage system ID."
								}
							]
						},
						"description": "Provides a storage system ID to retrieve a list of all cloud units on the specified Data Domain storage system. The result contains information about the cloud profile and provider name.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The request completed successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"name\": \"adipisicing Duis\",\n   \"profileName\": \"ut reprehenderit ad eiusmod\",\n   \"providerName\": \"in Excepteur\",\n   \"state\": \"cillum qui\",\n   \"storageArrayId\": \"commodo et\"\n  },\n  {\n   \"name\": \"elit Ut amet\",\n   \"profileName\": \"exercitation Excepteur\",\n   \"providerName\": \"ad fugiat nulla\",\n   \"state\": \"in nulla\",\n   \"storageArrayId\": \"anim occaecat\"\n  }\n ],\n \"page\": {\n  \"number\": 6142480,\n  \"queryState\": \"deserunt laboris cupidatat\",\n  \"size\": 7718042,\n  \"totalElements\": -33539460,\n  \"totalPages\": -36000940\n }\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requested cloud unit does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Get all Data Domain system MTrees.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"datadomain-mtrees"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "aute ut id cillum aliqua",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								}
							]
						},
						"description": "Retrieves a list of all Data Domain MTrees existing in all added Data Domain systems in the current PowerProtect system. The result contains information about each Mtree on the list such as the name, retention lock, storage system, and quotas.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The request completed successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"name\": \"id off\",\n   \"storageSystem\": {\n    \"id\": \"culpa ullamco\"\n   },\n   \"credential\": {\n    \"id\": \"deserunt\"\n   },\n   \"attributes\": {},\n   \"availableCapacityInBytes\": -99232228.34455499,\n   \"createdAt\": \"1977-12-04T21:17:14.381Z\",\n   \"discovered\": false,\n   \"hardCapacityQuotaLevel\": 37879347,\n   \"hardStreamQuotaLevel\": 71092565,\n   \"id\": \"laboris officia proident\",\n   \"lastDiscoveryStatus\": \"qui sunt officia nisi commodo\",\n   \"lastUpdated\": \"2005-11-01T01:31:29.723Z\",\n   \"notDetected\": true,\n   \"protectionCreated\": false,\n   \"replicationSources\": [\n    \"pariatur\",\n    \"cillum\"\n   ],\n   \"replicationTargets\": [\n    \"eiusmod fugiat\",\n    \"incididunt sunt tempor enim pariatur\"\n   ],\n   \"retentionLockMode\": \"sint incididunt reprehenderit sunt\",\n   \"retentionLockStatus\": \"consectetur dolor\",\n   \"retentionMaximum\": -15673441,\n   \"retentionMinimum\": 53998795,\n   \"reusable\": false,\n   \"softCapacityQuotaLevel\": 34285075,\n   \"softStreamQuotaLevel\": 78017172,\n   \"systemManaged\": false,\n   \"tenant\": {\n    \"id\": \"in veniam minim laboris\"\n   },\n   \"totalCapacityInBytes\": 47868782.92266759,\n   \"type\": \"velit pariatur\",\n   \"updatedAt\": \"1956-10-09T14:13:52.391Z\",\n   \"userTags\": [\n    \"cillum\",\n    \"fugiat in ut elit\"\n   ]\n  },\n  {\n   \"name\": \"mollit\",\n   \"storageSystem\": {\n    \"id\": \"pariatur\"\n   },\n   \"credential\": {\n    \"id\": \"dolor ullamco dolore minim\"\n   },\n   \"attributes\": {},\n   \"availableCapacityInBytes\": -66969032.88431422,\n   \"createdAt\": \"1992-11-21T10:57:11.745Z\",\n   \"discovered\": false,\n   \"hardCapacityQuotaLevel\": 13646982,\n   \"hardStreamQuotaLevel\": 8726968,\n   \"id\": \"et eiusmod proident\",\n   \"lastDiscoveryStatus\": \"aute non nostrud\",\n   \"lastUpdated\": \"1996-08-28T09:28:04.763Z\",\n   \"notDetected\": true,\n   \"protectionCreated\": false,\n   \"replicationSources\": [\n    \"nulla amet et Lorem veniam\",\n    \"eiusmod irure culpa ea\"\n   ],\n   \"replicationTargets\": [\n    \"consequat id sed\",\n    \"nostrud\"\n   ],\n   \"retentionLockMode\": \"irure do eiusmod exercitation nisi\",\n   \"retentionLockStatus\": \"ei\",\n   \"retentionMaximum\": 52007699,\n   \"retentionMinimum\": 18019602,\n   \"reusable\": true,\n   \"softCapacityQuotaLevel\": 67630821,\n   \"softStreamQuotaLevel\": 49752643,\n   \"systemManaged\": false,\n   \"tenant\": {\n    \"id\": \"fugiat magna aliqua\"\n   },\n   \"totalCapacityInBytes\": 19086245.500515237,\n   \"type\": \"in sint do offic\",\n   \"updatedAt\": \"1952-12-07T17:25:08.446Z\",\n   \"userTags\": [\n    \"ut\",\n    \"do ullamco\"\n   ]\n  }\n ],\n \"page\": {\n  \"number\": -83028979,\n  \"queryState\": \"sunt ullamco reprehenderit\",\n  \"size\": -64735757,\n  \"totalElements\": 10762119,\n  \"totalPages\": 12740204\n }\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get storage unit by data target ID.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"datadomain-storage-units",
								":dataTargetId"
							],
							"variable": [
								{
									"key": "dataTargetId",
									"value": "aute ut id cillum aliqua",
									"type": "string",
									"description": "(Required) Data target ID"
								}
							]
						},
						"description": "Provides a data target ID to get information about the storage unit such as name, retention lock status, and Data Domain storage system.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requested resource was not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request completed successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"credentialId\": \"enim eiusmod\",\n \"dataAccessIp\": \"qui sunt\",\n \"dataTargetId\": \"consequat\",\n \"retentionLock\": {\n  \"enable\": true,\n  \"mode\": \"GOVERNANCE\"\n },\n \"storageArrayId\": \"aute ut dolor\",\n \"storageUnit\": {\n  \"combinedStreamHardLimit\": 8248419,\n  \"combinedStreamSoftLimit\": -15616237,\n  \"hardLimit\": 18475629,\n  \"id\": \"pariatur velit ex\",\n  \"name\": \"proident nos\",\n  \"softLimit\": 38510699,\n  \"tenantUnit\": \"ut amet\"\n }\n}"
						}
					]
				},
				{
					"name": "Execute dynamic filters.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assetRuleIds\": [\n        \"elit ea ex sed\",\n        \"labo\"\n    ],\n    \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dynamic-filters-execution"
							]
						},
						"description": "Executes dynamic filters.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successfully triggered the dynamic filters.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Get files and folders within protected assets.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"file-instances"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "aute ut id cillum aliqua",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								},
								{
									"key": "copyStartDate",
									"value": "1952-11-04T20:26:32.559Z",
									"description": "The start date from which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be greater or equal to a particular copy start date."
								},
								{
									"key": "copyEndDate",
									"value": "1952-11-04T20:26:32.559Z",
									"description": "The end date up to which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be less or equal to a particular copy end date."
								}
							]
						},
						"description": "Retrieves a paginated list of files and folder documents within the protected assets. By default, a list of 10 objects is returned. The specified query parameters customize the ordering, pagination, and filtering of the result.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "copyStartDate",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "copyEndDate",
											"value": "1952-11-04T20:26:32.559Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Server error prevented the successful completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "copyStartDate",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "copyEndDate",
											"value": "1952-11-04T20:26:32.559Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "copyStartDate",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "copyEndDate",
											"value": "1952-11-04T20:26:32.559Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successfully returned the files and folders within the protected assets.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "copyStartDate",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "copyEndDate",
											"value": "1952-11-04T20:26:32.559Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"assetId\": \"157765f3-65f9-5b74-8e2b-deba621eb371\",\n   \"assetName\": \"WIN750-13\",\n   \"backupType\": \"Windows VM\",\n   \"copyEndDate\": \"2007-02-18T11:02:41.621Z\",\n   \"copyStartDate\": \"2007-02-18T11:02:41.621Z\",\n   \"createdAt\": \"2007-02-18T11:02:41.621Z\",\n   \"id\": \"cdbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"itemType\": \"file\",\n   \"location\": \"C:/Users/Joe Smith/My Documents\",\n   \"name\": \"MyDocument.pdf\",\n   \"protectionPolicyId\": \"ddbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"size\": 10272,\n   \"sourceServer\": \"src-vso.brsvirtdev.asl.lab.emc.com\",\n   \"type\": \"pdf\",\n   \"updatedAt\": \"2007-02-18T11:02:41.621Z\"\n  },\n  {\n   \"assetId\": \"157765f3-65f9-5b74-8e2b-deba621eb371\",\n   \"assetName\": \"WIN750-13\",\n   \"backupType\": \"Windows VM\",\n   \"copyEndDate\": \"2007-02-18T11:02:41.621Z\",\n   \"copyStartDate\": \"2007-02-18T11:02:41.621Z\",\n   \"createdAt\": \"2007-02-18T11:02:41.621Z\",\n   \"id\": \"e3fca052-8a07-11e9-bc42-526af7764f64\",\n   \"itemType\": \"folder\",\n   \"location\": \"C:/Users/Joe Smith\",\n   \"name\": \"Documents\",\n   \"protectionPolicyId\": \"ddbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"size\": 0,\n   \"sourceServer\": \"src-vso.brsvirtdev.asl.lab.emc.com\",\n   \"type\": \"folder\",\n   \"updatedAt\": \"2007-02-18T11:02:41.621Z\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 10,\n  \"totalElements\": 2,\n  \"totalPages\": 1\n }\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&copyStartDate=1952-11-04T20:26:32.559Z&copyEndDate=1952-11-04T20:26:32.559Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "copyStartDate",
											"value": "1952-11-04T20:26:32.559Z"
										},
										{
											"key": "copyEndDate",
											"value": "1952-11-04T20:26:32.559Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Get latest copies of specified assets.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/latest-copies?filter=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"latest-copies"
							],
							"query": [
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								}
							]
						},
						"description": "This API returns the latest copies of the assets that are specified in the filter. One copy for one asset. The filter and the assetId must be provided. Examples follow:\n\nGet latest copies of specified assets\n`GET /api/v2/latest-copies?filter=assetId in (\"725efee5-b9e6-40be-a86c-e42c69e71894\", \"0e11f488-63b4-4a70-860c-994e5e433b19\")`\n\nGet latest copies that satisfy particular copy characteristics\n`GET /api/v2/latest-copies?filter=assetId in (\"725efee5-b9e6-40be-a86c-e42c69e71894\", \"0e11f488-63b4-4a70-860c-994e5e433b19\") and copyType in (\"FULL\", \"DIFFERENTIAL\", \"INCREMENTAL\") and replicatedCopy eq false and location in (\"LOCAL\", \"LOCAL_RECALLED\") and storageSystemId eq \"deaedef1-986a-4a44-a475-80afa3709b1f\" and not state in (\"DELETED\", \"DELETING\", \"SOFT_DELETED\", \"DELETE_FAILED\")`\n\nGet latest copies before a time point\n`GET /api/v2/latest-copies?filter=assetId in (\"725efee5-b9e6-40be-a86c-e42c69e71894\", \"0e11f488-63b4-4a70-860c-994e5e433b19\") and createTime lt \"2020-08-24T08:29:00Z\"`\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requester is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requester is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successfully returned latest copies for specified asset.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"adhocBackup\": true,\n   \"assetId\": \"do veniam ea\",\n   \"backupTransactionId\": \"nostrud eu consequat\",\n   \"baseCopyId\": \"incididunt aute labore\",\n   \"copyConsistency\": \"CRASH_CONSISTENT\",\n   \"copyType\": \"INCR_1_DIFFERENTIAL\",\n   \"createTime\": \"2009-06-08T17:52:01.920Z\",\n   \"dataTargetIds\": [\n    \"in amet ullamco pariatur\",\n    \"fugiat ea occaecat laborum ut\"\n   ],\n   \"details\": {\n    \"k8sBackup\": {\n     \"backupId\": \"Ut aute labore velit\",\n     \"persistentVolumeClaims\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    \"mssqlBackup\": {\n     \"protectionFlowEngine\": \"VMDIRECT\"\n    },\n    \"nasBackup\": {\n     \"directoryCount\": \"veniam est sed\",\n     \"fileCount\": \"amet\",\n     \"snapshotMetadata\": {\n      \"id\": \"fugiat proi\",\n      \"name\": \"Duis deserunt\",\n      \"path\": \"aliquip et cupidatat dolore\",\n      \"pathId\": \"proident\"\n     }\n    },\n    \"vmBackup\": {\n     \"dataMoverType\": \"VADP\"\n    }\n   },\n   \"endTime\": \"1987-12-20T06:13:59.853Z\",\n   \"exportedCopyCount\": 10800323,\n   \"externalId\": \"ut dolore dolor laborum\",\n   \"id\": \"anim\",\n   \"location\": \"CLOUD\",\n   \"logCount\": \"consectetur nisi\",\n   \"metadataIndexingStatus\": \"PARTIAL_SUCCESS\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"Lo\",\n   \"protectionCreated\": false,\n   \"protectionPolicy\": {\n    \"id\": \"cillum in dolor eiusmod\",\n    \"stages\": [\n     {\n      \"id\": \"deserunt fugiat tempor\",\n      \"ownedTime\": \"1998-08-04T13:56:10.597Z\",\n      \"type\": \"REPLICATION\"\n     },\n     {\n      \"id\": \"esse magna\",\n      \"ownedTime\": \"1966-01-22T06:41:40.107Z\",\n      \"type\": \"PROMOTION\"\n     }\n    ]\n   },\n   \"replicatedCopy\": true,\n   \"restoreTargetCompatibilities\": [\n    {\n     \"compatibilityFailureReason\": \"minim eiusmod amet\",\n     \"targetName\": \"ut amet\",\n     \"type\": \"COMPATIBLE\"\n    },\n    {\n     \"compatibilityFailureReason\": \"et\",\n     \"targetName\": \"commodo voluptate\",\n     \"type\": \"COMPATIBLE\"\n    }\n   ],\n   \"retentionLock\": \"ALL_COPIES_UNLOCKED\",\n   \"retentionTime\": \"1941-05-18T03:31:37.264Z\",\n   \"retierTime\": \"2003-02-05T19:01:22.558Z\",\n   \"size\": 13597645,\n   \"startTime\": \"2015-07-13T01:01:42.120Z\",\n   \"state\": \"EXPORTING\",\n   \"storageSystemId\": \"culpa amet elit \",\n   \"validationResult\": {\n    \"status\": \"aliquip commodo velit\",\n    \"time\": \"2017-07-10T02:14:57.057Z\"\n   }\n  },\n  {\n   \"adhocBackup\": false,\n   \"assetId\": \"deserunt \",\n   \"backupTransactionId\": \"proident esse cillum\",\n   \"baseCopyId\": \"tempor laboris amet\",\n   \"copyConsistency\": \"APPLICATION_CONSISTENT\",\n   \"copyType\": \"UNKNOWN\",\n   \"createTime\": \"2006-09-16T18:23:30.137Z\",\n   \"dataTargetIds\": [\n    \"dolore eu\",\n    \"officia amet laborum aute\"\n   ],\n   \"details\": {\n    \"k8sBackup\": {\n     \"backupId\": \"dolore\",\n     \"persistentVolumeClaims\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    \"mssqlBackup\": {\n     \"protectionFlowEngine\": \"APPDIRECT\"\n    },\n    \"nasBackup\": {\n     \"directoryCount\": \"laborum do in s\",\n     \"fileCount\": \"qui Duis mollit cupidatat\",\n     \"snapshotMetadata\": {\n      \"id\": \"eiusmod officia\",\n      \"name\": \"reprehenderit dolore\",\n      \"path\": \"minim commodo ipsum\",\n      \"pathId\": \"officia dol\"\n     }\n    },\n    \"vmBackup\": {\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\"\n    }\n   },\n   \"endTime\": \"2000-03-09T06:06:26.971Z\",\n   \"exportedCopyCount\": -61216830,\n   \"externalId\": \"voluptate commo\",\n   \"id\": \"Duis incididunt\",\n   \"location\": \"LOCAL\",\n   \"logCount\": \"laborum ullamco in cupidatat pariatur\",\n   \"metadataIndexingStatus\": \"SUCCESS\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"pariatur aliqua\",\n   \"protectionCreated\": true,\n   \"protectionPolicy\": {\n    \"id\": \"velit nisi ut\",\n    \"stages\": [\n     {\n      \"id\": \"sed\",\n      \"ownedTime\": \"1976-10-07T16:17:27.269Z\",\n      \"type\": \"REPLICATION\"\n     },\n     {\n      \"id\": \"laboris dolor pariatur magna\",\n      \"ownedTime\": \"1941-11-30T03:36:10.480Z\",\n      \"type\": \"CLOUD_TIER\"\n     }\n    ]\n   },\n   \"replicatedCopy\": false,\n   \"restoreTargetCompatibilities\": [\n    {\n     \"compatibilityFailureReason\": \"culpa cillum dolor et sunt\",\n     \"targetName\": \"in cillum\",\n     \"type\": \"COMPATIBLE\"\n    },\n    {\n     \"compatibilityFailureReason\": \"nisi aliquip\",\n     \"targetName\": \"in eu magna fugiat\",\n     \"type\": \"UNKNOWN\"\n    }\n   ],\n   \"retentionLock\": \"ALL_COPIES_UNLOCKED\",\n   \"retentionTime\": \"2014-09-03T14:26:22.166Z\",\n   \"retierTime\": \"1978-04-15T19:49:08.118Z\",\n   \"size\": -78610663,\n   \"startTime\": \"1980-04-09T12:02:11.910Z\",\n   \"state\": \"CATALOG_DELETE_FAILED\",\n   \"storageSystemId\": \"aliqua irure adipisicing\",\n   \"validationResult\": {\n    \"status\": \"dolor tempor\",\n    \"time\": \"2008-09-05T09:41:15.730Z\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": 63909227,\n  \"queryState\": \"in\",\n  \"size\": -67012827,\n  \"totalElements\": 65708287,\n  \"totalPages\": -75093620\n }\n}"
						}
					]
				},
				{
					"name": "Get disk usage information for the partition on which logging resides.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/log-disk-infos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"log-disk-infos"
							]
						},
						"description": "Returns the current log disk information.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The requestor does not have required permissions to access the resource.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-disk-infos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-disk-infos"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved the log disk information.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-disk-infos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-disk-infos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"totalDiskSpaceBytes\": 72868719,\n   \"availableDiskSpaceBytes\": -31116847\n  },\n  {\n   \"totalDiskSpaceBytes\": -39983099,\n   \"availableDiskSpaceBytes\": -50626721\n  }\n ],\n \"page\": {\n  \"number\": -81604642,\n  \"queryState\": \"consequat dolore adipisicing \",\n  \"size\": 86737228,\n  \"totalElements\": 66666007,\n  \"totalPages\": 55883314\n }\n}"
						},
						{
							"name": "Any server error that prevents completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-disk-infos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-disk-infos"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor did not provide valid authentication credentials.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-disk-infos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-disk-infos"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Log in to your account.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"minim l\",\n    \"password\": \"in elit labore\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"login"
							]
						},
						"description": "Logs in with user credentials. Once logged in, the user may perform operations granted to the user and defined by the user role."
					},
					"response": [
						{
							"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"minim l\",\n    \"password\": \"in elit labore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An internal server error occurred. Please contact the system administrator.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"minim l\",\n    \"password\": \"in elit labore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request body is either invalid or is missing the required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"minim l\",\n    \"password\": \"in elit labore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully logged in with the user.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"minim l\",\n    \"password\": \"in elit labore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"hOaDxPS.JRCkQ.\",\n \"token_type\": \"et id quis in laborum\",\n \"expires_in\": 15495128,\n \"jti\": \"veniam deserunt dolore pariatur\",\n \"refresh_token\": \"tdh8HVyLQ.fVbNZk.\",\n \"scope\": \"consectetur Excepteur proident\"\n}"
						},
						{
							"name": "The user account is locked.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"minim l\",\n    \"password\": \"in elit labore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Locked (WebDAV) (RFC 4918)",
							"code": 423,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The user password is expired. Redirecting the user to change the password.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"minim l\",\n    \"password\": \"in elit labore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The authorization token is either invalid or expired.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"minim l\",\n    \"password\": \"in elit labore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Log out from your account.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logout"
							]
						},
						"description": "Logs out of the user as specified in the access token. When logged out, the user that is defined in the access token can no longer run operations.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The request body is either invalid or is missing the required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully logged out of the current user.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logout"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The authorization token is either invalid or expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An internal server error occurred. Please contact the system administrator.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get required IPs",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=SEARCH&referenceId=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"network-requirement"
							],
							"query": [
								{
									"key": "serverType",
									"value": "SEARCH"
								},
								{
									"key": "referenceId",
									"value": "aute ut id cillum aliqua"
								}
							]
						},
						"description": "Required Ip Count per component type, total just sum all up.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=SEARCH&referenceId=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"network-requirement"
									],
									"query": [
										{
											"key": "serverType",
											"value": "SEARCH"
										},
										{
											"key": "referenceId",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=SEARCH&referenceId=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"network-requirement"
									],
									"query": [
										{
											"key": "serverType",
											"value": "SEARCH"
										},
										{
											"key": "referenceId",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"networks\": [\n  {\n   \"id\": \"aliquip sed veniam\",\n   \"servers\": [\n    {\n     \"ipCount\": 57612049,\n     \"type\": \"V_PROXY\"\n    },\n    {\n     \"ipCount\": 45514852,\n     \"type\": \"V_PROXY\"\n    }\n   ]\n  },\n  {\n   \"id\": \"pariatur velit Duis officia id\",\n   \"servers\": [\n    {\n     \"ipCount\": 3471064,\n     \"type\": \"V_PROXY\"\n    },\n    {\n     \"ipCount\": 43775915,\n     \"type\": \"SEARCH\"\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=SEARCH&referenceId=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"network-requirement"
									],
									"query": [
										{
											"key": "serverType",
											"value": "SEARCH"
										},
										{
											"key": "referenceId",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=SEARCH&referenceId=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"network-requirement"
									],
									"query": [
										{
											"key": "serverType",
											"value": "SEARCH"
										},
										{
											"key": "referenceId",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a list of protection details.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"protection-details"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "aute ut id cillum aliqua",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "aute ut id cillum aliqua",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								},
								{
									"key": "queryState",
									"value": "aute ut id cillum aliqua",
									"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
								}
							]
						},
						"description": "Retrieves a list of existing protections such as backups and replications. If there are too many results, this API request returns the HTTP response code 416 (REQUEST RANGE NOT SATISFIABLE). If successful, the API request returns the HTTP response code 200 (OK).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random,serial\n"
					},
					"response": [
						{
							"name": "Successfully returned available protection details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"assetId\": \"88226852-caa1-4f20-82a8-0cbd1e6b626a\",\n   \"backupLevel\": \"FULL\",\n   \"bytesTransferred\": 1024,\n   \"completionStatus\": \"SUCCESS\",\n   \"completionTime\": \"2019-01-17T03:15:20Z\",\n   \"createdAt\": \"2019-01-17T03:15:22Z\",\n   \"dataTargetId\": \"106eadf2-cb32-46d5-bfe9-674ac66f5dab\",\n   \"error\": {\n    \"code\": \"EEMI-123\",\n    \"extendedReason\": \"Proxy have heavy load right now.\",\n    \"reason\": \"Proxy rest api call timeout.\",\n    \"remediation\": \"Please try again later or contact admin for support.\"\n   },\n   \"id\": \"64c253f8-e3a5-4df6-ac29-f112b2e522aa\",\n   \"initiatedType\": \"ADHOC\",\n   \"nextScheduledTime\": \"2019-02-17T03:15:22Z\",\n   \"plcId\": \"773a2f2f-20de-47e5-ac32-17706eb51ccd\",\n   \"replicatedDataTargetId\": \"5d399e99-a21e-4381-9ba4-f58dae003d99\",\n   \"stageId\": \"66b47cbf-0d98-48c1-a9d0-3a34a2a90d74\",\n   \"startTime\": \"2019-01-17T03:12:01Z\",\n   \"transferDuration\": 10,\n   \"type\": \"PROTECT\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 1,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n }\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is too large to be satisfied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Requested Range Not Satisfiable",
							"code": 416,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "An unexpected error prevent the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=aute ut id cillum aliqua&orderby=aute ut id cillum aliqua&queryState=aute ut id cillum aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "orderby",
											"value": "aute ut id cillum aliqua"
										},
										{
											"key": "queryState",
											"value": "aute ut id cillum aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Execute protection rules.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assetRuleIds\": [\n        \"consequat incididunt nostrud\",\n        \"esse ipsum irure nulla\"\n    ],\n    \"inventorySourceType\": \"XTREMIO_CONSISTENCY_GROUP\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"protection-rules-execution"
							]
						},
						"description": "Executes protection rules.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successfully triggered the protection rules.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				},
				{
					"name": "Get all recovery contexts.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recovery-contexts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recovery-contexts"
							]
						},
						"description": "Retrieves all recovery contexts.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"id\": \"magna dolor\",\n   \"name\": \"Excepteur eu dolore velit\",\n   \"description\": \"voluptate\",\n   \"systemTenantId\": \"proident\",\n   \"local\": false\n  },\n  {\n   \"id\": \"nulla irure Excepteur\",\n   \"name\": \"in nulla adipisici\",\n   \"description\": \"voluptate enim in \",\n   \"systemTenantId\": \"pariatur eiusmod veniam\",\n   \"local\": false\n  }\n ],\n \"page\": {\n  \"number\": -13676958,\n  \"queryState\": \"ipsum ullamco adipisicing eu Lorem\",\n  \"size\": -54803941,\n  \"totalElements\": 83067260,\n  \"totalPages\": -31235216\n }\n}"
						},
						{
							"name": "Successfully returned available recovery contexts.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"id\": \"nisi veniam in\",\n   \"name\": \"deserunt adipisicing sunt incididunt\",\n   \"description\": \"exercitation in cupidatat\",\n   \"systemTenantId\": \"commodo\",\n   \"local\": false\n  },\n  {\n   \"id\": \"Ut amet incididunt sit\",\n   \"name\": \"cupidatat ex ullamco veniam\",\n   \"description\": \"magna Excepteur consequat\",\n   \"systemTenantId\": \"Lorem sint mollit\",\n   \"local\": true\n  }\n ],\n \"page\": {\n  \"number\": 53066449,\n  \"queryState\": \"consectetur cupidatat esse\",\n  \"size\": 44596175,\n  \"totalElements\": 10923703,\n  \"totalPages\": -41651698\n }\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all server disaster recovery hosts.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"server-disaster-recovery-hosts"
							]
						},
						"description": "Retrieves a list of all the server disaster recovery hosts. The host info includes id, node id, host name, and version.\nThe nodeID is used to prepare the system for recovery. This API provides a list of available servers with DR backups, there could be more than one\n> This endpoint supports execution by the following roles: admin,user\n\n> This endpoint supports pagination with types: random\n"
					},
					"response": [
						{
							"name": "The request is Forbidden. An error response indicates that the client's request is formed correctly, but the REST API refuses to honor it, i.e. the user does not have the necessary permissions for the resource.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK. Retrieves a list of all the server disaster recovery hosts. The host info includes id, node id, host name, and version.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"hostname\": \"et sed\",\n   \"id\": \"laborum sed\",\n   \"nodeId\": \"ex reprehenderit anim\",\n   \"version\": \"officia\"\n  },\n  {\n   \"hostname\": \"qui\",\n   \"id\": \"et\",\n   \"nodeId\": \"ut\",\n   \"version\": \"qui eiusmod cupidatat id\"\n  }\n ]\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK. Retrieves a list of all the server disaster recovery hosts. The host info includes id, node id, host name, and version.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"hostname\": \"vm-griffin-131.asl.lab.emc.com\",\n   \"id\": \"6dbb318a-4929-483f-9261-90c4d4d8617a\",\n   \"nodeId\": \"6dbb318a-4929-483f-9261-90c4d4d8617a\",\n   \"version\": \"19.1.0-1-SNAPSHOT\"\n  },\n  {\n   \"hostname\": \"vm-griffin-131.asl.lab.emc.com\",\n   \"id\": \"26fbafe1-31ec-47db-98e9-0e362ddd8f0c\",\n   \"nodeId\": \"26fbafe1-31ec-47db-98e9-0e362ddd8f0c\",\n   \"version\": \"19.1.0-1-SNAPSHOT\"\n  },\n  {\n   \"hostname\": \"vm-griffin-197.asl.lab.emc.com\",\n   \"id\": \"2edeb671-80bc-4d80-a278-d134630d3ba6\",\n   \"nodeId\": \"2edeb671-80bc-4d80-a278-d134630d3ba6\",\n   \"version\": \"19.1.0-1-SNAPSHOT\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 3,\n  \"totalElements\": 3,\n  \"totalPages\": 1\n }\n}"
						},
						{
							"name": "The API request is bad. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get status of server disaster recovery restore.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"server-disaster-recovery-status"
							]
						},
						"description": "Retrieves the restore server disaster recovery status. The status includes action status like starting time, elapsed seconds, state, error, and so on.\nThe API is used by the UI to poll and check if restore is complete. Once the status is not active, the user is redirected to the login page.\n\n> This endpoint supports execution by the following roles: admin,user\n"
					},
					"response": [
						{
							"name": "The request is Forbidden. An error response indicates that the client's request is formed correctly, but the REST API refuses to honor it, i.e. the user does not have the necessary permissions for the resource.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The API request is bad. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request. The internal server error with this response status code whenever they execute some request handler code that raises an exception.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"backupRef\": {\n  \"id\": \"7259fe7d-6ed1-48a9-b9f3-47ee89305467\"\n },\n \"elapsedSeconds\": 3,\n \"error\": null,\n \"id\": \"56c7bb36-6fcb-46eb-9770-1c0178ae0d5d\",\n \"progress\": null,\n \"startTime\": \"2019-06-10T18:54:29.795+0000\",\n \"state\": \"Active\",\n \"type\": \"Recover\"\n}"
						},
						{
							"name": "OK. Retrieves the restore server disaster recovery status. The status includes action status like starting time, elapsed seconds, state, error ...etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"backupRef\": {\n  \"id\": \"in consectetur\"\n },\n \"elapsedSeconds\": 4779035,\n \"error\": \"culpa\",\n \"id\": \"sit adipisicing minim\",\n \"progress\": -56331020,\n \"startTime\": \"2019-06-01T23:54:33.268Z\",\n \"state\": \"dolor\",\n \"type\": \"Ut\"\n}"
						}
					]
				},
				{
					"name": "Get all supported time zones.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/timezones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"timezones"
							]
						},
						"description": "Retrieves all supported time zones.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
					},
					"response": [
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/timezones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"timezones"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/timezones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"timezones"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Located and returned the available time zones successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/timezones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"timezones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"tempor non\",\n  \"name\": \"Excepteu\"\n },\n {\n  \"id\": \"labore velit\",\n  \"name\": \"veniam\"\n }\n]"
						}
					]
				},
				{
					"name": "Renew the access token for extended usage period.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Authorization token.",
								"key": "Authorization",
								"value": "aute ut id cillum aliqua"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"r67fHTenZD.rYPCCesR.\",\n    \"grant_type\": \"refresh_token\",\n    \"scope\": \"ad proident\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"token"
							]
						},
						"description": "Extends the usage period of the user, as specified by the access token, by renewing the token. The grant_type in the request body must be refresh_token.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The request body is either invalid or is missing the required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "aute ut id cillum aliqua"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"r67fHTenZD.rYPCCesR.\",\n    \"grant_type\": \"refresh_token\",\n    \"scope\": \"ad proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully renewed the authorization token (also known as access token).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "aute ut id cillum aliqua"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"r67fHTenZD.rYPCCesR.\",\n    \"grant_type\": \"refresh_token\",\n    \"scope\": \"ad proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"hOaDxPS.JRCkQ.\",\n \"token_type\": \"et id quis in laborum\",\n \"expires_in\": 15495128,\n \"jti\": \"veniam deserunt dolore pariatur\",\n \"refresh_token\": \"tdh8HVyLQ.fVbNZk.\",\n \"scope\": \"consectetur Excepteur proident\"\n}"
						},
						{
							"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "aute ut id cillum aliqua"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"r67fHTenZD.rYPCCesR.\",\n    \"grant_type\": \"refresh_token\",\n    \"scope\": \"ad proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An internal server error occurred. Please contact the system administrator.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "aute ut id cillum aliqua"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"r67fHTenZD.rYPCCesR.\",\n    \"grant_type\": \"refresh_token\",\n    \"scope\": \"ad proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The authorization token is either invalid or expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "aute ut id cillum aliqua"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"r67fHTenZD.rYPCCesR.\",\n    \"grant_type\": \"refresh_token\",\n    \"scope\": \"ad proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Initiate agent installation on VM asset.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationType\": \"MSSQL\",\n    \"vmAssetId\": \"nisi commodo mollit magna\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"vm-agent-installation"
							]
						},
						"description": "Initiates agent installation on selected VM asset.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"MSSQL\",\n    \"vmAssetId\": \"nisi commodo mollit magna\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "Successfully triggered the agent installation process on VM.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"MSSQL\",\n    \"vmAssetId\": \"nisi commodo mollit magna\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"activityId\": \"incididunt reprehenderit\"\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"MSSQL\",\n    \"vmAssetId\": \"nisi commodo mollit magna\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"MSSQL\",\n    \"vmAssetId\": \"nisi commodo mollit magna\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"MSSQL\",\n    \"vmAssetId\": \"nisi commodo mollit magna\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 32375715,\n \"extendedInfo\": \"sit quis \",\n \"path\": \"dolore ullamco eu\",\n \"reason\": \"ipsum enim sint Ut\",\n \"remediation\": \"nostrud pariatur\",\n \"timestamp\": -42635489\n}"
						}
					]
				}
			]
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code == 200 and Set access_token\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var body = pm.response.json();",
							"    pm.environment.set(\"access_token\", body.access_token);",
							"    console.log('access_token', pm.environment.get('access_token'));",
							"    pm.environment.set(\"refresh_token\", body.refresh_token);",
							"    console.log('refresh_token', pm.environment.get('refresh_token'));",
							"});",
							"",
							"pm.test(\"Response has no error\", function () { ",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user}}\",\n    \"password\": \"{{pass}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v2//login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "1. Login",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{user}}\",\r\n  \"password\": \"{{pass}}\",\r\n  \"tenant\": \"admin\"\r\n}"
						},
						"url": {
							"raw": "{{base}}/login",
							"host": [
								"{{base}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Methods",
							"value": "PUT, POST, GET, OPTIONS, DELETE"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "3600"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "x-requested-with"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "1; mode=block"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=0"
						},
						{
							"key": "Content-Security-Policy",
							"value": "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'"
						},
						{
							"key": "X-Application-Context",
							"value": "edgeserver:eureka,jwt,jjwt:8443"
						},
						{
							"key": "Date",
							"value": "Wed, 23 Jan 2019 04:08:49 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/hal+json;charset=UTF-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"access_token\": \"eyJraWQiOiIyMTgyMTRiYi1kZDVkLTQ4ZjItYjU4Ni0xODFjODNiZmIxYmYiLCJhbGciOiJFUzI1NiJ9.eyJqdGkiOiJlOGM3OTY5OC1kZmQ5LTRlM2ItYTIzYS1lMGMwYjU1MDY0MGYiLCJpc3MiOiJlQ0RNIEFBQSBTZXJ2aWNlIiwiaWF0IjoxNTQ4MjE2NTI5LCJleHAiOjE1NDgyNDUzMjksImV4dCI6eyJzeXN0ZW0iOnsicm9sZSI6WyJBZG1pbiJdfSwiYXVkaXQiOnsidWlkIjoiMDAwMDAwMDAtMDAwMC00MDAwLWEwMDAtMDAwMDAwMDAwMDAwIn19LCJzdWIiOiJhZG1pbiIsImF1dGhvcml6YXRpb24tdG9rZW4tYml0bWFwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJhdXRoZW50aWNhdGVkIjp0cnVlLCJpZCI6IjAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsInVzZXJUeXBlIjoiTE9DQUwiLCJ0aW1lc3RhbXAiOjAsImNyZWF0aW9uVGltZSI6MCwidGVuYW50U2NvcGUiOiIvMDAwMDAwMDAtMDAwMC00MDAwLWIwMDAtMDAwMDAwMDAwMDAwLzAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsImF1dGhvcml0aWVzIjpbeyJ0ZW5hbnRzIjpbIjAwMDAwMDAwLTAwMDAtNDAwMC1iMDAwLTAwMDAwMDAwMDAwMCJdLCJwcml2aWxlZ2VzIjpbIjE3MTc5ODY5MTgzIl0sInJvbGVzIjpbIjJiYzkwMDIwLTc2NzUtMDEzNi0yOWU5LTViYmQzY2U3MjliMCJdfV19LCJydGkiOiJhMDliZGE1Ni1kMmVmLTQ2NDctOTM2Ni00NTc5NzAzOWY2ZDgifQ.R1hIHb1bxA8XvpjbiIREYIjExU72omx1GC2zcl3OE9QUk8xVc71ytgMoEcushfy-toLAWy3eLfH36M5TNj1EAg\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 28800,\n    \"jti\": \"e8c79698-dfd9-4e3b-a23a-e0c0b550640f\",\n    \"scope\": \"aaa\",\n    \"refresh_token\": \"eyJraWQiOiIyMTgyMTRiYi1kZDVkLTQ4ZjItYjU4Ni0xODFjODNiZmIxYmYiLCJhbGciOiJFUzI1NiJ9.eyJqdGkiOiJhMDliZGE1Ni1kMmVmLTQ2NDctOTM2Ni00NTc5NzAzOWY2ZDgiLCJpc3MiOiJlQ0RNIEFBQSBTZXJ2aWNlIiwiaWF0IjoxNTQ4MjE2NTI5LCJleHAiOjE1NDgzMDI5MjksInN1YiI6ImFkbWluIiwiYXVkIjoiYWFhLnRva2VuLnJlZnJlc2gifQ.TmgNI9vYy5OlOfmB1KNeHhq4I-kbFw8Oz0yhBWTWVLer-VVP86lq2k0mIby6-AdErmqWyNAAYD3hTZ9enRohMw\"\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:8443",
			"type": "string"
		}
	]
}